{
    "pipes": [
        {
            "name": "ShortNumberPipe",
            "id": "pipe-ShortNumberPipe-2fbcb2c02967451ddfab5b9caa2ce9d8",
            "file": "src/app/pipe/shortNumber/short-number.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "shortNumber",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'shortNumber'\r\n})\r\nexport class ShortNumberPipe implements PipeTransform {\r\n\r\n  transform(number: number, args?: any): any {\r\n    if (isNaN(number)) return null; // will only work value is a number\r\n    if (number === null) return null;\r\n    if (number === 0) return null;\r\n    let abs = Math.abs(number);\r\n    const rounder = Math.pow(10, 1);\r\n    const isNegative = number < 0; // will also work for Negetive numbers\r\n    let key = '';\r\n\r\n    const powers = [\r\n        // {key: 'Q', value: Math.pow(10, 15)},\r\n        {key: 'T', value: Math.pow(10, 12)},\r\n        {key: 'B', value: Math.pow(10, 9)},\r\n        {key: 'M', value: Math.pow(10, 6)},\r\n        {key: 'K', value: 1000}\r\n    ];\r\n\r\n    for (let i = 0; i < powers.length; i++) {\r\n        let reduced = abs / powers[i].value;\r\n        reduced = Math.round(reduced * rounder) / rounder;\r\n        if (reduced >= 1) {\r\n            abs = reduced;\r\n            key = powers[i].key;\r\n            break;\r\n        }\r\n    }\r\n    return (isNegative ? '-' : '') + abs + key;\r\n}\r\n\r\n}\r\n"
        },
        {
            "name": "TransformDatePipe",
            "id": "pipe-TransformDatePipe-b72abd6f9c9d9c7786f90fd100e0eac8",
            "file": "src/app/pipe/transform-date/transform-date.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [
                {
                    "name": "_appRepoHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppRepoHelperService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "transformDate",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AppRepoService } from 'src/app/services/common/app-repo.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { APP_SETTING } from 'src/app/constants/app-repo.constants';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\n\r\n@Pipe({\r\n  name: 'transformDate'\r\n})\r\nexport class TransformDatePipe implements PipeTransform {\r\n\r\n  constructor(public _appRepoHelperService: AppRepoHelperService, private datePipe: DatePipe) {\r\n  }\r\n  \r\n  transform(date: Date | string): string {\r\n    if (date) {\r\n      date = new Date(date);\r\n      const dateformat = this._appRepoHelperService.getAppSTByCode(APP_SETTING.DATE_FORMAT)\r\n      return this.datePipe.transform(date, dateformat.Value)\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n"
        },
        {
            "name": "TransformDateTimePipe",
            "id": "pipe-TransformDateTimePipe-ce5834411b03f4baa830f3b5727d277d",
            "file": "src/app/pipe/transform-date-time/transform-date-time.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [
                {
                    "name": "_appRepoHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppRepoHelperService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "datetime",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "datetime",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "transformDateTime",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AppRepoService } from 'src/app/services/common/app-repo.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { APP_SETTING } from 'src/app/constants/app-repo.constants';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\n\r\n@Pipe({\r\n  name: 'transformDateTime'\r\n})\r\nexport class TransformDateTimePipe implements PipeTransform {\r\n\r\n  constructor(public _appRepoHelperService: AppRepoHelperService, private datePipe: DatePipe) {\r\n  }\r\n  \r\n  transform(datetime: Date | string): string {\r\n    if (datetime) {\r\n      datetime = new Date(datetime);\r\n      const dateTimeformat = this._appRepoHelperService.getAppSTByCode(APP_SETTING.DATE_TIME_FORMAT)\r\n      return this.datePipe.transform(datetime\r\n      , dateTimeformat.Value)\r\n    }\r\n    return null;\r\n  }\r\n\r\n}"
        }
    ],
    "interfaces": [
        {
            "name": "IHelpTextData",
            "id": "interface-IHelpTextData-d39b7de8a485952de9930f681c2c709d",
            "file": "src/app/modules/widget-utility/iwidget.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHelpTextData{\r\n    getLabelShortHelpText(name: string);\r\n    getIconDetailsHelpText(name: string);\r\n    hasHelpIcon(name: string);\r\n}\r\n\r\nexport interface IWidget{\r\n    // convert api response data\r\n    ConvertData(response: any);\r\n\r\n}\r\n\r\nexport interface IWidgetSubmit {\r\n    Validate():boolean;\r\n    GetValue();\r\n    Reset();\r\n    SetValue(value); \r\n}\r\n\r\nexport interface IWidgetConfig{\r\n    EventAction : Map<string,any>;    \r\n}\r\n\r\nexport interface IWidgetGlobalDataAccess {\r\n    //This method will set the global parameter in request data.\r\n    SetRequestData() \r\n    SetFormData();\r\n}",
            "properties": [],
            "indexSignatures": [],
            "kind": 165,
            "methods": [
                {
                    "name": "getIconDetailsHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLabelShortHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasHelpIcon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "IWidget",
            "id": "interface-IWidget-d39b7de8a485952de9930f681c2c709d",
            "file": "src/app/modules/widget-utility/iwidget.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHelpTextData{\r\n    getLabelShortHelpText(name: string);\r\n    getIconDetailsHelpText(name: string);\r\n    hasHelpIcon(name: string);\r\n}\r\n\r\nexport interface IWidget{\r\n    // convert api response data\r\n    ConvertData(response: any);\r\n\r\n}\r\n\r\nexport interface IWidgetSubmit {\r\n    Validate():boolean;\r\n    GetValue();\r\n    Reset();\r\n    SetValue(value); \r\n}\r\n\r\nexport interface IWidgetConfig{\r\n    EventAction : Map<string,any>;    \r\n}\r\n\r\nexport interface IWidgetGlobalDataAccess {\r\n    //This method will set the global parameter in request data.\r\n    SetRequestData() \r\n    SetFormData();\r\n}",
            "properties": [],
            "indexSignatures": [],
            "kind": 165,
            "methods": [
                {
                    "name": "ConvertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "IWidgetConfig",
            "id": "interface-IWidgetConfig-d39b7de8a485952de9930f681c2c709d",
            "file": "src/app/modules/widget-utility/iwidget.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHelpTextData{\r\n    getLabelShortHelpText(name: string);\r\n    getIconDetailsHelpText(name: string);\r\n    hasHelpIcon(name: string);\r\n}\r\n\r\nexport interface IWidget{\r\n    // convert api response data\r\n    ConvertData(response: any);\r\n\r\n}\r\n\r\nexport interface IWidgetSubmit {\r\n    Validate():boolean;\r\n    GetValue();\r\n    Reset();\r\n    SetValue(value); \r\n}\r\n\r\nexport interface IWidgetConfig{\r\n    EventAction : Map<string,any>;    \r\n}\r\n\r\nexport interface IWidgetGlobalDataAccess {\r\n    //This method will set the global parameter in request data.\r\n    SetRequestData() \r\n    SetFormData();\r\n}",
            "properties": [
                {
                    "name": "EventAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IWidgetGlobalDataAccess",
            "id": "interface-IWidgetGlobalDataAccess-d39b7de8a485952de9930f681c2c709d",
            "file": "src/app/modules/widget-utility/iwidget.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHelpTextData{\r\n    getLabelShortHelpText(name: string);\r\n    getIconDetailsHelpText(name: string);\r\n    hasHelpIcon(name: string);\r\n}\r\n\r\nexport interface IWidget{\r\n    // convert api response data\r\n    ConvertData(response: any);\r\n\r\n}\r\n\r\nexport interface IWidgetSubmit {\r\n    Validate():boolean;\r\n    GetValue();\r\n    Reset();\r\n    SetValue(value); \r\n}\r\n\r\nexport interface IWidgetConfig{\r\n    EventAction : Map<string,any>;    \r\n}\r\n\r\nexport interface IWidgetGlobalDataAccess {\r\n    //This method will set the global parameter in request data.\r\n    SetRequestData() \r\n    SetFormData();\r\n}",
            "properties": [],
            "indexSignatures": [],
            "kind": 165,
            "methods": [
                {
                    "name": "SetFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "SetRequestData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "IWidgetPermission",
            "id": "interface-IWidgetPermission-a1042c13b64ca86963e80d22c21d14d8",
            "file": "src/app/modules/widget-utility/iwidgetpermission.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWidgetPermission {\r\n    getReadPermission(control : string);\r\n    getVisiblePermission(control : string): boolean\r\n}",
            "properties": [],
            "indexSignatures": [],
            "kind": 165,
            "methods": [
                {
                    "name": "getReadPermission",
                    "args": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVisiblePermission",
                    "args": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "IWidgetSubmit",
            "id": "interface-IWidgetSubmit-d39b7de8a485952de9930f681c2c709d",
            "file": "src/app/modules/widget-utility/iwidget.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHelpTextData{\r\n    getLabelShortHelpText(name: string);\r\n    getIconDetailsHelpText(name: string);\r\n    hasHelpIcon(name: string);\r\n}\r\n\r\nexport interface IWidget{\r\n    // convert api response data\r\n    ConvertData(response: any);\r\n\r\n}\r\n\r\nexport interface IWidgetSubmit {\r\n    Validate():boolean;\r\n    GetValue();\r\n    Reset();\r\n    SetValue(value); \r\n}\r\n\r\nexport interface IWidgetConfig{\r\n    EventAction : Map<string,any>;    \r\n}\r\n\r\nexport interface IWidgetGlobalDataAccess {\r\n    //This method will set the global parameter in request data.\r\n    SetRequestData() \r\n    SetFormData();\r\n}",
            "properties": [],
            "indexSignatures": [],
            "kind": 165,
            "methods": [
                {
                    "name": "GetValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "Reset",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "SetValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "Validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "PerformanceCard1Data",
            "id": "interface-PerformanceCard1Data-85fcac3cbcdc105b5a3f8270e755c22b",
            "file": "src/app/modules/widget-app/performace-card1/performance-card1-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventEmitter } from 'events';\r\n\r\nexport class PerformanceCard1ConfigModel {\r\n  static getInstance<T>(): PerformanceCard1ConfigModel {\r\n    let model = new PerformanceCard1ConfigModel();\r\n    return model\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class PerformanceCard1DataModel {\r\n    globalParameters: any;\r\n    isGlobalParams: any;\r\n    isSelfDataLoad: any;\r\n    data: any;\r\n    promoterPrefix: any;\r\n    widgetStyle: any;\r\n \r\n    static getInstance<T>(): PerformanceCard1DataModel {\r\n      let model = new PerformanceCard1DataModel();\r\n      model.isSelfDataLoad = false;\r\n      model.globalParameters = new Map<any, any>();\r\n      return model;\r\n    }\r\n  }\r\n\r\n  export interface PerformanceCard1Data {\r\n    isIconEnable: boolean,\r\n    isMatIcon: boolean,\r\n    icon: string,\r\n    iconColor: string,\r\n    isTextEnable: boolean,\r\n    text: string,\r\n    textColor: string,\r\n    isCountEnable: boolean,\r\n    count: string,\r\n    countColor: string,\r\n    backgroundColor: string,\r\n    widgetStyle : any\r\n  }",
            "properties": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "countColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "iconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "isCountEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isIconEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isMatIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isTextEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "textColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "widgetStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "PerformanceCard2Data",
            "id": "interface-PerformanceCard2Data-a4fba5e841e01d7fb0da1deffdbec851",
            "file": "src/app/modules/widget-app/performance-card2/performance-card2-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventEmitter } from 'events';\r\n\r\nexport class PerformanceCard2ConfigModel {\r\n  static getInstance<T>(): PerformanceCard2ConfigModel {\r\n    let model = new PerformanceCard2ConfigModel();\r\n    return model\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class PerformanceCard2DataModel {\r\n    globalParameters: any;\r\n    isGlobalParams: any;\r\n    isSelfDataLoad: any;\r\n    data: any;\r\n    promoterPrefix: any;\r\n    widgetStyle: any;\r\n \r\n    static getInstance<T>(): PerformanceCard2DataModel {\r\n      let model = new PerformanceCard2DataModel();\r\n      model.isSelfDataLoad = false;\r\n      model.globalParameters = new Map<any, any>();\r\n      return model;\r\n    }\r\n  }\r\n\r\n  export interface PerformanceCard2Data {\r\n    isIconEnable: boolean,\r\n    isMatIcon: boolean,\r\n    icon: string,\r\n    iconColor: string,\r\n    isTextEnable: boolean,\r\n    text: string,\r\n    textColor: string,\r\n    isCountEnable: boolean,\r\n    count: string,\r\n    countColor: string,\r\n    subtext:string,\r\n    sbutext2:string,\r\n    backgroundColor: string,\r\n    widgetStyle : any\r\n  }",
            "properties": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "countColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "iconColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "isCountEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isIconEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isMatIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isTextEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "sbutext2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "subtext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "textColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "widgetStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Task",
            "id": "interface-Task-0136f9ce0279af1639d6f793980c7695",
            "file": "src/app/models/task.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Task {\r\n    id: string;\r\n    title: string;\r\n    state: string;\r\n  }",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ApiErrorService",
            "id": "injectable-ApiErrorService-4879d87f475601d141cc9f1fe3a129b7",
            "file": "src/app/services/common/api-error.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "handleApiError",
                    "args": [
                        {
                            "name": "payloadError",
                            "type": "PayloadError",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errorParams",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "payloadError",
                            "type": "PayloadError",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorParams",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "operation",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'operation'"
                        },
                        {
                            "name": "result",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "(error: any) => any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "operation",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'operation'",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "result",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { PayloadError } from 'src/app/models/common/payload-error';\r\nimport {ErrorCodes  } from 'src/app/models/common/error-codes';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiErrorService {\r\n\r\n  constructor(private _toastnotificationservice: ToastrService) { }\r\n  handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // displaying error notification based on error code.\r\n      // TODO: send the error to remote logging infrastructure\r\n\r\n      switch (error.status) {\r\n        case 401:\r\n          // user is not autheticated, redirect to login page\r\n          // this.router.navigate(['login']);\r\n          // this.router.navigate(['unauthorized']);\r\n          break;\r\n        case 403:\r\n          // No access to a resource, redirect to login or not authorized page\r\n          break;\r\n        case 404:\r\n          // not found, display error to user\r\n          break;\r\n        case 503:\r\n          // site under maintaince\r\n          break;\r\n        default:\r\n          // display error occured to user.\r\n          break;\r\n      }\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      // this.log(`${operation} failed: ${error.message}`);\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  handleApiError(payloadError: PayloadError, errorParams?: string[]) {\r\n    let errorMessage: string;\r\n    if (payloadError) {\r\n      \r\n    } else {\r\n      // display common error message if server has not reverted with proper error.\r\n      errorMessage = ('SERVER_UNKNOWN_ERROR');\r\n    }\r\n    this._toastnotificationservice.error(errorMessage);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_toastnotificationservice",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_toastnotificationservice",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AppRepoHelperService",
            "id": "injectable-AppRepoHelperService-84a58c399b10d75fce528fa891ff814a",
            "file": "src/app/services/common/app-repo-helper.service.ts",
            "properties": [
                {
                    "name": "_appRepoService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppRepoService",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "convertDBDateToISO",
                    "args": [
                        {
                            "name": "dateValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAppSTByCode",
                    "args": [
                        {
                            "name": "code",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMDataByCAT",
                    "args": [
                        {
                            "name": "categoryCode",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "categoryCode",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMDataByCode",
                    "args": [
                        {
                            "name": "code",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNavigationData",
                    "args": [
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNavigationData",
                    "args": [
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ConvertActionBindingResult } from '@angular/compiler/src/compiler_util/expression_converter';\r\nimport { Injectable, OnDestroy, Inject, LOCALE_ID } from '@angular/core';\r\nimport { AppRepoService } from './app-repo.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AppRepoHelperService {\r\n    constructor(public _appRepoService: AppRepoService,\r\n        @Inject(LOCALE_ID) private locale: string) { }\r\n\r\n    getAppSTByCode(code: any) {\r\n      return this._appRepoService.appRepo.appSettingsMap.get(code);\r\n    }\r\n\r\n    getMDataByCAT(categoryCode: any) {\r\n        return this._appRepoService.appRepo.masterDataByCategoryCode.get(categoryCode);\r\n    }\r\n\r\n    getMDataByCode(code: any) {\r\n        return this._appRepoService.appRepo.masterDataByCode.get(code);\r\n    }\r\n\r\n    setNavigationData(key:any, value:any) {\r\n        this._appRepoService.appRepo.navigationData.set(key, value)\r\n    }\r\n    getNavigationData(key:any) {\r\n     return  this._appRepoService.appRepo.navigationData.get(key)\r\n    }\r\n\r\n    convertDBDateToISO(dateValue:any){\r\n        return dateValue ? (new Date(dateValue)).toISOString() : dateValue;       \r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_appRepoService",
                        "type": "AppRepoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_appRepoService",
                        "type": "AppRepoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AppRepoService",
            "id": "injectable-AppRepoService-d9c59d6e3fe3614b7a2ddc30f37d5921",
            "file": "src/app/services/common/app-repo.service.ts",
            "properties": [
                {
                    "name": "_instance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppRepoService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "appRepo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppRepoModel",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\r\nimport { AppRepoModel } from 'src/app/models/common/app-repo';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AppRepoService implements OnDestroy {\r\n\r\n    static _instance: AppRepoService;\r\n\r\n    appRepo: AppRepoModel;\r\n   \r\n    constructor() {\r\n        AppRepoService._instance = this;\r\n\r\n         this.appRepo = new AppRepoModel();\r\n    }\r\n\r\n    \r\n    ngOnDestroy(): void {\r\n\r\n    }\r\n    \r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "type": "injectable"
        },
        {
            "name": "ComponentBuilderService",
            "id": "injectable-ComponentBuilderService-2fe05c998823743019cbc84b41c4ffb8",
            "file": "src/app/services/component-builder/component-builder.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ComponentFactoryResolver, ComponentRef, Injectable } from '@angular/core';\r\n// import { WIDGET_LIBRARY } from 'src/app/app-constants';\r\n// import { PlaceHolderComponent } from 'src/app/modules/shared/place-holder/place-holder.component';\r\n\r\n// import { BarChartA4Component } from 'src/app/modules/widgets/barchart/bar-chart-a4/bar-chart-a4.component';\r\n// import { BarChartA4Model, BarChartA4ConfigModel } from 'src/app/modules/widgets/barchart/bar-chart-a4/bar-chart-a4-model';\r\n// import { PieChartA2Component } from 'src/app/modules/widgets/piechart/pie-chart-a2/pie-chart-a2.component';\r\n// import { PieChartA2Model, PieChartA2ConfigModel } from 'src/app/modules/widgets/piechart/pie-chart-a2/pie-chart-a2-model';\r\n// import { LineChartA2Component } from 'src/app/modules/widgets/linechart/line-chart-a2/line-chart-a2.component';\r\n// import { LineChartA2Model, LineChartA2ConfigModel } from 'src/app/modules/widgets/linechart/line-chart-a2/line-chart-a2-model';\r\n// import { ProgressBarA2Component } from 'src/app/modules/widgets/progressbar/progress-bar-a2/progress-bar-a2.component';\r\n// import { ProgressA2Model, ProgressA2ConfigModel } from 'src/app/modules/widgets/progressbar/progress-bar-a2/progress-bar-a2-model';\r\n// import { BarLineComboChartA1Component } from 'src/app/modules/widgets/comboChart/bar-line-combo-chart-a1/bar-line-combo-chart-a1.component';\r\n// import { BarLineComboChartA1A1Model, BarLineComboChartA1ConfigModel } from 'src/app/modules/widgets/comboChart/bar-line-combo-chart-a1/bar-line-combo-chart-a1-model';\r\n// import { PieGridA1Component } from 'src/app/modules/widgets/piegrid/pie-grid-a1/pie-grid-a1.component';\r\n// import { PieGridA1Model, PieGridA1ConfigModel } from 'src/app/modules/widgets/piegrid/pie-grid-a1/pie-grid-a1-model';\r\n// import { ProgressBarA1Component } from 'src/app/modules/widgets/progressbar/progress-bar-a1/progress-bar-a1.component';\r\n// import { ProgressA1Model, ProgressA1ConfigModel } from 'src/app/modules/widgets/progressbar/progress-bar-a1/progress-a1-model';\r\n// import { AreaChartA1Component } from 'src/app/modules/widgets/areachart/area-chart-a1/area-chart-a1.component';\r\n// import { AreaChartA1Model, AreaChartA1ConfigModel } from 'src/app/modules/widgets/areachart/area-chart-a1/area-chart-a1-model';\r\n// import { StepperA1Component } from 'src/app/modules/widgets/stepper/stepper-a1/stepper-a1.component';\r\n// import { StepperA1Model, StepperA1ConfigModel } from 'src/app/modules/widgets/stepper/stepper-a1/stepper-a1-model';\r\n// import { StatReportA1Component } from 'src/app/modules/widgets/statreport/stat-report-a1/stat-report-a1.component';\r\n// import { StatReportA1Model, StatReportA1ConfigModel } from 'src/app/modules/widgets/statreport/stat-report-a1/stat-report-a1-model';\r\n// import { MatBA1Component } from 'src/app/modules/widget-app/data-input/mat-bil-a1/mat-b-a1/mat-b-a1.component';\r\n// import { MatBDataA1ConfigModel, MatBDataA1Model } from 'src/app/modules/widget-app/data-input/mat-bil-a1/mat-b-a1/mat-b-a1-model';\r\n// import { BillingFormA1Model, BillingFormA1ConfigModel } from 'src/app/modules/widget-app/billing-form/billing-form-a1/billing-form-a1-model';\r\n// import { BillingFormA1Component } from 'src/app/modules/widget-app/billing-form/billing-form-a1/billing-form-a1.component';\r\n// import { ButtonA1Component } from 'src/app/modules/widgets/button/button-a1/button-a1.component';\r\n// import { ButtonA1Model, ButtonA1ConfigModel } from 'src/app/modules/widgets/button/button-a1/button-a1-model';\r\n// import { AddButtonComponent } from 'src/app/modules/widget-app/add-button/add-button.component';\r\n// import { AddButtonModel, AddButtonConfigModel } from 'src/app/modules/widget-app/add-button/add-button-model';\r\n// import { DataFormComponent } from 'src/app/modules/widget-app/dataForm/data-form/data-form.component';\r\n// import { DataFormConfigModel, DataFormModel } from 'src/app/modules/widget-app/dataForm/data-form/data-form-model';\r\n// import { VerticalTimelineComponent } from 'src/app/modules/widget-app/vertical-timeline/vertical-timeline.component';\r\n// import { VerticalTimelineModel, VerticalTimelineConfigModel } from 'src/app/modules/widget-app/vertical-timeline/vertical-timeline-model';\r\n// import { NavigationComponent } from 'src/app/modules/widget-app/navigation/navigation.component';\r\n// import { NavigationConfigModel, NavigationModel } from 'src/app/modules/widget-app/navigation/navigation-model';\r\n// import { FileExplorerComponent } from 'src/app/modules/widget-app/fileExplorer/file-explorer/file-explorer.component';\r\n// import { FileExplorerModel, FileExplorerConfigModel } from 'src/app/modules/widget-app/fileExplorer/file-explorer/file-explorer-model';\r\n// import { FileUploadComponent } from 'src/app/modules/widget-app/file-upload/file-upload.component';\r\n// import { FileUploadModel, FileUploadConfigModel } from 'src/app/modules/widget-app/file-upload/file-upload-model';\r\n// import { NewRegistrationComponent } from 'src/app/modules/widget-app/new-registration/new-registration.component';\r\n// import { NewRegistrationModel, NewRegistrationConfigModel } from 'src/app/modules/widget-app/new-registration/new-registration-model';\r\n// import { RegistrationFormComponent } from 'src/app/modules/widget-app/registration-form/registration-form.component';\r\n// import { RegistrationFormConfigModel, RegistrationFormModel } from 'src/app/modules/widget-app/registration-form/registration-form-model';\r\n// import { ContactFormComponent } from 'src/app/modules/widget-app/contact-form/contact-form.component';\r\n// import { ContactFormConfigModel, ContactFormModel } from 'src/app/modules/widget-app/contact-form/contact-form-model';\r\n// import { TaxFormComponent } from 'src/app/modules/widget-app/tax-form/tax-form.component';\r\n// import { TaxFormConfigModel, TaxFormModel } from 'src/app/modules/widget-app/tax-form/tax-form-model';\r\n// import { OrganizationFormComponent } from 'src/app/modules/widget-app/organization-form/organization-form.component';\r\n// import { OrganizationFormModel, OrganizationFormConfigModel } from 'src/app/modules/widget-app/organization-form/organization-form-model';\r\n// import { AccountDeptComponent } from 'src/app/modules/widget-app/account-dept/account-dept.component';\r\n// import { AccountDeptConfigModel, AccountDeptModel } from 'src/app/modules/widget-app/account-dept/account-dept-model';\r\n// import { BankFormComponent } from 'src/app/modules/widget-app/bank-form/bank-form.component';\r\n// import { BankFormModel, BankFormConfigModel } from 'src/app/modules/widget-app/bank-form/bank-form-model';\r\n// import { GstFormComponent } from 'src/app/modules/widget-app/gst-form/gst-form.component';\r\n// import { GstFormModel, GstFormConfigModel } from 'src/app/modules/widget-app/gst-form/gst-form-model';\r\n// import { ContinueRegistrationComponent } from 'src/app/modules/widget-app/continue-registration/continue-registration.component';\r\n// import { ContinueRegFormModel, ContinueRegFormConfigModel } from 'src/app/modules/widget-app/continue-registration/continue-registration-model';\r\n// import { DropdownA1Component } from 'src/app/modules/widget-app/dropdown-a1/dropdown-a1.component';\r\n// import { dropdownFormModel, DropdownA1Model, DropdownA1ConfigModel } from 'src/app/modules/widget-app/dropdown-a1/dropdown-a1-model';\r\n// import { DragdropComponent } from 'src/app/modules/widget-app/drag-drop/dragdrop.component';\r\n// import { CrAddCaseinfoFormComponent } from 'src/app/modules/widget-app/cr-add-caseinfo-form/cr-add-caseinfo-form.component';\r\n// import { CaseInformationModel, CaseInformationConfigModel } from 'src/app/modules/widget-app/cr-add-caseinfo-form/cr-add-caseinfo-form.model';\r\n// import { CrSelectCertificateFormComponent } from 'src/app/modules/widget-app/cr-select-certificate-form/cr-select-certificate-form.component';\r\n// import { SelectCertificateDataModel, SelectCertificateFormConfigModel } from 'src/app/modules/widget-app/cr-select-certificate-form/cr-select-certificate-form.model';\r\n// import { DragdropModel, DragdropConfigModel } from 'src/app/modules/widget-app/drag-drop/dragdrop-model';\r\n// import { BillingDataModel, BillingConfigModel } from 'src/app/modules/widget-app/cr-add-billing/cr-add-billing.model';\r\n// import { CrAddBillingComponent } from 'src/app/modules/widget-app/cr-add-billing/cr-add-billing.component';\r\n// import { CrAddBillingManufactureDetailsComponent } from 'src/app/modules/widget-app/cr-add-billing-manufacture-details/cr-add-billing-manufacture-details.component';\r\n// import { BillingMDDataModel, BillingMDConfigModel } from 'src/app/modules/widget-app/cr-add-billing-manufacture-details/cr-add-billing-manufacture-details.model';\r\n// import { HorizontalStepperModel, HorizontalStepperConfigModel } from 'src/app/modules/widgets/horizontal-stepper/horizontal-stepper-model';\r\n// import { HorizontalStepperComponent } from 'src/app/modules/widgets/horizontal-stepper/horizontal-stepper.component';\r\n// import { ButtonA2Component } from 'src/app/modules/widgets/button/button-a2/button-a2.component';\r\n// import { ButtonA2ConfigModel, ButtonA2DataModel } from 'src/app/modules/widgets/button/button-a2/button-a2.model';\r\n// import { VehicleModelSelectionComponent } from 'src/app/modules/widget-app/vehicle-model-selection/vehicle-model-selection.component';\r\n// import { ModelSelectionModel, ModelSelectionConfigModel } from 'src/app/modules/widget-app/vehicle-model-selection/vehicle-model-selection-model';\r\n// import { TableA2Component } from 'src/app/modules/widget-app/data-input/table-a1/table-a2.component';\r\n// import { TableA2Model, TableA2ConfigModel } from 'src/app/modules/widget-app/data-input/table-a1/table-a2-model';\r\n// import { CrAddShippingFormComponent } from 'src/app/modules/widget-app/cr-add-shipping-form/cr-add-shipping-form.component';\r\n// import { CrAddCaseCoOrdFormComponent } from 'src/app/modules/widget-app/cr-add-case-co-ord-form/cr-add-case-co-ord-form.component';\r\n// import { CaseCoOrdinatiorDataModel, CaseCoOrdinatiorConfigModel } from 'src/app/modules/widget-app/cr-add-case-co-ord-form/cr-add-case-co-ord.model';\r\n// import { ShippingConfigModel, ShippingDataModel } from 'src/app/modules/widget-app/cr-add-shipping-form/cr-add-shipping-form.model';\r\n// import { UploadFormComponent } from 'src/app/modules/widget-app/upload-form/upload-form.component';\r\n// import { UploadFormModel, UploadFormConfigModel } from 'src/app/modules/widget-app/upload-form/upload-form-model';\r\n// import { DropdownA2Component } from 'src/app/modules/widget-app/dropdown-a2/dropdown-a2.component';\r\n// import { DropdownA2ConfigModel, DropdownA2Model } from 'src/app/modules/widget-app/dropdown-a2/dropdown-a2-model';\r\n// // import { CrAddShippingFormComponent } from 'src/app/modules/widget-app/cr-add-shipping-form/cr-add-shipping-form.component';\r\n// // import { ShippingDataModel, ShippingConfigModel } from 'src/app/modules/widget-app/cr-add-shipping-form/cr-add-shipping-form.model';\r\n// import { CrUploadDocExcelTablesComponent } from 'src/app/modules/widget-app/cr-upload-doc-excel-tables/cr-upload-doc-excel-tables.component';\r\n// import { UploadDocExcelTablesDataModel, UploadDocExcelTablesConfigModel } from 'src/app/modules/widget-app/cr-upload-doc-excel-tables/cr-upload-doc-excel-tables-model';\r\n// import { DocumentVerificationComponent } from 'src/app/modules/widget-app/document-verification/document-verification.component';\r\n// import { DocumentVerificationModel, DocumentVerificationConfigModel } from 'src/app/modules/widget-app/document-verification/document-verification-model';\r\n// import { ConfirmationTextComponent } from 'src/app/modules/widget-app/confirmation-text/confirmation-text.component';\r\n// import { ConfirmationTextModel, ConfirmationTextConfigModel } from 'src/app/modules/widget-app/confirmation-text/confirmation-text-model';\r\n// // import { TableA2Component } from 'src/app/modules/widget-app/data-input/table-a1/table-a2.component';\r\n// import { CaseListRegistrationModel, CaseListRegistrationConfigModel } from 'src/app/modules/widget-app/case-list-registration/case-list-registration-model';\r\n// import { CaseListRegistrationComponent } from 'src/app/modules/widget-app/case-list-registration/case-list-registration.component';\r\n// import { CaseListDetailsComponent } from 'src/app/modules/widget-app/case-list-details/case-list-details.component';\r\n// import { CaseListDetailsConfigModel, CaseListDetailsModel } from 'src/app/modules/widget-app/case-list-details/case-list-details-model';\r\n// import { UserAddComponent } from 'src/app/modules/widget-app/user-management/user-add/user-add.component';\r\n// import { AddUserConfigModel, AddUserDataModel } from 'src/app/modules/widget-app/user-management/user-add/user-add-form.model';\r\n// import { NewRegistrationForm2Component } from 'src/app/modules/widget-app/new-registration-form2/new-registration-form2.component';\r\n// import { NewRegistrationForm2Model, NewRegistrationForm2ConfigModel } from 'src/app/modules/widget-app/new-registration-form2/new-registration-form2-model';\r\n// import { UserFilterConfigModel, UserFilterDataModel } from 'src/app/modules/widget-app/user-management/user-filter/user-filter-form.model';\r\n// import { UserFilterComponent } from 'src/app/modules/widget-app/user-management/user-filter/user-filter.component';\r\n// import { QuotationSearchComponent } from 'src/app/modules/widget-app/quotation/quotation-search/quotation-search.component';\r\n// import { QuotationSearchConfigModel, QuotationSearchDataModel } from 'src/app/modules/widget-app/quotation/quotation-search/quotation-search.model';\r\n// import { ChangePasswordDataModel, ChangePasswordConfigModel } from 'src/app/modules/widget-app/user-management/change-password/change-password-form.model';\r\n// import { ChangePasswordComponent } from 'src/app/modules/widget-app/user-management/change-password/change-password.component';\r\n// import { MatTabComponent } from 'src/app/modules/widget-app/mat-tab/mat-tab.component';\r\n// import { MatTabModel, MatTabConfigModel } from 'src/app/modules/widget-app/mat-tab/mat-tab-model';\r\n// import { CaseSearchConfigModel, CaseSearchDataModel } from 'src/app/modules/widget-app/case/case-search/case-search-model';\r\n// import { CaseSearchComponent } from 'src/app/modules/widget-app/case/case-search/case-search.component';\r\n// import { AddShippingSearchComponent } from 'src/app/modules/widget-app/add-shipping/add-shipping-search/add-shipping-search.component';\r\n// import { AddShippingSearchConfigModel, AddShippingSearchDataModel } from 'src/app/modules/widget-app/add-shipping/add-shipping-search/add-shipping-search-model';\r\n// import { CrCaseCoOrdSearchComponent } from 'src/app/modules/widget-app/cr-case-co-ord-search/cr-case-co-ord-search.component';\r\n// import { MatTabA1ConfigModel, MatTabA1Model } from 'src/app/modules/widget-app/mat-tab-a1/mat-tab-a1-model';\r\n// import { MatTabA1Component } from 'src/app/modules/widget-app/mat-tab-a1/mat-tab-a1.component';\r\n// import { CompanyFilterComponent } from 'src/app/modules/widget-app/company/company-filter/company-filter.component';\r\n// import { CompanyFilterConfigModel, CompanyFilterDataModel } from 'src/app/modules/widget-app/company/company-filter/company-filter.model';\r\n// import { CompRegConfirmationComponent } from 'src/app/modules/widget-app/comp-reg-confirmation/comp-reg-confirmation.component';\r\n// import { CompRegConfirmationConfigModel, CompRegConfirmationDataModel } from 'src/app/modules/widget-app/comp-reg-confirmation/comp-reg-confirmatiom.model';\r\n// import { CompanyApproveComponent } from 'src/app/modules/widget-app/company/company-approve/company-approve.component';\r\n// import { CompanyApproveConfigModel, CompanyApproveDataModel } from 'src/app/modules/widget-app/company/company-approve/company-approve.model';\r\n// import { VerticalMenuConfigModel, VerticalMenuDataModel } from 'src/app/modules/widgets/vertical-menu/vertical-menu-model';\r\n// import { VerticalMenuComponent } from 'src/app/modules/widgets/vertical-menu/vertical-menu.component';\r\n// import { AlertsFilterComponent } from 'src/app/modules/widget-app/alerts/alerts-filter/alerts-filter.component';\r\n// import { AlertsFilterConfigModel, AlertsFilterDataModel } from 'src/app/modules/widget-app/alerts/alerts-filter/alerts-filter-form.model';\r\n// import { QueryFilterComponent } from 'src/app/modules/widget-app/case-query/query-filter/query-filter.component';\r\n// import { QueryFilterConfigModel, QueryFilterDataModel } from 'src/app/modules/widget-app/case-query/query-filter/query-filter-form.model';\r\n// import { QueryFormComponent } from 'src/app/modules/widget-app/case-query/query-form/query-form.component';\r\n// import { QueryFormConfigModel, QueryFormDataModel } from 'src/app/modules/widget-app/case-query/query-form/query-form-model';\r\n// import { RemarkFilterComponent } from 'src/app/modules/widget-app/case-remark/remark-filter/remark-filter.component';\r\n// import { RemarkFilterConfigModel, RemarkFilterDataModel } from 'src/app/modules/widget-app/case-remark/remark-filter/remark-filter-form-model';\r\n// import { CaseViewFormComponent } from 'src/app/modules/widget-app/case/case-view-form/case-view-form.component';\r\n// import { CaseViewFormConfigModel, CaseViewFormDataModel } from 'src/app/modules/widget-app/case/case-view-form/case-view-form-model';\r\n// import { DocumentsFilterComponent } from 'src/app/modules/widget-app/case-docs/documents-filter/documents-filter.component';\r\n// import { DocumentsFilterConfigModel, DocumentsFilterDataModel } from 'src/app/modules/widget-app/case-docs/documents-filter/documents-filter-form.model';\r\n// import { DocHistoryFilterComponent } from 'src/app/modules/widget-app/case-docs/doc-history-filter/doc-history-filter.component';\r\n// import { DocHistoryFilterDataModel, DocHistoryFilterConfigModel } from 'src/app/modules/widget-app/case-docs/doc-history-filter/doc-history-filter.model';\r\n// import { DocHistoryDetailsComponent } from 'src/app/modules/widget-app/case-docs/doc-history-details/doc-history-details.component';\r\n// import { DocHistoryDetailsDataModel, DocHistoryDetailsConfigModel } from 'src/app/modules/widget-app/case-docs/doc-history-details/doc-history-details.model';\r\n// import { CvCaseDeptContainerComponent } from 'src/app/modules/request-data/case-view/cv-case-dept-container/cv-case-dept-container.component';\r\n// import { CvDeptFilterComponent } from 'src/app/modules/widget-app/case/cv-dept-filter/cv-dept-filter.component';\r\n// import { DeptFilterConfigModel, DeptFilterDataModel } from 'src/app/modules/widget-app/case/cv-dept-filter/cv-dept-filter-model';\r\n// import { DeptViewFormConfigModel, DeptViewFormDataModel } from 'src/app/modules/widget-app/case/dept-view-form/dept-view-form-model';\r\n// import { DeptViewFormComponent } from 'src/app/modules/widget-app/case/dept-view-form/dept-view-form.component';\r\n// import { TinyMceEditorComponent } from 'src/app/modules/widget-app/tiny-mce-editor/tiny-mce-editor.component';\r\n// import { TinyMceEditorConfigModel, TinyMceEditorDataModel } from 'src/app/modules/widget-app/tiny-mce-editor/tiny-mce-editor-model';\r\n// import { CkEditorComponent } from 'src/app/modules/widgets/ck-editor/ck-editor.component';\r\n// import { CrDyanamicTextComponent } from 'src/app/modules/widget-app/cr-dyanamic-text/cr-dyanamic-text.component';\r\n// import { CrDyanamicTextDataModel, CrDyanamicTextConfigModel } from 'src/app/modules/widget-app/cr-dyanamic-text/cr-dyanamic-text.model';\r\n// import { CrAddNewAddressComponent } from 'src/app/modules/widget-app/cr-add-new-address/cr-add-new-address.component';\r\n// import { CrAddNewAddressDataModel, CrAddNewAddressConfigModel } from 'src/app/modules/widget-app/cr-add-new-address/cr-add-new-address.model';\r\n// import { CrAddNewCoOrdinatorComponent } from 'src/app/modules/widget-app/cr-add-new-co-ordinator/cr-add-new-co-ordinator.component';\r\n// import { CrAddNewCoOrdinatorDataModel, CrAddNewCoOrdinatorConfigModel } from 'src/app/modules/widget-app/cr-add-new-co-ordinator/cr-add-new-co-ordinator.model';\r\n// import { ResetPassFormComponent } from 'src/app/modules/widget-app/reset-pass-form/reset-pass-form.component';\r\n// import { ResetPasswordFormConfigModel, ResetPasswordFormDataModel } from 'src/app/modules/widget-app/reset-pass-form/reset-pass-form.model';\r\n// import { InvoiceSearchComponent } from 'src/app/modules/widget-app/invoice/invoice-search/invoice-search.component';\r\n// import { InvoiceSearchConfigModel, InvoiceSearchDataModel } from 'src/app/modules/widget-app/invoice/invoice-search/invoice-search.model';\r\n// import { StorageRepoFilterComponent } from 'src/app/modules/widget-app/storage-repo-filter/storage-repo-filter.component';\r\n// import { StorageRepoFilterConfigModel, StorageRepoFilterDataModel } from 'src/app/modules/widget-app/storage-repo-filter/storage-repo-filter-model';\r\n// import { CaseViewInfoComponent } from 'src/app/modules/widget-app/case-view-info/case-view-info.component';\r\n// import { CaseViewInfoConfigModel, CaseViewInfoDataModel } from 'src/app/modules/widget-app/case-view-info/case-view-info-model';\r\n// import { DataTemplatesFilterComponent } from 'src/app/modules/widget-app/data-templates/data-templates-filter/data-templates-filter.component';\r\n// import { DataTemplatesFilterConfigModel, DataTemplatesFilterDataModel } from 'src/app/modules/widget-app/data-templates/data-templates-filter/data-templates-model';\r\n// import { AlertViewFormDataModel, AlertViewFormConfigModel } from 'src/app/modules/widget-app/alerts/alert-view-form/alert-view-form.model';\r\n// import { AlertViewFormComponent } from 'src/app/modules/widget-app/alerts/alert-view-form/alert-view-form.component';\r\n// import { AllCasesAlertsFilterComponent } from 'src/app/modules/widget-app/alerts/all-cases-alerts-filter/all-cases-alerts-filter.component';\r\n// import { AllCasesAlertsFilterConfigModel, AllCasesAlertsFilterDataModel } from 'src/app/modules/widget-app/alerts/all-cases-alerts-filter/all-cases-alerts-filter.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ComponentBuilderService {\r\n\r\n    constructor(private _componentFactoryResolver: ComponentFactoryResolver) {\r\n\r\n    }\r\n\r\n    // CreateComponet(componetName: string, holderRef: PlaceHolderComponent) {\r\n\r\n    //     let componentFactory;\r\n    //     let componentRef: ComponentRef<any>\r\n    //     let isSuccess: boolean = false;\r\n\r\n    //     let viewContainerRef = holderRef.viewContainerRef;\r\n\r\n    //     viewContainerRef.clear();\r\n\r\n    //     switch (componetName) {\r\n    //         case WIDGET_LIBRARY.CONST_BAR_CHART_A4_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(BarChartA4Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = BarChartA4Model.getInstance();\r\n    //             componentRef.instance.configModel = BarChartA4ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         // case WIDGET_LIBRARY.CONST_PIE_CHART_A2_NAME:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(PieChartA2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = PieChartA2Model.getInstance();\r\n    //         //     componentRef.instance.configModel = PieChartA2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_PIE_CHART_A3_NAME:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(PieChartA3Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = PieChartA3Model.getInstance();\r\n    //         //     componentRef.instance.configModel = PieChartA3ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         case WIDGET_LIBRARY.CONST_LINE_CHART_A2_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(LineChartA2Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = LineChartA2Model.getInstance();\r\n    //             componentRef.instance.configModel = LineChartA2ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_PROGRESS_BAR_A2_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(ProgressBarA2Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ProgressA2Model.getInstance();\r\n    //             componentRef.instance.configModel = ProgressA2ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_BAR_LINE_COMBO_CHART_A1_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(BarLineComboChartA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = BarLineComboChartA1A1Model.getInstance();\r\n    //             componentRef.instance.configModel = BarLineComboChartA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_PIE_GRID_A1_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(PieGridA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = PieGridA1Model.getInstance();\r\n    //             componentRef.instance.configModel = PieGridA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_PROGRESS_BAR_A1_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(ProgressBarA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ProgressA1Model.getInstance();\r\n    //             componentRef.instance.configModel = ProgressA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_AREA_CHART_A1_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(AreaChartA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = AreaChartA1Model.getInstance();\r\n    //             componentRef.instance.configModel = AreaChartA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n\r\n    //         case WIDGET_LIBRARY.CONST_STEPPER_A1_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(StepperA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = StepperA1Model.getInstance();\r\n    //             componentRef.instance.configModel = StepperA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n\r\n    //         case WIDGET_LIBRARY.CONST_STAT_REPORT_A1_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(StatReportA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = StatReportA1Model.getInstance();\r\n    //             componentRef.instance.configModel = StatReportA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_Mat_B_A1:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(MatBA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = MatBDataA1Model.getInstance();\r\n    //             componentRef.instance.configModel = MatBDataA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_Billing_Form_A1:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(BillingFormA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = BillingFormA1Model.getInstance();\r\n    //             componentRef.instance.configModel = BillingFormA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_BUTTON_A1_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(ButtonA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ButtonA1Model.getInstance();\r\n    //             componentRef.instance.configModel = ButtonA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_DATA_FORM_NAME:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DataFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DataFormModel.getInstance();\r\n    //             componentRef.instance.configModel = DataFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_ADD_BUTTON:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(AddButtonComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = AddButtonModel.getInstance();\r\n    //             componentRef.instance.configModel = AddButtonConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_VERTICAL_TIMELINE:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(VerticalTimelineComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = VerticalTimelineModel.getInstance();\r\n    //             componentRef.instance.configModel = VerticalTimelineConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_NAVIGATION:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(NavigationComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = NavigationModel.getInstance();\r\n    //             componentRef.instance.configModel = NavigationConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_FILE_EXPLORER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(FileExplorerComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = FileExplorerModel.getInstance();\r\n    //             componentRef.instance.configModel = FileExplorerConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_FILE_UPLOAD:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(FileUploadComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = FileUploadModel.getInstance();\r\n    //             componentRef.instance.configModel = FileUploadConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_NEW_REGISTRATION:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(NewRegistrationComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = NewRegistrationModel.getInstance();\r\n    //             componentRef.instance.configModel = NewRegistrationConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_REGISTRATION_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(RegistrationFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = RegistrationFormModel.getInstance();\r\n    //             componentRef.instance.configModel = RegistrationFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CONTACT_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(ContactFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ContactFormModel.getInstance();\r\n    //             componentRef.instance.configModel = ContactFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_TAX_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(TaxFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = TaxFormModel.getInstance();\r\n    //             componentRef.instance.configModel = TaxFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_ORGANIZATION_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(OrganizationFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = OrganizationFormModel.getInstance();\r\n    //             componentRef.instance.configModel = OrganizationFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_ACCOUNT_DEPT_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(AccountDeptComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = AccountDeptModel.getInstance();\r\n    //             componentRef.instance.configModel = AccountDeptConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_BANK_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(BankFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = BankFormModel.getInstance();\r\n    //             componentRef.instance.configModel = BankFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_GST_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(GstFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = GstFormModel.getInstance();\r\n    //             componentRef.instance.configModel = GstFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CONTINUE_REG_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(ContinueRegistrationComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ContinueRegFormModel.getInstance();\r\n    //             componentRef.instance.configModel = ContinueRegFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_DROPDOWN_A1:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DropdownA1Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DropdownA1Model.getInstance();\r\n    //             componentRef.instance.configModel = DropdownA1ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_DRAG_DROP:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DragdropComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DragdropModel.getInstance();\r\n    //             componentRef.instance.configModel = DragdropConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_INFORMATION:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrAddCaseinfoFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CaseInformationModel.getInstance();\r\n    //             componentRef.instance.configModel = CaseInformationConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CR_SELECT_CERTIFICATE:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrSelectCertificateFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = SelectCertificateDataModel.getInstance();\r\n    //             componentRef.instance.configModel = SelectCertificateFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_HORIZONTAL_STEPPER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(HorizontalStepperComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = HorizontalStepperModel.getInstance();\r\n    //             componentRef.instance.configModel = HorizontalStepperConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_VERTICAL_MENU:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(VerticalMenuComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = VerticalMenuDataModel.getInstance();\r\n    //             componentRef.instance.configModel = VerticalMenuConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CR_ADD_BILLING:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrAddBillingComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = BillingDataModel.getInstance();\r\n    //             componentRef.instance.configModel = BillingConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CR_ADD_BILLING_MANU_DETAILS:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrAddBillingManufactureDetailsComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = BillingMDDataModel.getInstance();\r\n    //             componentRef.instance.configModel = BillingMDConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CR_ADD_SHIPPING_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrAddShippingFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ShippingDataModel.getInstance();\r\n    //             componentRef.instance.configModel = ShippingConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_BUTTON_A2:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(ButtonA2Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ButtonA2DataModel.getInstance();\r\n    //             componentRef.instance.configModel = ButtonA2ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CR_ADD_CASE_CO_ORD_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrAddCaseCoOrdFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CaseCoOrdinatiorDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CaseCoOrdinatiorConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_MODEL_SELECTION:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(VehicleModelSelectionComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ModelSelectionModel.getInstance();\r\n    //             componentRef.instance.configModel = ModelSelectionConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CASE_LIST_REGISTRATION:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseListRegistrationComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CaseListRegistrationModel.getInstance();\r\n    //             componentRef.instance.configModel = CaseListRegistrationConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CASE_LIST_DETAILS:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseListDetailsComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CaseListDetailsModel.getInstance();\r\n    //             componentRef.instance.configModel = CaseListDetailsConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_TABLE_A2:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(TableA2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = TableA2Model.getInstance();\r\n    //         //     componentRef.instance.configModel = TableA2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         // break;\r\n    //         case WIDGET_LIBRARY.CONST_TABLE_A2:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(TableA2Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = TableA2Model.getInstance();\r\n    //             componentRef.instance.configModel = TableA2ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_UPLOAD_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(UploadFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = UploadFormModel.getInstance();\r\n    //             componentRef.instance.configModel = UploadFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_DROPDOWN_A2:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DropdownA2Component);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DropdownA2Model.getInstance();\r\n    //             componentRef.instance.configModel = DropdownA2ConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_UPLOAD_DOC_EXCEL_TABLES:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrUploadDocExcelTablesComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = UploadDocExcelTablesDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = UploadDocExcelTablesConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_CV_TABLE89:\r\n    //         //         componentFactory = this._componentFactoryResolver.resolveComponentFactory(CvTable8Table9Component);\r\n    //         //         componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //         componentRef.instance.dataModel = CvTable8Table9DataModel.getInstance();\r\n    //         //         componentRef.instance.configModel = CvTable8Table9ConfigModel.getInstance();\r\n    //         //         isSuccess = true;\r\n    //         //         break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_DOCUMENT_VERIFICATION:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(DocumentVerificationComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = DocumentVerificationModel.getInstance();\r\n    //         //     componentRef.instance.configModel = DocumentVerificationConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_CONFIRMATION_TEXT:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ConfirmationTextComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ConfirmationTextModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ConfirmationTextConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_NEW_REGISTRATION_FORM2:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(NewRegistrationForm2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = NewRegistrationForm2Model.getInstance();\r\n    //         //     componentRef.instance.configModel = NewRegistrationForm2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_USER_ADD:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(UserAddComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AddUserDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = AddUserConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_USER_FILTER:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(UserFilterComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = UserFilterDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = UserFilterConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_QUOTATION_SEARCH:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(QuotationSearchComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = QuotationSearchDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = QuotationSearchConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_INVOICE_SEARCH:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(InvoiceSearchComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = InvoiceSearchDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = InvoiceSearchConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_CASE_SEARCH:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseSearchComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseSearchDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseSearchConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_MY_CASE_FILTER:\r\n    //         //         componentFactory = this._componentFactoryResolver.resolveComponentFactory(MyCaseTabFilterComponent);\r\n    //         //         componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //         componentRef.instance.dataModel = MyCaseTabFilterDataModel.getInstance();\r\n    //         //         componentRef.instance.configModel = MyCaseTabFilterConfigModel.getInstance();\r\n    //         //         isSuccess = true;\r\n    //         //         break;    \r\n    //         // case WIDGET_LIBRARY.CONST_NEW_CASE_TAB_FILTER:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(NewTabCaseFilterComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = NewCaseTabFilterDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = NewCaseTabFilterConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_ADD_SHIPPING_SEARCH:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(AddShippingSearchComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AddShippingSearchDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = AddShippingSearchConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_CHANGE_PASSWORD:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ChangePasswordComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ChangePasswordDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ChangePasswordConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_MAT_TAB:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(MatTabComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = MatTabModel.getInstance();\r\n    //         //     componentRef.instance.configModel = MatTabConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_MAT_TAB_A1:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(MatTabA1Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = MatTabA1Model.getInstance();\r\n    //         //     componentRef.instance.configModel = MatTabA1ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_MAT_TAB_A2:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(MatTabA2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = MatTabA2Model.getInstance();\r\n    //         //     componentRef.instance.configModel = MatTabA2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CASE_CO_ORD_SEARCH:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrCaseCoOrdSearchComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = MatTabModel.getInstance();\r\n    //             componentRef.instance.configModel = MatTabConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_COMPANY_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CompanyFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CompanyFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CompanyFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_COMP_REG_CONFIRMATION:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CompRegConfirmationComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CompRegConfirmationDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CompRegConfirmationConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_COMPANY_APPROVE:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CompanyApproveComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CompanyApproveDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CompanyApproveConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_ALERTS_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(AlertsFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = AlertsFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = AlertsFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_QUERY_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(QueryFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = QueryFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = QueryFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_QUERY_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(QueryFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = QueryFormDataModel.getInstance();\r\n    //             componentRef.instance.configModel = QueryFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_REMARK_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(RemarkFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = RemarkFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = RemarkFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CONST_CASE_VIEW_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseViewFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CaseViewFormDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CaseViewFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_DOCUMENTS_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DocumentsFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DocumentsFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = DocumentsFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_DOC_HISTORY_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DocHistoryFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DocHistoryFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = DocHistoryFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CASE_DOC_HISTORY_DETAILS:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DocHistoryDetailsComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DocHistoryDetailsDataModel.getInstance();\r\n    //             componentRef.instance.configModel = DocHistoryDetailsConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CV_DEPT_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CvDeptFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DeptFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = DeptFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_DEPT_VIEW_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DeptViewFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DeptViewFormDataModel.getInstance();\r\n    //             componentRef.instance.configModel = DeptViewFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_TINY_MCE_EDITOR:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(TinyMceEditorComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = TinyMceEditorDataModel.getInstance();\r\n    //             componentRef.instance.configModel = TinyMceEditorConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_CK_EDITOR:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CkEditorComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = TinyMceEditorDataModel.getInstance();\r\n    //             componentRef.instance.configModel = TinyMceEditorConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CONST_DYANAMIC_TEXT:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrDyanamicTextComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CrDyanamicTextDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CrDyanamicTextConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CR_ADD_NEW_ADDRESS:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrAddNewAddressComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CrAddNewAddressDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CrAddNewAddressConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n    //         case WIDGET_LIBRARY.CR_ADD_NEW_CO_ORDINATOR:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrAddNewCoOrdinatorComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CrAddNewCoOrdinatorDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CrAddNewCoOrdinatorConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.STORAGE_REPO_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(StorageRepoFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = StorageRepoFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = StorageRepoFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.RESET_USER_PASSWORD:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(ResetPassFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = ResetPasswordFormDataModel.getInstance();\r\n    //             componentRef.instance.configModel = ResetPasswordFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.CASE_VIEW_INFO:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseViewInfoComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = CaseViewInfoDataModel.getInstance();\r\n    //             componentRef.instance.configModel = CaseViewInfoConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.DATA_TEMPLATES_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DataTemplatesFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = DataTemplatesFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = DataTemplatesFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.ALERTS_VIEW_FORM:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(AlertViewFormComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = AlertViewFormDataModel.getInstance();\r\n    //             componentRef.instance.configModel = AlertViewFormConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         case WIDGET_LIBRARY.ALL_CASES_ALERTS_FILTER:\r\n    //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(AllCasesAlertsFilterComponent);\r\n    //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //             componentRef.instance.dataModel = AllCasesAlertsFilterDataModel.getInstance();\r\n    //             componentRef.instance.configModel = AllCasesAlertsFilterConfigModel.getInstance();\r\n    //             isSuccess = true;\r\n    //             break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_SELECT_COMPANY:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CrSelectCompanyComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = SelectCompanyDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = SelectCompanyConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_COMPANY_REJECT:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CompanyRejectComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CompanyRejectDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CompanyRejectConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_ASSIGN_FC_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseAssignFcFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseAssignFCDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseAssignFCConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_CASE_APPROVE_BASIC_INFO:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseApproveBasicInfoComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseApproveBasicInfoDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseViewFormConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_CASE_APPROVE_EDIT_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseApproveEditCaseComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseApproveEditCaseDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseApproveEditCaseConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_CASE_ADD_REMARK_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(AddCaseRemarkFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AddCaseRemarkDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = AddCaseRemarkConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_DEPT_ALLOCATE:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CvAllocateDeptComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AllocateDeptDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = AllocateDeptConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_REQUEST_NOTES_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(RequestNotesFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = RequestNotesFormDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = RequestNotesFormConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_REQUEST_NOTES_FORM2:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(RequestNotesForm2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = RequestNotesForm2DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = RequestNotesForm2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.QUOTATION_INVOICE_UPLOAD_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(QuotationInvoiceUploadComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = QuotationInvoiceUploadDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = QuotationInvoiceUploadConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.CLEARANCE_NOTE_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ClearanceNoteFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ClearanceNoteFormDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ClearanceNoteFormConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_REPORTS_FILTER:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ReportsFilterComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ReportsFilterDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ReportsFilterConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_REPORTS_UPLOAD:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ReportsUploadComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ReportsUploadDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ReportsUploadConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CLEARANCE_NOTE_TABLE:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ClearanceNoteTableComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ClearanceNoteTableDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ClearanceNoteTableConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CLEARANCE_NOTE_DROPDOWN:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ClearanceNoteDropdownComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ClearanceNoteDropdownDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ClearanceNoteDropdownConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_REG_BTN:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseRegBtnComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseRegBtnDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseRegBtnConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_ENGINEERS_FILTER:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(EngineersFilterComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = EngineersFilterDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = EngineersFilterConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_CASE_ACTION_BTN:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseActionButtonsComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseActionButtonsModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseActionButtonsConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.SELECT_TAGGING:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(SelectTaggingComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = SelectTaggingDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = SelectTaggingConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.TAGGING_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(TaggingFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = TaggingFormDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = TaggingFormConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CONST_DEPT_SCHEDULE:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CvDeptScheduleComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CvDeptScheduleDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CvDeptScheduleConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_DEPT_SCHEDULE:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CvDeptScheduleComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CvDeptScheduleDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CvDeptScheduleConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_CLARANCE_FILTER:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ClearanceFilterComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ClearanceFilterDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ClearanceFilterConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_CERTIFIACTE_HANDLER_FILTER:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CertificateHandlerFilterComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CertificateHandlerFilterDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CertificateHandlerFilterConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.FORGOT_PASS_USR_NAME_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ForgotPassUsernameFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ForgotPassUsernameFormDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ForgotPassUsernameFormConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.MORE_INFO_LINK_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(MoreInfoLinkDataComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = MoreInfoFormDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = MoreInfoFormConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.SYNC_INFO_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(SyncInfoComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = SyncInfoDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = SyncInfoConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_DOC_TABLE_A2:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(DocumentTableA2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = DocumentTableA2DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = DocumentTableA2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.ADD_BTN_COMP_REG_DOC_UPLOAD:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(AddBtnCompRegDocUploadComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AddBtnCompRegDocUploadDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = AddBtnCompRegDocUploadConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CSP_SEARCH:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CspSearchComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CSPSearchDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CSPSearchConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CSP_INFO:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CspInfoComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CSPInfoDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CSPInfoConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.ADD_BTN_ADD_ENGINEER:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(AddBtnAddEngineerComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AddBtnAddEngineerDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = AddBtnAddEngineerConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.SHORT_CLOSE_REMARK:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(ShortCloseRemarkComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = ShortCloseRemarkDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = ShortCloseRemarkConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.SHORT_CLOSE_VIEW_INFO:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseShortCloseViewInfoComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseShortCloseViewInfoDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseShortCloseViewInfoConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_STATUS_CARD_GROUP:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseStatusCardGroupComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseStatusCardGroupDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseStatusCardGroupConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.DEPT_CASE_CARD_GROUP:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(DeptCaseCardGroupComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = DeptCaseCardGroupDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = DeptCaseCardGroupConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CASE_TYPE_CARD_GROUP:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseTypeCardGroupComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseTypeCardGroupDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseTypeCardGroupConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_BAR_CHART_A5_NAME:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(BarChartA5Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = BarChartA5Model.getInstance();\r\n    //         //     componentRef.instance.configModel = BarChartA5ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.FINANCE_CARD:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(FinanceCardComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = FinanceCardDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = FinanceCardConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.DASH_CHART_FILTER_A1:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(DashChartFilterA1Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = DashChartFilterA1DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = DashChartFilterA1ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.TABLE_ACTION_BTN:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(TableActionBtnComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = TableActionBtnDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = TableActionBtnConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_STATUS_CARD_GROUP_A2:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseStatusCardGroupA2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseStatusCardGroupA2DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseStatusCardGroupA2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_ACCORDION_A1:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(AccordionA1Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AccordionA1Model.getInstance();\r\n    //         //     componentRef.instance.configModel = AccordionA1ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_STATUS_CARD_GROUP_A3:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseStatusCardGroupA3Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseStatusCardGroupA3DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseStatusCardGroupA3ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.DISPATCH_SEARCH:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(DispatchSearchComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = DispatchSearchDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = DispatchSearchConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.CASE_TEST_STOP_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(CaseTestStopFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = CaseTestStopDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = CaseTestStopConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.DISPATCH_INFO:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(DispatchInfoComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = DispatchInfoDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = DispatchInfoConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.LINE_CHART_DROPDOWN_A1:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(LineChartDropdownA1Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = LineChartDropdownA1DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = LineChartDropdownA1ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.LINE_CHART_DROPDOWN_A2:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(LineChartDropdownA2Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = LineChartDropdownA2DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = LineChartDropdownA2ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.BAR_CHART_DROPDOWN_A1:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(BarChartDropdownA1Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = BarChartDropdownA1DataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = BarChartDropdownA1ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.STACKED_BAR_CHART_A1:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(StackedBarChartA1Component);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = StackedBarChartA1Model.getInstance();\r\n    //         //     componentRef.instance.configModel = StackedBarChartA1ConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n\r\n    //         // case WIDGET_LIBRARY.ADD_DISPATCH_FORM:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(AddDispatchFormComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = AddDespFormDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = AddDespFormConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n\r\n    //         // case WIDGET_LIBRARY.QUERY_VIEW_INFO:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(QueryViewInfoComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = QueryViewInfoDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = QueryViewInfoConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.CONST_CASE_QUERY_REPLY:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(QueryReplyComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = QueryReplyDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = QueryReplyConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n    //         // case WIDGET_LIBRARY.QUERY_RESPONSE_INFO:\r\n    //         //     componentFactory = this._componentFactoryResolver.resolveComponentFactory(QueryResponseInfoComponent);\r\n    //         //     componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //     componentRef.instance.dataModel = QueryResponseInfoDataModel.getInstance();\r\n    //         //     componentRef.instance.configModel = QueryResponseInfoConfigModel.getInstance();\r\n    //         //     isSuccess = true;\r\n    //         //     break;\r\n            \r\n    //         //     case WIDGET_LIBRARY.CONST_REQUEST_NOTE_ACTION_BTN:\r\n    //         //         componentFactory = this._componentFactoryResolver.resolveComponentFactory(RequestNoteActionBtnsComponent);\r\n    //         //         componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //         componentRef.instance.dataModel = RequestNoteActionBtnsModel.getInstance();\r\n    //         //         componentRef.instance.configModel = RequestNoteActionBtnsConfigModel.getInstance();\r\n    //         //         isSuccess = true;\r\n    //         //         break;\r\n\r\n    //         //         case WIDGET_LIBRARY.TAG_FILTER:\r\n    //         //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(TagFilterComponent);\r\n    //         //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //             componentRef.instance.dataModel = TagFilterDataModel.getInstance();\r\n    //         //             componentRef.instance.configModel = TagFilterConfigModel.getInstance();\r\n    //         //             isSuccess = true;\r\n    //         //             break;\r\n    //         //             case WIDGET_LIBRARY.MIS_REPORT_FILTER:\r\n    //         //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(MisReportFilterComponent);\r\n    //         //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //             componentRef.instance.dataModel = MISReportsFilterDataModel.getInstance();\r\n    //         //             componentRef.instance.configModel = MISReportsFilterConfigModel.getInstance();\r\n    //         //             isSuccess = true;\r\n    //         //             break;\r\n    //         //             case WIDGET_LIBRARY.DYNAMIC_TABLE:\r\n    //         //             componentFactory = this._componentFactoryResolver.resolveComponentFactory(DynamicTableComponent);\r\n    //         //             componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //             componentRef.instance.dataModel = DynamicTableDataModel.getInstance();\r\n    //         //             componentRef.instance.configModel = DynamicTableDataConfigModel.getInstance();\r\n    //         //             isSuccess = true;\r\n    //         //             break;\r\n    //         //             case WIDGET_LIBRARY.MIS_REPORTS_DETAILS:\r\n    //         //                 componentFactory = this._componentFactoryResolver.resolveComponentFactory(MisReportDetailsComponent);\r\n    //         //                 componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //                 componentRef.instance.dataModel = MISReportsDetailsDataModel.getInstance();\r\n    //         //                 componentRef.instance.configModel = MISReportsDetailsConfigModel.getInstance();\r\n    //         //                 isSuccess = true;\r\n    //         //                 break;\r\n    //         //             case WIDGET_LIBRARY.MIS_REPORT_ACTION_BUTTON:\r\n    //         //                 componentFactory = this._componentFactoryResolver.resolveComponentFactory(MisReportActionButtonComponent);\r\n    //         //                 componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //                 componentRef.instance.dataModel = MISReportsActionButtonModel.getInstance();\r\n    //         //                 componentRef.instance.configModel = MISReportsActionButtonConfigModel.getInstance();\r\n    //         //                 isSuccess = true;\r\n    //         //                 break;\r\n\r\n    //         //             case WIDGET_LIBRARY.DYNAMIC_FILTER:\r\n    //         //                 componentFactory = this._componentFactoryResolver.resolveComponentFactory(DynamicFilterComponent);\r\n    //         //                 componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //                 componentRef.instance.dataModel = DynamicFilterDataModel.getInstance();\r\n    //         //                 componentRef.instance.configModel = DynamicFilterConfigModel.getInstance();\r\n    //         //                 isSuccess = true;\r\n    //         //                 break;\r\n    //         //             case WIDGET_LIBRARY.CONST_CV_CASE_CHECK:\r\n    //         //                 componentFactory = this._componentFactoryResolver.resolveComponentFactory(CvCaseChecklistComponent);\r\n    //         //                 componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //                 componentRef.instance.dataModel = CvChechklistDataModel.getInstance();\r\n    //         //                 componentRef.instance.configModel = CvChecklistConfigModel.getInstance();\r\n    //         //                 isSuccess = true;\r\n    //         //                 break;\r\n    //         //             case WIDGET_LIBRARY.DOCUMENT_VIEWER:\r\n    //         //                 componentFactory = this._componentFactoryResolver.resolveComponentFactory(DocumentViewerComponent);\r\n    //         //                 componentRef = viewContainerRef.createComponent(componentFactory);\r\n    //         //                 componentRef.instance.dataModel = DocumentViewerDataModel.getInstance();\r\n    //         //                 componentRef.instance.configModel = DocumentViewerConfigModel.getInstance();\r\n    //         //                 isSuccess = true;\r\n    //         //                 break;\r\n    //     }\r\n\r\n\r\n    //     return { isSuccess, componentRef };\r\n    // }\r\n\r\n\r\n\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 177,
                "jsdoctags": [
                    {
                        "name": "_componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DataService",
            "id": "injectable-DataService-33117e7b1558c403f53c5e7f3e565c76",
            "file": "src/app/services/common/data.service.ts",
            "properties": [
                {
                    "name": "selectedRows",
                    "defaultValue": "new SelectionModel<any>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getSelectedRows",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Injectable } from '@angular/core';  \r\n  \r\n@Injectable()  \r\nexport class DataService {  \r\n  \r\n  private selectedRows = new SelectionModel<any>(true, []);\r\n\r\n  getSelectedRows() {  \r\n    return this.selectedRows;  \r\n  }  \r\n}  ",
            "type": "injectable"
        },
        {
            "name": "EventActionService",
            "id": "injectable-EventActionService-1da4c32943608e4c4dee29adc1aeaecd",
            "file": "src/app/services/common/event-action.service.ts",
            "properties": [
                {
                    "name": "compRefInstancesMap",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "dynamicMethod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "EventActionMap",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "globalParameters",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "instance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "ActionCopyWidgetData",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionDynamicMethod",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 545,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionDynamicNavigationWithRouteParams",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionDynamicRefreshData",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 382,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionDynamicRefreshDataArray",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 395,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionDynamicToasterNotification",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 406,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionExecutePageMethod",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 867,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionHandler",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pageInstance",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "srcEventParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1204,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageInstance",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "srcEventParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionHtmlToPdfFileDownload",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionHtmlToPdfFilePrint",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionNavigate",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 258,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionNavigationWithRouteParams",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 321,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionNavigationWithStaticRouteParams",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 317,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionOnSubmit",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionOnSubmitWithUserData",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 874,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionProcessSubmitResponseSetKey",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 334,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionRedirect",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 620,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionRefreshAnyEventAction",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 516,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionRefreshData",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 510,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionResetFilter",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 472,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSearch",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 625,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSetBreadcrumbItem",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 702,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSetBreadcrumbsView",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 715,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSetGlobaParams",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 672,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSetNavigationData",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 328,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSetNavigationPathFromReq",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 341,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSetNavPathForInsertUpdate",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSetPageProp",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 655,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionShowPopup",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 556,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionShowPopupByPropChange",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 585,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ActionSubmitDataWithOrWithoutFileupload",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1073,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "posteventaction",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEventHandler",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "NavigateExternalURL",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1266,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetFormData",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { WidgetConstants } from 'src/app/modules/widget-utility/widget-constants';\r\nimport { MethodCall } from '@angular/compiler';\r\nimport { ErrorCodes } from 'src/app/models/common/error-codes';\r\n// import { ServerApiInterfaceServiceService } from 'src/app/server-api-interface-service.service';\r\nimport { NotificationService } from './notification.service';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\nimport { APP_SETTING } from 'src/app/constants/app-repo.constants';\r\nimport { ServerApiInterfaceServiceService } from './server-api-interface-service.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EventActionService implements OnDestroy {\r\n\r\n\r\n    EventActionMap = new Map();\r\n    globalParameters = new Map<string, any>(); // this variable not used, however it is taken for reference only\r\n    compRefInstancesMap = new Map<string, any>();\r\n    dynamicMethod?: Function;\r\n    instance: any;\r\n\r\n    constructor(private _router: Router,\r\n        private _serverApi: ServerApiInterfaceServiceService,\r\n        private _notificationService: NotificationService,\r\n        private _helperService: AppRepoHelperService,\r\n    ) {\r\n        this.EventActionMap.set(\"htmlToPdfFileDownload\", this.ActionHtmlToPdfFileDownload);\r\n        this.EventActionMap.set(\"htmlToPdfFilePrint\", this.ActionHtmlToPdfFilePrint);\r\n        // this.EventActionMap.set(\"exportData\", this.ActionExport);\r\n        // this.EventActionMap.set(\"applyFilter\", this.ActionApplyFilter);\r\n        this.EventActionMap.set(\"resetFilter\", this.ActionResetFilter);\r\n        this.EventActionMap.set(\"navigate\", this.ActionNavigate);\r\n        this.EventActionMap.set(\"refresh\", this.ActionRefreshData);\r\n        this.EventActionMap.set(\"dynamic\", this.ActionDynamicMethod);\r\n        this.EventActionMap.set(\"showPopup\", this.ActionShowPopup);\r\n        this.EventActionMap.set(\"redirect\", this.ActionRedirect);\r\n        this.EventActionMap.set(\"refreshWithReq\", this.ActionSearch);\r\n        this.EventActionMap.set(\"setPageProperties\", this.ActionSetPageProp);\r\n        this.EventActionMap.set(\"setBreadcrumbItem\", this.ActionSetBreadcrumbItem);\r\n        this.EventActionMap.set(\"setBreadcrumbsView\", this.ActionSetBreadcrumbsView);\r\n        this.EventActionMap.set(\"showPopupByPropChange\", this.ActionShowPopupByPropChange);\r\n        this.EventActionMap.set(\"executePageMethod\", this.ActionExecutePageMethod);\r\n        this.EventActionMap.set(\"onsubmitwithuserdata\", this.ActionOnSubmitWithUserData);\r\n        this.EventActionMap.set(\"onsubmit\", this.ActionOnSubmit);\r\n        this.EventActionMap.set(\"dynamicRefresh\", this.ActionDynamicRefreshData);\r\n        this.EventActionMap.set(\"dynamicRefreshArray\", this.ActionDynamicRefreshDataArray);\r\n        this.EventActionMap.set(\"dynamicToaster\", this.ActionDynamicToasterNotification);\r\n        this.EventActionMap.set(\"resetFormData\", this.resetFormData);\r\n        this.EventActionMap.set(\"setNavPathFromReq\", this.ActionSetNavigationPathFromReq);\r\n        this.EventActionMap.set(\"navigationWithRouteParams\", this.ActionNavigationWithRouteParams);\r\n        this.EventActionMap.set(\"processSubmitResponseSetKey\", this.ActionProcessSubmitResponseSetKey);\r\n        this.EventActionMap.set(\"setNavPathForInsertUpdate\", this.ActionSetNavPathForInsertUpdate);\r\n        this.EventActionMap.set(\"navigateWithParams\", this.ActionNavigationWithStaticRouteParams);\r\n        this.EventActionMap.set(\"dynamicNavigationWithRouteParams\", this.ActionDynamicNavigationWithRouteParams);\r\n        this.EventActionMap.set(\"setGlobalParams\", this.ActionSetGlobaParams);\r\n        // this.EventActionMap.set(\"fileUploadWithUserData\", this.ActionOnFileUploadWithUserData);\r\n        // this.EventActionMap.set(\"downloadFile\", this.ActionDownload);\r\n        this.EventActionMap.set(\"setNavigationData\", this.ActionSetNavigationData);\r\n        this.EventActionMap.set(\"copyWidgetData\", this.ActionCopyWidgetData);\r\n        // this.EventActionMap.set(\"openFileInNewTab\", this.ActionOpenFileInNewTab)\r\n        this.EventActionMap.set(\"submitDataWithOrWithoutFileupload\", this.ActionSubmitDataWithOrWithoutFileupload);\r\n        this.EventActionMap.set(\"refreshEventAction\", this.ActionRefreshAnyEventAction);\r\n        // this.EventActionMap.set(\"saveExcelFile\", this.ActionSaveExcelFile);\r\n        this.EventActionMap.set(\"navigateExternalUrl\", this.NavigateExternalURL);\r\n        // this.EventActionMap.set(\"saveZipFile\", this.ActionSaveZipFile);\r\n\r\n    }\r\n\r\n\r\n    ActionHtmlToPdfFileDownload(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n\r\n            let page = this.instance;\r\n            let isValid = true;\r\n            let skipSpinner:any;\r\n            var submitData = Object();\r\n            submitData.id = eventparams.id;\r\n            submitData.updateId = eventparams.updateId;\r\n            submitData.queryAction = eventparams.queryAction;\r\n            if(params[0].submitcode){\r\n                submitData.executeactionsubmitcode = params[0].submitcode\r\n        }\r\n            if (params[0].dataposition) {\r\n                eventparams.positions = params[0].dataposition\r\n        }\r\n    \r\n            params.forEach((param:any) => {\r\n                if (param.skipSpinner) {\r\n                    skipSpinner = param.skipSpinner\r\n                }\r\n            })\r\n            try {\r\n    \r\n                eventparams.positions.forEach((position:any) => {\r\n                    var compInstance = this.compRefInstancesMap.get(position);\r\n                    if(compInstance && compInstance.GetValue){\r\n                        const data = compInstance.GetValue();\r\n                        Object.assign(submitData, data);\r\n                    }\r\n                   \r\n                });\r\n    \r\n                const apiUrlConst = eventparams.apiSubmitUrl;\r\n                if (!skipSpinner) {\r\n                    page.showSpinner()\r\n                } \r\n                this._serverApi.post<any, any>(apiUrlConst, submitData).subscribe(\r\n                    response => {\r\n                        if (!skipSpinner) {\r\n                            page.hideSpinner();\r\n                        }\r\n                        if (response) {\r\n                            const instance = this.compRefInstancesMap.get(params[0].Htmlposition);\r\n                            instance.generatePDF(response.data[0].htmlcontent);\r\n\r\n                            //this._saveFileService.downloadHtmlToPDFFile(response.data[0].htmlcontent,'abc.pdf');\r\n                        } (error:any) => {\r\n                            if (!skipSpinner) {\r\n                                page.hideSpinner();\r\n                            }\r\n                            this._notificationService.error(\"Download failed\");\r\n                        }\r\n                    },error => {\r\n                        if (!skipSpinner) {\r\n                            page.hideSpinner();\r\n                        }\r\n    \r\n                        this._notificationService.error(\"Something went wrong!\");\r\n                       \r\n                    }\r\n                );\r\n    \r\n            } catch (e) {\r\n                console.error(\"ActionHtmlToPdfFileDownload error:\", e);\r\n            }\r\n    \r\n    }\r\n    ActionHtmlToPdfFilePrint(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n\r\n        let page = this.instance;\r\n        let isValid = true;\r\n        let skipSpinner:any;\r\n        var submitData = Object();\r\n        submitData.id = eventparams.id;\r\n        submitData.updateId = eventparams.updateId;\r\n        submitData.queryAction = eventparams.queryAction;\r\n        if(params[0].submitcode){\r\n            submitData.executeactionsubmitcode = params[0].submitcode\r\n    }\r\n        if (params[0].dataposition) {\r\n            eventparams.positions = params[0].dataposition\r\n    }\r\n\r\n        params.forEach((param:any) => {\r\n            if (param.skipSpinner) {\r\n                skipSpinner = param.skipSpinner\r\n            }\r\n        })\r\n        try {\r\n\r\n            eventparams.positions.forEach((position:any) => {\r\n                var compInstance = this.compRefInstancesMap.get(position);\r\n                if(compInstance && compInstance.GetValue){\r\n                    const data = compInstance.GetValue();\r\n                    Object.assign(submitData, data);\r\n                }\r\n               \r\n            });\r\n\r\n            const apiUrlConst = eventparams.apiSubmitUrl;\r\n            if (!skipSpinner) {\r\n                page.showSpinner()\r\n            }\r\n          \r\n\r\n            this._serverApi.post<any, any>(apiUrlConst, submitData).subscribe(\r\n                response => {\r\n                    if (!skipSpinner) {\r\n                        page.hideSpinner();\r\n                    }\r\n                    if (response) {\r\n                        const WindowPrt = window.open('', '', 'left=0,top=0,width=900,height=900,toolbar=0,scrollbars=0,status=0');\r\n                        WindowPrt?.document.write(response.data[0].htmlcontent);\r\n                        WindowPrt?.document.close();\r\n                        WindowPrt?.focus();\r\n                        WindowPrt?.print();\r\n                        WindowPrt?.close();\r\n                    } (error:any) => {\r\n                        if (!skipSpinner) {\r\n                            page.hideSpinner();\r\n                        }\r\n                        this._notificationService.error(\"Print failed\");\r\n                    }\r\n                },error => {\r\n                    if (!skipSpinner) {\r\n                        page.hideSpinner();\r\n                    }\r\n\r\n                    this._notificationService.error(\"Something went wrong!\");\r\n                   \r\n                }\r\n            );\r\n\r\n        } catch (e) {\r\n            console.error(\"ActionHtmlToPdfFileDownload error:\", e);\r\n        }\r\n\r\n}\r\n\r\n    ActionCopyWidgetData(wigDataContext: any, params: any, eventparams: any){\r\n        try {\r\n            if (params[0]) {\r\n                params[0].positions.forEach((item:any) => {                     \r\n                    const srcCompInstance = this.compRefInstancesMap.get(item.src);\r\n                    const data = srcCompInstance.GetValue();\r\n\r\n                    const targCompInstance = this.compRefInstancesMap.get(item.target);\r\n                    targCompInstance.setFormData(data, eventparams);\r\n               \r\n                });               \r\n            }\r\n        }\r\n        catch {\r\n            console.error(\"Error : error occured while copying form data\", eventparams)\r\n        }\r\n       \r\n    }\r\n\r\n    getEventHandler(eventName: string) {\r\n        if (this.EventActionMap.has(eventName)) {\r\n            return this.EventActionMap.get(eventName); //This methods will be executed by caller context\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    \r\n    NavigateExternalURL(wigDataContext: any, params: any, eventparams: any){\r\n\r\n        try{\r\n            let page = this.instance; \r\n            let locationcode = params.locationcode;\r\n\r\n            let urlData = this._helperService.getAppSTByCode(locationcode.code);\r\n            if (urlData){\r\n                window.open(urlData.Value, \"_blank\");\r\n            }\r\n        }\r\n        catch {\r\n            console.error(\"Error : error occured while redirecting to url\", eventparams)\r\n        }\r\n    }\r\n\r\n       // navigate action\r\n    ActionNavigate(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n        //Static Keys is parameterized key passed to the navigation data\r\n        let statickeys = params.staticKeys;\r\n        //Get value of these keys from event params        \r\n        let eventParamKeys = params.eventParamKeys;\r\n        let globalParamKeys = params.globalParamKeys;\r\n        let location = params.location;\r\n\r\n        let page = this.instance;     \r\n        let navigationData = new Map<string,object>();\r\n        let globalNavigationKeys:any =[];\r\n\r\n        let staticKeysMap = new Map<string,object>(statickeys);\r\n\r\n        staticKeysMap.forEach((value,key) => {\r\n            navigationData.set(key, value);\r\n        });\r\n\r\n\r\n        let findProp = function(obj:any, prop:any, defval?:any){\r\n            if (typeof defval == 'undefined') defval = null;\r\n            prop = prop.split('.');\r\n            for (var i = 0; i < prop.length; i++) {\r\n                if(typeof obj[prop[i]] == 'undefined')\r\n                    return defval;\r\n                obj = obj[prop[i]];\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        eventParamKeys.forEach((item:any) => {           \r\n            navigationData.set(item.setKey,findProp(eventparams.dataContext, item.getKey));\r\n        });\r\n\r\n        globalParamKeys.forEach((item:any) => {\r\n            globalNavigationKeys.push(item);\r\n        });\r\n\r\n        navigationData.forEach((value,key) => {\r\n            globalNavigationKeys.push(key);\r\n            this.instance.globalParameters.set(key,value);   \r\n        });\r\n\r\n        this.instance.globalParameters.set(\"navigationDataKeys\",globalNavigationKeys);    \r\n\r\n        if(location.path){\r\n            this._router.navigate([params.location.path]);\r\n        }else{\r\n            this._router.navigate([findProp(eventparams.dataContext, params.location.eventParamKey)]);\r\n        }\r\n    }\r\n\r\n    ActionDynamicNavigationWithRouteParams(wigDataContext: any, params: any, eventparams: any) {\r\n        var navigationData = eventparams[params.navigationKey]\r\n        var location = params.locationKey ? eventparams[params.locationKey] : params.location;\r\n        this._router.navigate([location, navigationData]);\r\n    }\r\n\r\n    ActionNavigationWithStaticRouteParams(wigDataContext: any, params: any, eventparams: any) {\r\n        this._router.navigate([params.location, eventparams.apireqdata[params.getkey]]);\r\n    }\r\n\r\n    ActionNavigationWithRouteParams(wigDataContext: any, params: any, eventparams: any) {\r\n        var navigationData = eventparams.dataContext[params.getkey]\r\n        this._router.navigate([params.location, navigationData]);\r\n    }\r\n\r\n   \r\n\r\n    ActionSetNavigationData(wigDataContext: any, params: any, eventparams: any) {\r\n        let keys = params.globalParamKeys;\r\n        let page = this.instance;      \r\n        page.globalParameters[\"navigationDataKeys\"] = keys;    \r\n    }\r\n\r\n    ActionProcessSubmitResponseSetKey(wigDataContext: any, params: any, eventparams: any) {\r\n      if (!eventparams.dataContext) {\r\n            eventparams.dataContext = {}\r\n        }\r\n        eventparams.dataContext[params.setkey] = eventparams.responseData[0].insertedid\r\n    }\r\n\r\n    ActionSetNavigationPathFromReq(wigDataContext: any, params: any, eventparams: any) {\r\n        if (!eventparams.dataContext) {\r\n            eventparams.dataContext = {}\r\n        }\r\n       \r\n        eventparams.dataContext[params.getkey] = eventparams.reqData[params.getkey]\r\n    }\r\n\r\n    ActionSetNavPathForInsertUpdate(wigDataContext: any, params: any, eventparams: any) {\r\n        let page = this.instance;\r\n        if (!eventparams.dataContext) {\r\n            eventparams.dataContext = {}\r\n        }\r\n        if (eventparams.queryAction === \"insert\") {\r\n            eventparams.dataContext[params.setkey] = eventparams.responseData[0].insertedid;\r\n        } else {\r\n            eventparams.dataContext[params.getkey] = eventparams.reqData[params.getkey]\r\n        }\r\n\r\n        //This code will be used further and need to change previous references\r\n        page.globalParameters[params.setkey] = eventparams.dataContext[params.setkey];\r\n    }\r\n\r\n    resetFormData(wigDataContext: any, params: any, eventparams: any) {\r\n        try {\r\n            if ((params[0])) {\r\n                if (params[0].position) {\r\n                    const instance = this.compRefInstancesMap.get(params[0].position);\r\n                    const mode = params[0].mode;\r\n                    instance.dataModel.mode = mode;\r\n                    instance.resetForm(mode);\r\n                }\r\n            }\r\n        }\r\n        catch {\r\n            console.error(\"Error : error occured while reseting form data\", eventparams)\r\n        }\r\n\r\n    }\r\n\r\n    // dynamic refresh widget data\r\n    ActionDynamicRefreshData(wigDataContext: any, params: any, eventparams: any) {\r\n        let position: any;\r\n        let src = eventparams;\r\n        Object.keys(params).forEach((key) => {\r\n            // console.log(`key = param[key] :  ${key} = ${param[key]}`);\r\n            eval(`${key} = ${params[key]}`);\r\n        });\r\n        const instance = this.compRefInstancesMap.get(position);\r\n        instance.configModel.CallerToComp.emit(\r\n            WidgetConstants.CALLER_TO_COMP_REFRESH_DATA\r\n        );\r\n    }\r\n\r\n    ActionDynamicRefreshDataArray(wigDataContext: any, params: any, eventparams: any) {\r\n        params.position.forEach((position:any) => {\r\n            const instance = this.compRefInstancesMap.get(position);\r\n            instance.configModel.CallerToComp.emit(\r\n                WidgetConstants.CALLER_TO_COMP_REFRESH_DATA\r\n            )\r\n        });\r\n\r\n    }\r\n\r\n\r\n    ActionDynamicToasterNotification(wigDataContext: any, params: any, eventparams: any) {\r\n        let src = eventparams;\r\n        let toaster = Object();\r\n        try {\r\n            Object.keys(params).forEach((key) => {\r\n                eval(`${key} = ${params[key]}`);\r\n            });\r\n            if (toaster.issuccess) {\r\n                this._notificationService.success(toaster.msg);\r\n            } else {\r\n                this._notificationService.error(toaster.msg);\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(\"ActionDynamicSendToasterNotification error:\", e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    //Info: Here this refers to the caller componet hence any variable with \"this.\" should be present \r\n    //caller compoent with same variable name e.g. in this case  \"_router\" should be present in caller\r\n\r\n    // apply filter action\r\n    // ActionApplyFilter(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n    //     let page = this.instance.pageInstance;\r\n    //     let src = eventparams;\r\n    //     let targ;\r\n\r\n    //     params.forEach((param:any) => {\r\n    //         try {\r\n    //             let filterPosition = Object.keys(param).find((key) => key == \"page.filterposition\");\r\n    //             filterPosition = param[filterPosition!].replace(/'/g, \"\");\r\n    //             const filterCompInstance = page.compRefInstancesMap.get(filterPosition);\r\n\r\n    //             let gridPosition = Object.keys(param).find((key) => key == \"page.gridposition\");\r\n    //             gridPosition = param[gridPosition!].replace(/'/g, \"\");\r\n    //             const gridCompInstance = page.compRefInstancesMap.get(gridPosition);\r\n\r\n    //             const isvalid = filterCompInstance.Validate();\r\n    //             if (!isvalid) {\r\n    //                 page.collapse = false;\r\n    //                 return false;\r\n    //             }\r\n    //             page.collapse = true;\r\n    //             var filterData = filterCompInstance.GetValue();\r\n               \r\n    //             //gridCompInstance.dataModel.apireqdata.wf = 'filter';\r\n    //             if(gridCompInstance){\r\n    //             targ = gridCompInstance.dataModel;\r\n    //             Object.keys(param).forEach((key) => {\r\n    //                 eval(`${key} = ${param[key]}`);\r\n    //             });\r\n    //             gridCompInstance.dataModel.apireqdata.fromlimit = 0;\r\n    //             Object.assign(gridCompInstance.dataModel.apireqdata, filterData);\r\n    //             gridCompInstance.ResetPagination();\r\n    //             gridCompInstance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n    //         }\r\n    //         } catch (e) {\r\n    //             console.error(\"ActionApplyFilter error:\", e);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    ActionResetFilter(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n        let page = this.instance.pageInstance;\r\n        let src = eventparams;\r\n        let targ;\r\n\r\n        params.forEach((param:any) => {\r\n            try {\r\n                let filterPosition = Object.keys(param).find((key) => key == \"page.filterposition\");\r\n                filterPosition = param[filterPosition!].replace(/'/g, \"\");\r\n                const filterCompInstance = page.compRefInstancesMap.get(filterPosition);\r\n\r\n                let gridPosition = Object.keys(param).find((key) => key == \"page.gridposition\");\r\n                gridPosition = param[gridPosition!].replace(/'/g, \"\");\r\n                const gridCompInstance = page.compRefInstancesMap.get(gridPosition);\r\n\r\n                filterCompInstance.Reset();\r\n\r\n                var filterData = filterCompInstance.GetValue();\r\n                //gridCompInstance.dataModel.apireqdata.wf = undefined;\r\n                if (gridCompInstance) {\r\n                    targ = gridCompInstance.dataModel;\r\n                    Object.keys(param).forEach((key) => {\r\n                        eval(`${key} = ${param[key]}`);\r\n                    });\r\n                    Object.assign(gridCompInstance.dataModel.apireqdata, filterData);\r\n                    gridCompInstance.ResetPagination();\r\n                    gridCompInstance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"ActionResetFilter error:\", e);\r\n            }\r\n        });\r\n    }\r\n\r\n  \r\n\r\n    // refresh widget data\r\n    ActionRefreshData(wigDataContext: any, params: any, eventparams: any) {\r\n        const instance = this.compRefInstancesMap.get(params.position);\r\n        instance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n    }\r\n\r\n    // refresh any event\r\n    ActionRefreshAnyEventAction(wigDataContext: any, params: any, eventparams: any) {\r\n        let targ;\r\n        let page = this.instance.pageInstance;\r\n        params.forEach((param:any) => {\r\n            try {\r\n                var position = Object.keys(param).find((key) => key == \"page.position\");\r\n                position = param[position!].replace(/'/g, \"\");\r\n\r\n                const compInstance = page.compRefInstancesMap.get(position);\r\n                targ = compInstance.dataModel;\r\n          \r\n                let refreshEventName;\r\n                Object.keys(param).forEach((key) => {\r\n                    eval(`${key} = ${param[key]}`);\r\n                });\r\n\r\n                let data = eventparams.reqData;\r\n                if(data){\r\n                    data.eventparamsData = eventparams;\r\n                }               \r\n                compInstance.configModel.CallerToComp.emit(refreshEventName, data);\r\n\r\n            } catch (e) {\r\n                console.error(\"ActionRefreshAnyEventAction error:\", e);\r\n            }\r\n        });\r\n       \r\n    }\r\n\r\n    ActionDynamicMethod(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n        try {\r\n            this.dynamicMethod = new Function(params)();\r\n            this.dynamicMethod!(eventparams)\r\n        } catch (e) {\r\n            console.error(\"Error occured while compiling/executing dynamic method\", params, e)\r\n        }\r\n\r\n    }\r\n\r\n    ActionShowPopup(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n        let popupHolderInstance = this.instance.popupHolderInstance\r\n        let page = this.instance.pageInstance;\r\n        let src = eventparams;\r\n        let targ;\r\n\r\n        params.forEach((param:any) => {\r\n            try {\r\n                var position = Object.keys(param).find((key) => key == \"page.position\");\r\n                position = param[position!].replace(/'/g, \"\");\r\n\r\n                const compInstance = page.compRefInstancesMap.get(position);\r\n                targ = compInstance.dataModel;\r\n                Object.keys(param).forEach((key) => {\r\n                    // console.log(`key = param[key] :  ${key} = ${param[key]}`);\r\n                    eval(`${key} = ${param[key]}`);\r\n                });\r\n                compInstance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n\r\n            } catch (e) {\r\n                console.error(\"ActionShowPopup error:\", e);\r\n            }\r\n        });\r\n\r\n        popupHolderInstance.showDialog();\r\n\r\n    }\r\n\r\n    ActionShowPopupByPropChange(wigDataContext: any, params: any, eventparams: any) {\r\n\r\n        let page = this.instance.pageInstance;\r\n        let src = eventparams;\r\n        let targ;\r\n\r\n        params.forEach((param:any) => {\r\n            try {\r\n                var position = Object.keys(param).find((key) => key == \"page.position\");\r\n\r\n                let compInstance;\r\n\r\n                if (position) {\r\n                    position = param[position].replace(/'/g, \"\");\r\n                    compInstance = page.compRefInstancesMap.get(position);\r\n                    targ = compInstance.dataModel;\r\n                }\r\n\r\n                Object.keys(param).forEach((key) => {\r\n                    // console.log(`key = param[key] :  ${key} = ${param[key]}`);\r\n                    eval(`${key} = ${param[key]}`);\r\n                });\r\n\r\n                if (position) {\r\n                    compInstance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(\"ActionShowPopupByPropChange error:\", e);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // redirect to redirection url in new window\r\n    ActionRedirect(wigDataContext: any, params: any, eventparams: any) {\r\n        const url = eventparams.redirectionurl + params.location\r\n        window.open(url);\r\n    }\r\n\r\n    ActionSearch(wigDataContext: any, params: any, eventparams: any) {\r\n        let page = this.instance;\r\n        let src = eventparams;\r\n        let targ;\r\n\r\n        params.forEach((param:any) => {\r\n            try {\r\n                var position = Object.keys(param).find((key) => key == \"page.position\");\r\n\r\n                let compInstance;\r\n\r\n                if (position) {\r\n                    position = param[position].replace(/'/g, \"\");\r\n                    compInstance = page.compRefInstancesMap.get(position);\r\n                    targ = compInstance.dataModel;\r\n                }\r\n\r\n                Object.keys(param).forEach((key) => {\r\n                    // console.log(`key = param[key] :  ${key} = ${param[key]}`);\r\n                    eval(`${key} = ${param[key]}`);\r\n                });\r\n                compInstance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n\r\n            } catch (e) {\r\n                console.error(\"ActionSearch error:\", e);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    ActionSetPageProp(wigDataContext: any, params: any, eventparams: any) {\r\n        let page = this.instance;\r\n        let src = eventparams;\r\n        params.forEach((param:any) => {\r\n            try {\r\n\r\n                Object.keys(param).forEach((key) => {\r\n                    // console.log(`key = param[key] :  ${key} = ${param[key]}`);\r\n                    eval(`${key} = ${param[key]}`);\r\n                });\r\n\r\n            } catch (e) {\r\n                console.error(\"ActionSetPageProp error:\", e);\r\n            }\r\n        });\r\n    }\r\n\r\n    ActionSetGlobaParams(wigDataContext: any, params: any, eventparams: any) {\r\n        let page = this.instance;\r\n        let src = eventparams;\r\n        let targ:any;\r\n\r\n        params.forEach((param:any) => {\r\n            try {\r\n                var position = Object.keys(param).find((key) => key == \"page.position\");\r\n\r\n                let compInstance;\r\n\r\n                if (position) {\r\n                    position = param[position].replace(/'/g, \"\");\r\n                    compInstance = page.compRefInstancesMap.get(position);\r\n                    if(compInstance){\r\n                        targ = compInstance.dataModel;\r\n                    }                    \r\n                }\r\n\r\n                Object.keys(param).forEach((key) => {\r\n                    targ?.globalParameters.set(key, eval(param[key]));\r\n                });\r\n\r\n\r\n            } catch (e) {\r\n                console.error(\"ActionSetGlobaParams error:\", e);\r\n            }\r\n        });\r\n    }\r\n\r\n    ActionSetBreadcrumbItem(wigDataContext: any, params: any, eventparams: any) {\r\n        let src = eventparams;\r\n        let targ;\r\n        params.forEach((param:any) => {\r\n            var position = Object.keys(param).find((key) => key == \"position\");\r\n            position = param[position!].replace(/'/g, \"\");\r\n\r\n            const compInstance = this.compRefInstancesMap.get(position!);\r\n            targ = compInstance.dataModel;\r\n            eval(`compInstance.dataModel.items.push(${param[\"propname\"]})`);\r\n        });\r\n    }\r\n\r\n    ActionSetBreadcrumbsView(wigDataContext: any, params: any, eventparams: any) {\r\n        let page = this.instance;\r\n        page.viewMap.forEach((element:any) => {\r\n            if (params[0].breadcrumbCode == element.name) {\r\n                eval('this.' + element.value + \"=false\");\r\n            } else {\r\n                eval('this.' + element.value + \"=true\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // ActionOpenFileInNewTab(wigDataContext: any, params: any, eventparams: any) {\r\n    //     let page = this.instance;\r\n    //     let skipSpinner:any;\r\n    //     let reqData = Object();\r\n    //     reqData.data = Object();\r\n        \r\n    //     if (params.downloadKey instanceof Array) {\r\n    //         params.downloadKey.forEach((element:any) => {\r\n    //             reqData.data[element]=eventparams[element]\r\n    //         })\r\n    //     }\r\n    //     else {\r\n    //         reqData.data.nodelist = eventparams[params.downloadKey];\r\n    //     }\r\n        \r\n    //     const downloadApiUrl = wigDataContext.downloadApiUrl ? wigDataContext.downloadApiUrl:\"/v1/utility/downloadfile\";\r\n    //     if (params.skipSpinner) {\r\n    //         skipSpinner = params.skipSpinner\r\n    //     }\r\n    //     if (!skipSpinner) {\r\n    //         page.showSpinner()\r\n    //     }\r\n    //     this._serverApi.downloadTextFile(downloadApiUrl, reqData.data)\r\n    //         .subscribe(response => {\r\n    //             if (!skipSpinner) {\r\n    //                 page.hideSpinner()\r\n    //             }\r\n    //             this._saveFileService.openFileInNewTab(response);\r\n    //         },\r\n    //             error => {\r\n    //                 if (!skipSpinner) {\r\n    //                     page.hideSpinner()\r\n    //                 }\r\n    //                 this._notificationService.error(\"Operation failed\");\r\n    //             });\r\n    // }\r\n\r\n    // ActionDownload(wigDataContext: any, params: any, eventparams: any) {\r\n    //     let page = this.instance;\r\n    //     let skipSpinner;\r\n    //     let reqData = Object();\r\n    //     reqData.data = Object();\r\n        \r\n    //     if (params.downloadKey instanceof Array) {\r\n    //         params.downloadKey.forEach(element => {\r\n    //             reqData.data[element]=eventparams[element]\r\n    //         })\r\n    //     }\r\n    //     else {\r\n    //         reqData.data.nodelist = eventparams[params.downloadKey];\r\n    //     }\r\n        \r\n    //     const downloadApiUrl = wigDataContext.downloadApiUrl ? wigDataContext.downloadApiUrl:\"/v1/utility/downloadfile\";\r\n    //     if (params.skipSpinner) {\r\n    //         skipSpinner = params.skipSpinner\r\n    //     }\r\n    //     if (!skipSpinner) {\r\n    //         page.showSpinner()\r\n    //     }\r\n    //     this._serverApi.download(downloadApiUrl, reqData.data)\r\n    //         .subscribe(response => {\r\n    //             if (!skipSpinner) {\r\n    //                 page.hideSpinner()\r\n    //             }\r\n    //             this._saveFileService.saveFile(response, eventparams[params.fileNameKey]);\r\n    //         },\r\n    //             error => {\r\n    //                 if (!skipSpinner) {\r\n    //                     page.hideSpinner()\r\n    //                 }\r\n    //                 this._notificationService.error(\"Download failed\");\r\n    //             });\r\n    // }\r\n\r\n    \r\n    // ActionExport(wigDataContext: any, params: any, eventparams: any) {\r\n    //     let page = this.instance;\r\n    //     let skipSpinner;\r\n    //     let targ;\r\n    //     let reqData = Object();\r\n    //     reqData.data = Object();\r\n    //     params.forEach(param => {\r\n    //         try {\r\n    //             let filterPosition = Object.keys(param).find((key) => key == \"page.filterposition\");\r\n    //             filterPosition = param[filterPosition].replace(/'/g, \"\");\r\n    //             const filterCompInstance = page.compRefInstancesMap.get(filterPosition);\r\n\r\n    //             let gridPosition = Object.keys(param).find((key) => key == \"page.gridposition\");\r\n    //             gridPosition = param[gridPosition].replace(/'/g, \"\");\r\n    //             const gridCompInstance = page.compRefInstancesMap.get(gridPosition);\r\n    //             let filterData = {};\r\n    //             if(filterCompInstance){\r\n    //                 const isvalid = filterCompInstance.Validate();\r\n    //                 if (!isvalid) {\r\n    //                     page.collapse = false;\r\n    //                     return false;\r\n    //                 }\r\n    //                 page.collapse = true;\r\n    //                 filterData = filterCompInstance.GetValue();\r\n    //             }                \r\n               \r\n    //             if(gridCompInstance){\r\n    //             targ = gridCompInstance.dataModel;\r\n    //             Object.keys(param).forEach((key) => {\r\n    //                 eval(`${key} = ${param[key]}`);\r\n    //             });\r\n    //             Object.assign(gridCompInstance.dataModel.apireqdata, filterData);\r\n\r\n    //             Object.assign(reqData.data, gridCompInstance.dataModel.apireqdata);\r\n    //             reqData.data.id = gridCompInstance.dataModel.widgetinstanceid;\r\n    //         }\r\n    //         } catch (e) {\r\n    //             console.error(\"ActionExport error:\", e);\r\n    //         }\r\n    //     });\r\n  \r\n    //     const exportApiUrl = \"/v1/widget/getwidgetexceldata\";\r\n    //     if (params.skipSpinner) {\r\n    //         skipSpinner = params.skipSpinner\r\n    //     }\r\n    //     if (!skipSpinner) {\r\n    //         page.showSpinner()\r\n    //     }\r\n \r\n    //     const exportCurrentDate = new Date().toLocaleDateString();\r\n    //     this._serverApi.exportFile(exportApiUrl, reqData.data)\r\n    //         .subscribe(response => {\r\n    //             if (!skipSpinner) {\r\n    //                 page.hideSpinner()\r\n    //             }\r\n    //             this._saveFileService.saveFile(response,  reqData.data[\"filename\"] + \"_\" + exportCurrentDate + \".xlsx\");\r\n    //         },\r\n    //         error => {\r\n    //             if (!skipSpinner) {\r\n    //                 page.hideSpinner()\r\n    //             }\r\n    //             this._notificationService.error(\"Export failed\");\r\n    //         });\r\n    // }\r\n\r\n    ActionExecutePageMethod(wigDataContext: any, params: any, eventparams?: any) {\r\n        let page = this.instance;\r\n        params.forEach((param:any) => {\r\n            eval('page.' + param.methodname + '(eventparams,wigDataContext,params)');\r\n        });\r\n    }\r\n\r\n    ActionOnSubmitWithUserData(wigDataContext: any, params: any, eventparams: any, posteventaction: any) {\r\n\r\n        let page = this.instance;\r\n        let isValid = true;\r\n        let skipSpinner:any;\r\n        var submitData = Object();\r\n        submitData.id = eventparams.id;\r\n        submitData.updateId = eventparams.updateId;\r\n        submitData.queryAction = eventparams.queryAction;\r\n        if(params[0].submitcode){\r\n            submitData.executeactionsubmitcode = params[0].submitcode\r\n    }\r\n        if (params[0].dataposition) {\r\n            eventparams.positions = params[0].dataposition\r\n    }\r\n\r\n        params.forEach((param:any) => {\r\n            if (param.skipSpinner) {\r\n                skipSpinner = param.skipSpinner\r\n            }\r\n        })\r\n        try {\r\n\r\n            if (!eventparams.positions && eventparams.positions.length == 0) {\r\n                console.error(\"ActionOnSubmitWithUserData error: submit data positions not found\");\r\n                return\r\n            }\r\n\r\n            eventparams.positions.forEach((position:any) => {\r\n                var compInstance = this.compRefInstancesMap.get(position);\r\n                if(compInstance){\r\n                    const isvalid = compInstance.Validate();\r\n                    if (!isvalid && isValid) {\r\n                        isValid = isvalid;\r\n                    }\r\n                }\r\n               \r\n            });\r\n\r\n            if (!isValid) { return; }\r\n\r\n            eventparams.positions.forEach((position:any) => {\r\n                var compInstance = this.compRefInstancesMap.get(position);\r\n                if(compInstance && compInstance.GetValue){\r\n                    const data = compInstance.GetValue();\r\n                    Object.assign(submitData, data);\r\n                }\r\n               \r\n            });\r\n\r\n            const apiUrlConst = eventparams.apiSubmitUrl;\r\n            if (!skipSpinner) {\r\n                page.showSpinner()\r\n            }\r\n\r\n            this._serverApi.post<any, any>(apiUrlConst, submitData).subscribe(\r\n                response => {\r\n                    if (!skipSpinner) {\r\n                        page.hideSpinner();\r\n                    }\r\n\r\n                    if (response) {\r\n                        if (posteventaction && posteventaction.success) {\r\n                            posteventaction.success.forEach((item:any) => {\r\n                                eventparams.reqData = submitData\r\n                                eventparams.responseData = response.data;\r\n                                page._eventActionService.ActionHandler(wigDataContext, item, page, eventparams)\r\n                            });\r\n                        }\r\n                    } (error:any) => {\r\n                        if (!skipSpinner) {\r\n                            page.hideSpinner();\r\n                        }\r\n                        this._notificationService.error(\"Submit request failed\");\r\n                    }\r\n                },error => {\r\n                    if (!skipSpinner) {\r\n                        page.hideSpinner();\r\n                    }\r\n\r\n                    this._notificationService.error(\"Something went wrong!\");\r\n                   \r\n                }\r\n            );\r\n\r\n        } catch (e) {\r\n            console.error(\"ActionOnSubmitWithUserData error:\", e);\r\n        }\r\n\r\n    }\r\n\r\n    // ActionOnFileUploadWithUserData(wigDataContext: any, params: any, eventparams: any, posteventaction: any) {\r\n\r\n    //     let page = this.instance;\r\n    //     let isValid = true;\r\n    //     let skipSpinner:any;\r\n    //     var submitData = Object();\r\n    //     submitData.id = eventparams.id;\r\n    //     submitData.updateId = eventparams.updateId;\r\n    //     submitData.queryAction = eventparams.queryAction;\r\n    //     submitData.executeactionsubmitcode = eventparams.submitcode\r\n    //     params.forEach((param:any) => {\r\n    //         if (param.skipSpinner) {\r\n    //             skipSpinner = param.skipSpinner\r\n    //         }\r\n    //     })\r\n\r\n    //     if (eventparams.paramkeys) {\r\n    //         eventparams.paramkeys.forEach((element:any) => {\r\n    //             const val = eventparams[element]\r\n    //             submitData[element] = val;\r\n    //         });\r\n    //     }\r\n\r\n    //     let filesData = eventparams.fileData\r\n    //     const formData: FormData = new FormData();\r\n    //     for (const file of filesData.files) {\r\n    //         formData.append('files', file);\r\n\r\n    //     }\r\n\r\n    //     try {\r\n\r\n    //         if (!eventparams.positions && eventparams.positions.length == 0) {\r\n    //             console.error(\"ActionOnSubmitWithUserData error: submit data positions not found\");\r\n    //             return\r\n    //         }\r\n\r\n    //         eventparams.positions.forEach((position:any) => {\r\n    //             var compInstance = this.compRefInstancesMap.get(position);\r\n    //             if(compInstance && compInstance.Validate){\r\n    //                 const isvalid = compInstance.Validate();\r\n    //                 if (!isvalid && isValid) {\r\n    //                     isValid = isvalid;\r\n    //                 }\r\n    //             }\r\n                \r\n    //         });\r\n\r\n    //         if (!isValid) { return; }\r\n\r\n    //         eventparams.positions.forEach((position:any) => {\r\n    //             var compInstance = this.compRefInstancesMap.get(position);\r\n    //             if(compInstance && compInstance.GetValue){\r\n    //                 const data = compInstance.GetValue();\r\n    //                 Object.assign(submitData, data);\r\n    //             }\r\n                \r\n    //         });\r\n\r\n    //         formData.append('requestData', JSON.stringify(submitData));\r\n\r\n    //         const apiUrlConst = eventparams.apiUploadUrl;\r\n    //         if (!skipSpinner) {\r\n    //             page.showSpinner()\r\n    //         }\r\n    //         this._serverApi.upload<any, any>(apiUrlConst, formData).subscribe(\r\n    //             response => {\r\n\r\n    //                 if (response && response.status == 'progress') {\r\n    //                     //todo implement progress bar\r\n    //                 }\r\n    //                 else if (response) {\r\n    //                     if (!skipSpinner) {\r\n    //                         page.hideSpinner();\r\n    //                     }\r\n    //                     //this._notificationService.success('File Uploaded');\r\n    //                     if (posteventaction && posteventaction.success) {\r\n    //                         posteventaction.success.forEach((item:any) => {\r\n    //                             eventparams.reqData = submitData\r\n    //                             eventparams.responseData = response;\r\n    //                             page._eventActionService.ActionHandler(wigDataContext, item, page, eventparams)\r\n    //                         });\r\n    //                     }\r\n    //                 }\r\n\r\n    //             }, error => {\r\n    //                 if (!skipSpinner) {\r\n    //                     page.hideSpinner();\r\n    //                 }\r\n    //                 if (posteventaction && posteventaction.failure) {\r\n    //                     posteventaction.failure.forEach((item:any) => {\r\n    //                         eventparams.reqData = submitData\r\n    //                         eventparams.responseData = error;\r\n    //                         page._eventActionService.ActionHandler(wigDataContext, item, page, eventparams)\r\n    //                     });\r\n    //                 }\r\n    //                 else{\r\n    //                     this._notificationService.error(\"Upload request failed\");\r\n    //                 }\r\n    //             }\r\n    //         );\r\n\r\n    //     } catch (e) {\r\n    //         console.error(\"ActionOnSubmitWithUserData error:\", e);\r\n    //     }\r\n\r\n    // }\r\n\r\n    ActionSubmitDataWithOrWithoutFileupload(wigDataContext: any, params: any, eventparams: any, posteventaction: any){\r\n        let page = this.instance;\r\n        let skipSpinner;\r\n        params.forEach((param:any) => {\r\n            if (param.skipSpinner) {\r\n                skipSpinner = param.skipSpinner\r\n            }\r\n        });\r\n\r\n        try {\r\n\r\n            params.forEach((param:any) => {\r\n            try {\r\n\r\n                 //get position of fileupload widget\r\n                var keyname = Object.keys(param).find((key) => key == \"fileupload.position\");\r\n\r\n                let compInstance;\r\n\r\n                if (keyname) {\r\n                    let position = param[keyname].replace(/'/g, \"\");\r\n                    compInstance = page.compRefInstancesMap.get(position);\r\n                    \r\n                    if (compInstance && compInstance.GetValue){\r\n                        const data = compInstance.GetValue();\r\n\r\n                        let event = Object();\r\n                        event.params = params;\r\n                        if (data?.uploadedFiles.length) {\r\n\r\n                            //If submit data with fileupload\r\n                            eventparams.fileData = Object();\r\n                            eventparams.fileData.files = data.uploadedFiles;\r\n                            event.action = \"fileUploadWithUserData\";\r\n                            page._eventActionService.ActionHandler(wigDataContext, event, page, eventparams, posteventaction);\r\n                        }\r\n                        else{\r\n                            event.action = \"onsubmitwithuserdata\";\r\n                            page._eventActionService.ActionHandler(wigDataContext, event, page, eventparams, posteventaction);\r\n                        }\r\n                    }                 \r\n                }    \r\n                } catch (e) {\r\n                    console.error(\"ActionSubmitDataWithOrWithoutFileupload error:\", e);\r\n                }\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error(\"ActionSubmitDataWithOrWithoutFileupload error:\", e);\r\n        }\r\n\r\n    }\r\n   \r\n    ActionOnSubmit(wigDataContext: any, params: any, eventparams: any, posteventaction: any) {\r\n\r\n        let instance = this;\r\n\r\n        let page = this.instance;\r\n        let src = eventparams;\r\n        let targ:any;  \r\n        let req = Object();\r\n        let skipSpinner:any;\r\n        params.forEach((param:any) => {\r\n            if (param.skipSpinner) {\r\n                skipSpinner = param.skipSpinner\r\n            }\r\n        })\r\n        if(params && params[0].submitcode){\r\n            req.executeactionsubmitcode = params[0].submitcode\r\n        }\r\n        if (params[0].dataposition) {\r\n            req.positions = params[0].dataposition\r\n        }\r\n\r\n        try {\r\n\r\n            params.forEach((param:any) => {\r\n\r\n                var position = Object.keys(param).find((key) => key == \"page.position\");\r\n\r\n                let compInstance;\r\n\r\n                if (position) {\r\n                    position = param[position].replace(/'/g, \"\");\r\n                    compInstance = this.compRefInstancesMap.get(position!);\r\n                    targ = compInstance.dataModel;\r\n                }\r\n\r\n                Object.keys(param).forEach((key) => {\r\n                    if (key != \"page.position\") {\r\n                        // console.log(`key = param[key] :  ${key} = ${param[key]}`);\r\n                        eval(`${key} = ${param[key]}`);\r\n                    }\r\n                });\r\n\r\n\r\n            });\r\n        \r\n            const apiUrlConst = targ.submitProperties.apiSubmitUrl;\r\n            if (!skipSpinner) {\r\n                page.showSpinner()\r\n            }\r\n\r\n            //  req.id = targ.submitProperties.id\r\n            this._serverApi.post<any, any>(apiUrlConst, req).subscribe(\r\n                response => {\r\n                    if (response) {\r\n                        if (!skipSpinner) {\r\n                            page.hideSpinner();\r\n                        }\r\n                        if (posteventaction && posteventaction.success) {\r\n                            posteventaction.success.forEach((item:any) => {\r\n                                eventparams.reqData = req\r\n                                eventparams.responseData = response.data;\r\n                                page._eventActionService.ActionHandler(wigDataContext, item, page, eventparams);\r\n                            });\r\n                        }\r\n                    }\r\n                },error => {\r\n                    if (!skipSpinner) {\r\n                        page.hideSpinner();\r\n                    }\r\n                }\r\n            );\r\n\r\n        } catch (e) {\r\n            console.error(\"ActionOnSubmit error:\", e);\r\n        }\r\n\r\n    }\r\n\r\n    ActionHandler(wigDataContext: any, event:any, pageInstance:any, srcEventParams:any,posteventaction:any) {\r\n        let eventHandler = pageInstance._eventActionService.getEventHandler(event.action);\r\n        pageInstance.eventHandler = eventHandler;\r\n        pageInstance.eventHandler(wigDataContext, event.params, srcEventParams,posteventaction);\r\n    }\r\n\r\n    // ActionSaveExcelFile(wigDataContext: any, params: any, eventparams: any) {\r\n    //     let page = this.instance;\r\n    //     let src = eventparams;\r\n    //     let targ;\r\n    //     let data = src?.responseData[0]?.excelData?.data;\r\n    //     let fileName;\r\n    //     let exportCurrentDate = new Date().toLocaleDateString();\r\n    //     let type = src?.responseData[0]?.excelData?.type;\r\n\r\n    //     Object.keys(params).forEach((key) => {\r\n    //         eval(`${key} = ${params[key]}`);\r\n    //     });\r\n\r\n    //     //type: [\"base64\", \"memoryStream\", \"byteArray\"]\r\n    //     switch (type) {\r\n    //         case \"memoryStream\":\r\n    //             this._saveFileService.saveFile(data, fileName);\r\n    //             break\r\n    //         case \"byteArray\":\r\n    //             this._saveFileService.saveFile(data, fileName);\r\n    //             break\r\n    //         default:\r\n    //             this._saveFileService.saveExcelFile(data, fileName)\r\n    //             break;\r\n    //     }\r\n       \r\n    // }\r\n\r\n    // ActionSaveZipFile(wigDataContext: any, params: any, eventparams: any) {\r\n    //     let page = this.instance;\r\n    //     let src = eventparams;\r\n    //     let targ;\r\n    //     let data = src?.responseData[0]?.zipData?.data;\r\n    //     let fileName;\r\n    //     let exportCurrentDate = new Date().toLocaleDateString();\r\n    //     let type = src?.responseData[0]?.zipData?.type;\r\n\r\n    //     Object.keys(params).forEach((key) => {\r\n    //         eval(`${key} = ${params[key]}`);\r\n    //     });\r\n\r\n    //     //type: [\"base64\", \"memoryStream\", \"byteArray\"]\r\n    //     switch (type) {\r\n    //         case \"memoryStream\":\r\n    //             this._saveFileService.saveZipFile(data, fileName);\r\n    //             break\r\n    //         case \"byteArray\":\r\n    //             this._saveFileService.saveZipFile(data, fileName);\r\n    //             break\r\n    //         default:\r\n    //             this._saveFileService.saveZipFileV2(data, fileName)\r\n    //             break;\r\n    //     }\r\n       \r\n    // }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_helperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_helperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LocalStorageService",
            "id": "injectable-LocalStorageService-46a28892cbb3b9dbd792922bad428028",
            "file": "src/app/services/common/local-storage.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "clearLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "LoginAPIResponse",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getObject",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T | null",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveCurrentUser",
                    "args": [
                        {
                            "name": "userinfo",
                            "type": "LoginAPIResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userinfo",
                            "type": "LoginAPIResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setObject",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { LoginAPIResponse } from 'src/app/models/dto/user-management/login-response';\r\nimport { LOCAL_STORAGE_DATA_KEY } from '../../app-constants';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor() { }\r\n\r\n  getObject<T>(key: string): T | null {\r\n    const valueJSON = localStorage.getItem(key);\r\n    return JSON.parse(valueJSON);\r\n  }\r\n  setObject<T>(key: string, data: T): void {\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n  }\r\n\r\n  saveCurrentUser(userinfo: LoginAPIResponse) {\r\n    this.setObject<LoginAPIResponse>(LOCAL_STORAGE_DATA_KEY.USERINFO, userinfo);\r\n  }\r\n\r\n  getCurrentUser(): LoginAPIResponse {\r\n    return this.getObject<LoginAPIResponse>(LOCAL_STORAGE_DATA_KEY.USERINFO);\r\n  }\r\n  clearLocalStorage() {\r\n    localStorage.clear();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "NotificationService",
            "id": "injectable-NotificationService-63609b8d04cb39a99bef5ddcd9295fe8",
            "file": "src/app/services/common/notification.service.ts",
            "properties": [
                {
                    "name": "toasterPosition",
                    "defaultValue": "{ positionClass: 'toast-top-right' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "error",
                    "args": [
                        {
                            "name": "errMsg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "errMsg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "info",
                    "args": [
                        {
                            "name": "info",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "info",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "success",
                    "args": [
                        {
                            "name": "successMsg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "successMsg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "warning",
                    "args": [
                        {
                            "name": "warningMsg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "warningMsg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n  constructor(private _toastnotificationservice: ToastrService) { }\r\n  toasterPosition = { positionClass: 'toast-top-right' }\r\n  \r\n  error(errMsg: string) {\r\n    \r\n    this._toastnotificationservice.error(errMsg,null!, this.toasterPosition)\r\n  }\r\n  success(successMsg: string) {\r\n    this._toastnotificationservice.success(successMsg,null!, this.toasterPosition);\r\n  }\r\n  info(info:string){\r\n    this._toastnotificationservice.info(info ,null!, this.toasterPosition);\r\n  }\r\n  warning(warningMsg:string) {\r\n    this._toastnotificationservice.warning(warningMsg ,null!, this.toasterPosition);\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_toastnotificationservice",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "_toastnotificationservice",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ServerApiInterfaceServiceService",
            "id": "injectable-ServerApiInterfaceServiceService-1ed95e624b0972cdb1547a7584e555c5",
            "file": "src/app/services/common/server-api-interface-service.service.ts",
            "properties": [
                {
                    "name": "clientid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "sessiontoken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "userroleid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 25
                }
            ],
            "methods": [
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "downloadTextFile",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "downloadZipFile",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "exportFile",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "headers",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryParams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "headers",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<R>",
                    "typeParameters": [
                        "T",
                        "R"
                    ],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "put",
                    "args": [
                        {
                            "name": "url",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<R>",
                    "typeParameters": [
                        "T",
                        "R"
                    ],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateToken",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "headers",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<R>",
                    "typeParameters": [
                        "T",
                        "R"
                    ],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpEventType } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\nexport class ServerAPIErrorModel {\r\n  handled: boolean;\r\n  error: any;\r\n\r\n  constructor(handled: boolean, error: any) {\r\n    this.handled = handled;\r\n    this.error = error;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServerApiInterfaceServiceService {\r\n  sessiontoken?: string;\r\n  clientid?: string;\r\n  userroleid?:any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get<T>(url: string, queryParams?: any): Observable<T> {\r\n\r\n    let httpOptions = {\r\n      headers: new HttpHeaders(\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }),\r\n      \r\n      params: new HttpParams()\r\n    };\r\n\r\n    if (queryParams) {\r\n      httpOptions.params = new HttpParams().set('param', JSON.stringify(queryParams))\r\n    }\r\n    return this.http.get<T>(environment.baseurl + url, httpOptions);\r\n\r\n  }\r\n\r\n  post<T, R>(url: string, request: T, headers?:any): Observable<R> {\r\n    let offset:any = new Date().getTimezoneOffset();\r\n    offset = `${offset * (-1)}`;\r\n    headers =  new HttpHeaders({\r\n      ClientTZOffSet:  offset\r\n    }); \r\n    let httpOptions = {\r\n      headers: headers ? headers : new HttpHeaders(),\r\n      params: new HttpParams()\r\n    };\r\n    if(request)\r\n    {\r\n    //  request = DataHelper.getTrimData(request);\r\n    }\r\n    return this.http.post<R>(environment.baseurl + url, request, httpOptions);\r\n\r\n  }\r\n\r\n  validateToken<T, R>(url: string, request: T, headers?:any): Observable<R> {\r\n    let offset:any = new Date().getTimezoneOffset();\r\n    offset = `${offset * (-1)}`;\r\n    let token:any = sessionStorage.getItem(\"msal.idtoken\");\r\n    headers =  new HttpHeaders({\r\n      ClientTZOffSet:  offset,\r\n      Token: token\r\n    }); \r\n    let httpOptions = {\r\n      headers: headers ? headers : new HttpHeaders(),\r\n      params: new HttpParams()\r\n    };\r\n    if(request)\r\n    {\r\n    //  request = DataHelper.getTrimData(request);\r\n    }\r\n    return this.http.post<R>(environment.baseurl + url, request, httpOptions);\r\n\r\n  }\r\n\r\n  put<T, R>(url:any, data:any): Observable<R> {\r\n    const uploadURL = environment.baseurl + url;\r\n    \r\n    /*This code can be workout in next branch */\r\n    // if(data)\r\n    // {\r\n    //   for (const pair of data.entries()) {\r\n    //     data.entries[pair] = DataHelper.getTrimData(pair);\r\n    //     console.log(data.entries[pair]);\r\n    // }\r\n   //  }\r\n   let offset:any = new Date().getTimezoneOffset();\r\n   offset = `${offset * (-1)}`;\r\n    let headers =  new HttpHeaders({\r\n     ClientTZOffSet:  offset\r\n   }); \r\n\r\n    return this.http.post<any>(uploadURL, data, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      headers: headers ? headers : new HttpHeaders(),\r\n    }).pipe(map((event) => {\r\n\r\n      switch (event.type) {\r\n\r\n        case HttpEventType.UploadProgress:\r\n          const progress = Math.round(100 * event.loaded / event.total!);\r\n          return { status: 'progress', message: progress };\r\n\r\n        case HttpEventType.Response:\r\n          return event.body;\r\n        \r\n          case HttpEventType.Sent:\r\n          console.log(event);\r\n          break\r\n        break;\r\n        \r\n        default:\r\n         console.log( `Unhandled event: ${event.type}`);\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n\r\n  download(url: string, queryParams?: any) : Observable<any>{\r\n    return this.http.get(environment.baseurl + url + '?reqparams=' + JSON.stringify(queryParams), {\r\n      headers: new HttpHeaders(\r\n        {\r\n            'Content-Type': 'application/json',\r\n         \r\n        }),\r\n       responseType: 'blob'\r\n    });\r\n  }\r\n\r\n  exportFile(url: string, request?: any,headers?:any) : Observable<any>{\r\n\r\n    return this.http.post(environment.baseurl + url, request, {observe: 'body', responseType: 'blob'});\r\n  }\r\n\r\n  \r\n  downloadTextFile(url: string, queryParams?: any) : Observable<any>{\r\n    return this.http.get(environment.baseurl + url + '?reqparams=' + JSON.stringify(queryParams), {\r\n      headers: new HttpHeaders(\r\n        {\r\n            'Content-Type': 'application/json',\r\n         \r\n        }),\r\n       responseType: 'text'\r\n    });\r\n  }\r\n\r\n  downloadZipFile(url: string, queryParams?: any) {\r\n    return this.http.get(environment.baseurl + url + '?reqparams=' + JSON.stringify(queryParams), {\r\n      responseType: 'arraybuffer'\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SessionStorageService",
            "id": "injectable-SessionStorageService-ab0ffe8ea76c5100fe0e1143b7acb3de",
            "file": "src/app/services/common/session-storage.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "clearSessionStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNavigationData",
                    "args": [],
                    "optional": false,
                    "returnType": "Map<string, object>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getObject",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T | null",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveCurrentUser",
                    "args": [
                        {
                            "name": "userinfo",
                            "type": "LoginAPIResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userinfo",
                            "type": "LoginAPIResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNavigationData",
                    "args": [
                        {
                            "name": "navigationData",
                            "type": "Map<string | object>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "navigationData",
                            "type": "Map<string | object>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setObject",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { LoginAPIResponse } from 'src/app/models/dto/user-management/login-response';\r\nimport { SESSION_STORAGE_DATA_KEY } from '../../app-constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionStorageService {\r\n\r\n  constructor() { }\r\n\r\n  getObject<T>(key: string): T | null {\r\n    const valueJSON = sessionStorage.getItem(key);\r\n    return JSON.parse(valueJSON!);\r\n  }\r\n  setObject<T>(key: string, data: T): void {\r\n    sessionStorage.setItem(key, JSON.stringify(data));\r\n  }\r\n\r\n  saveCurrentUser(userinfo: LoginAPIResponse) {\r\n    this.setObject<LoginAPIResponse>(SESSION_STORAGE_DATA_KEY.USERINFO, userinfo);\r\n  }\r\n\r\n  // getCurrentUser(): LoginAPIResponse {\r\n  //   return this.getObject<LoginAPIResponse>(SESSION_STORAGE_DATA_KEY.USERINFO);\r\n  // }\r\n  clearSessionStorage() {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  setNavigationData(navigationData : Map<string,object>){\r\n    let jsonText = JSON.stringify(Array.from(navigationData.entries()));\r\n    this.setObject(SESSION_STORAGE_DATA_KEY.NAVIGATION_DATA,jsonText);\r\n  }\r\n\r\n  getNavigationData(): Map<string,object>{\r\n    let navigationDataString = this.getObject<string>(SESSION_STORAGE_DATA_KEY.NAVIGATION_DATA);\r\n    let navigationDataMap = new Map<string,object>(JSON.parse(navigationDataString!));\r\n    return navigationDataMap;\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "StartUpService",
            "id": "injectable-StartUpService-0846c922103f3efb48df9dd131518099",
            "file": "src/app/services/common/startup.service.ts",
            "properties": [
                {
                    "name": "filterOperators",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MasterDataModel[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [
                {
                    "name": "GetAppSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "GetStartUpData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "Init",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "SetAppSettingsMap",
                    "args": [
                        {
                            "name": "resp",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "resp",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDateFormat",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "SetLocalData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "SetStartupDataMap",
                    "args": [
                        {
                            "name": "resp",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "resp",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, OnDestroy, Inject, LOCALE_ID } from '@angular/core';\r\n// import { ServerApiInterfaceServiceService } from 'src/app/server-api-interface-service.service';\r\nimport { NotificationService } from '../common/notification.service';\r\nimport { ErrorCodes } from 'src/app/models/common/error-codes';\r\nimport { AppRepoService } from '../common/app-repo.service';\r\nimport { CategoryCodeConstant } from 'src/app/modules/widget-utility/widget-constants';\r\nimport { AppRepoHelperService } from './app-repo-helper.service';\r\nimport { getLocaleDateFormat, FormatWidth, getLocaleDateTimeFormat, getLocaleTimeFormat } from '@angular/common';\r\nimport { APP_SETTING, LOCAL_MASTER_DATA, OPERATORS } from 'src/app/constants/app-repo.constants';\r\nimport { MasterDataModel } from 'src/app/models/common/master-data-model';\r\nimport { MASTER_DATA } from 'src/app/constants/db.constants';\r\nimport { ServerApiInterfaceServiceService } from './server-api-interface-service.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StartUpService implements OnDestroy {\r\n\r\n    filterOperators : MasterDataModel[];\r\n    constructor(\r\n        private _serverApi: ServerApiInterfaceServiceService,\r\n        private _notificationService: NotificationService,\r\n        private _appRepoService: AppRepoService,\r\n        private _appRepoHelperService: AppRepoHelperService,\r\n\r\n        @Inject(LOCALE_ID) private locale: string\r\n    ) { }\r\n\r\n\r\n    Init() {\r\n        const masterDataPromise = this.GetStartUpData();\r\n        const appSettingsPromise = this.GetAppSettings();\r\n        return Promise.all([masterDataPromise, appSettingsPromise])\r\n    }\r\n\r\n    GetStartUpData() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._serverApi.get<any>('/v1/utility/getapplicationdata').subscribe(resp => {\r\n                if (resp) {\r\n                    this.SetStartupDataMap(resp);\r\n                    resolve(resp);\r\n                }\r\n            }, error => {\r\n                switch (error.code) {\r\n                    case ErrorCodes.INVALID_USER_ACCESS:\r\n                        this._notificationService.error('Invalid User Access');\r\n                        break;\r\n                }\r\n                reject()\r\n            });\r\n        });\r\n    }\r\n\r\n    SetStartupDataMap(resp) {\r\n        this._appRepoService.appRepo.masterDataByCode =  new Map<string, MasterDataModel>();\r\n        this._appRepoService.appRepo.masterDataByCategoryCode =   new Map<string, MasterDataModel[]>(); \r\n        resp.data.forEach((element: any) => {\r\n            this._appRepoService.appRepo.masterDataByCode.set(element.code, element);\r\n            const dataByCategoryCode: any = this._appRepoService.appRepo.masterDataByCategoryCode.get(element.categorycode);\r\n            if (!dataByCategoryCode) {\r\n                this._appRepoService.appRepo.masterDataByCategoryCode.set(element.categorycode, [element]);\r\n            } else {\r\n                dataByCategoryCode.push(element);\r\n            }\r\n        });\r\n\r\n        this.SetLocalData();\r\n    }\r\n\r\n    GetAppSettings() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._serverApi.get<any>('/v1/utility/appsettings').subscribe(resp => {\r\n                if (resp) {\r\n                    this.SetAppSettingsMap(resp);\r\n                    resolve(resp)\r\n                }\r\n            }, error => {\r\n                switch (error.code) {\r\n                    case ErrorCodes.INVALID_USER_ACCESS:\r\n                        this._notificationService.error('Invalid User Access');\r\n                        break;\r\n                }\r\n                reject()\r\n            });\r\n        });\r\n    }\r\n\r\n    SetAppSettingsMap(resp) {\r\n        resp.data.forEach((element: any) => {\r\n            this._appRepoService.appRepo.appSettingsMap.set(element.Code, element);\r\n        });\r\n        //this.setDateFormat();\r\n    }\r\n\r\n    public setDateFormat() {\r\n        let globalDateFormat = this._appRepoHelperService.getAppSTByCode(APP_SETTING.USE_GLOBAL_DATE_TIME_FORMAT);\r\n        if(globalDateFormat.Value !== 'true'){\r\n            const dateFormat = getLocaleDateFormat(this.locale, FormatWidth.Short);// M/d/yy         \r\n            const dataTimeFormat = getLocaleDateTimeFormat(this.locale, FormatWidth.Short);// {1}, {0}\r\n            const timeFormat = getLocaleTimeFormat(this.locale, FormatWidth.Short);// h:mm a\r\n\r\n            const dateFormatFromDB = this._appRepoHelperService.getAppSTByCode(APP_SETTING.DATE_FORMAT.toString());\r\n            dateFormatFromDB.Value = dateFormat;\r\n\r\n            const dateTimeFormatFromDB = this._appRepoHelperService.getAppSTByCode(APP_SETTING.DATE_TIME_FORMAT.toString());\r\n            dateTimeFormatFromDB.Value = `${dateFormat} ${timeFormat}`;\r\n        }\r\n    }\r\n\r\n    SetLocalData(){\r\n        this.filterOperators =  [\r\n            {id: 1, categorycode: LOCAL_MASTER_DATA.FILTER_OPERATORS, code: OPERATORS.GRATER_THAN, value: OPERATORS.GRATER_THAN, displayname: OPERATORS.GRATER_THAN},\r\n            {id: 2, categorycode: LOCAL_MASTER_DATA.FILTER_OPERATORS, code: OPERATORS.LESS_THAN_EQUAL_TO,value: OPERATORS.LESS_THAN_EQUAL_TO,displayname: OPERATORS.LESS_THAN_EQUAL_TO},\r\n            {id: 3, categorycode: LOCAL_MASTER_DATA.FILTER_OPERATORS, code: OPERATORS.GREATER_THAN_EQUAL_TO,value: OPERATORS.GREATER_THAN_EQUAL_TO,displayname: OPERATORS.GREATER_THAN_EQUAL_TO},\r\n            {id: 4, categorycode: LOCAL_MASTER_DATA.FILTER_OPERATORS, code: OPERATORS.EQUAL_TO,value: OPERATORS.EQUAL_TO ,displayname: OPERATORS.EQUAL_TO},\r\n            {id: 5, categorycode: LOCAL_MASTER_DATA.FILTER_OPERATORS, code: OPERATORS.NOT_EQUAL_TO,value: OPERATORS.NOT_EQUAL_TO,displayname: OPERATORS.NOT_EQUAL_TO },\r\n            {id: 6, categorycode: LOCAL_MASTER_DATA.FILTER_OPERATORS, code: OPERATORS.BETWEEN,value: OPERATORS.BETWEEN, displayname: OPERATORS.BETWEEN}\r\n          ]\r\n        this._appRepoService.appRepo.masterDataByCategoryCode.set(LOCAL_MASTER_DATA.FILTER_OPERATORS, this.filterOperators);\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appRepoService",
                        "type": "AppRepoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appRepoService",
                        "type": "AppRepoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ValidationService",
            "id": "injectable-ValidationService-9179f2d5a5a432ddf9857cd392dd6d7a",
            "file": "src/app/services/common/validation.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "bindValidations",
                    "args": [
                        {
                            "name": "validations",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "validations",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createFormGroup",
                    "args": [
                        {
                            "name": "formData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "permissions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "mode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "permissions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dataCompare",
                    "args": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dateCompare",
                    "args": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emailValidator",
                    "args": [
                        {
                            "name": "control",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ invalidEmailAddress: boolean; }",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "extensionNoValidator",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type | null",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrorMessage",
                    "args": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validationErrors",
                            "type": "ValidationErrors",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formFroup",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 335,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validationErrors",
                            "type": "ValidationErrors",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formFroup",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidations",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validationData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 327,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validationData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidationsFromArray",
                    "args": [
                        {
                            "name": "formarrayName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validationData",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 331,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formarrayName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validationData",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidator",
                    "args": [
                        {
                            "name": "validation",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "validation",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "MustMatch",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchingControlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "(formGroup: any) => void",
                    "typeParameters": [],
                    "line": 308,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchingControlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "passwordValidator",
                    "args": [
                        {
                            "name": "control",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ invalidPassword: boolean; }",
                    "typeParameters": [],
                    "line": 298,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validatorFn",
                    "args": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validator",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "validation",
                            "type": "ValidationModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validator",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AbstractControl, Validators, FormGroup, FormBuilder, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { ValidationModel, ValidatorsModel } from 'src/app/models/common/validators.model';\r\nimport { WidgetHelper } from 'src/app/modules/widget-utility/widget-helper';\r\nexport function customRequiredValidator(control: AbstractControl): ValidationErrors | null {\r\n    if (control) {\r\n        (control as any).isRequired = true;\r\n    }\r\n    return Validators.required(control);\r\n}\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ValidationService {\r\n    constructor(\r\n        private formBuilder: FormBuilder\r\n    ) {\r\n        const _setValidators = AbstractControl.prototype.setValidators;\r\n        AbstractControl.prototype.setValidators = function (newValidator: ValidatorFn | ValidatorFn[] | null): void {\r\n            if (this) {\r\n                (this as any).isRequired = false;\r\n            }\r\n            _setValidators.call(this, newValidator);\r\n        }\r\n\r\n        const _clearValidators = AbstractControl.prototype.clearValidators;\r\n        AbstractControl.prototype.clearValidators = function () {\r\n            if(this){\r\n                (this as any).isRequired = false;\r\n            }\r\n            \r\n            _clearValidators.call(this);\r\n        }\r\n    }\r\n    createFormGroup(formData, permissions?: any, mode?: string) {\r\n\r\n        const group = this.formBuilder.group({}, { validator: this.bindValidations(formData?.groupValidations) });\r\n        if (formData && formData.controls) {\r\n            formData.controls.forEach(formControl => {\r\n\r\n                if (formControl.controlType == \"formarray\") {\r\n                    let control = null;\r\n                    if (formControl && formControl.controls) {\r\n                        control = this.formBuilder.array([this.createFormGroup(formControl)]);\r\n                    } else {\r\n                        control = this.formBuilder.array([]);\r\n                    }\r\n\r\n                    group.addControl(formControl.controlName, control);\r\n                } else {\r\n\r\n                    // let visiblePermission = WidgetHelper.getVisiblePermissions(formControl.controlName, permissions, mode);\r\n                    let validation: ValidatorFn = null;\r\n                    // if (visiblePermission) {\r\n                    //     validation = this.bindValidations(formControl.validations || [])\r\n                    // }\r\n                    validation = this.bindValidations(formControl.validations || [])\r\n                    const control: FormControl = this.formBuilder.control(\r\n                        formControl.value,\r\n                        validation\r\n                    );\r\n                    group.addControl(formControl.controlName, control);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return group;\r\n\r\n    }\r\n\r\n    getValidator(validation: any) {\r\n        switch (validation.name) {\r\n            case \"required\":\r\n                validation.defaultMessage = 'This field is required';\r\n                return ValidationService.validatorFn(validation, customRequiredValidator);\r\n            case \"minlength\":\r\n                validation.defaultMessage = `Min length is ${validation.params}`;\r\n                return ValidationService.validatorFn(validation, Validators.minLength(validation.params));\r\n            case \"maxlength\":\r\n                validation.defaultMessage = `Max length is ${validation.params}`;\r\n                return ValidationService.validatorFn(validation, Validators.maxLength(validation.params));\r\n            case \"min\":\r\n                validation.defaultMessage = `Minimum number can be ${validation.params}`;\r\n                return ValidationService.validatorFn(validation, Validators.min(validation.params));\r\n            case \"max\":\r\n                validation.defaultMessage = `Maximum  required number is ${validation.params}`;\r\n                return ValidationService.validatorFn(validation, Validators.max(validation.params));\r\n            case \"extensionNoValidator\":\r\n                validation.defaultMessage = 'This field is invalid';\r\n                return ValidationService.validatorFn(validation, ValidationService.extensionNoValidator);\r\n            case \"email\":\r\n                validation.defaultMessage = 'Please enter a valid email address';\r\n                return ValidationService.validatorFn(validation, Validators.email);\r\n            case \"pattern\":\r\n                validation.defaultMessage = 'This field is invalid';\r\n                return ValidationService.validatorFn(validation, Validators.pattern(validation.params));\r\n            case \"dateCompare\":\r\n                validation.defaultMessage = 'Invalid field';\r\n                return ValidationService.dateCompare(validation);\r\n            case \"dataCompare\":\r\n                validation.defaultMessage = 'fields should match';\r\n                return ValidationService.dataCompare(validation);\r\n            case \"phonePattern\":\r\n                validation.defaultMessage = 'Please enter a valid phone number';\r\n                return ValidationService.validatorFn(validation, Validators.pattern('^(\\\\+91[\\\\-\\\\s]?)?[0]?(91)?[01234567896]\\\\d{9}$'));\r\n            case \"IndiaPhonePattern\":\r\n                    validation.defaultMessage = 'Please enter a valid phone number';\r\n                    return ValidationService.validatorFn(validation, Validators.pattern('^(\\\\+91[\\\\-\\\\s]?)?[0]?(91)?[0123456789]\\\\d{9}$'));\r\n                \r\n\r\n        }\r\n    }\r\n\r\n    bindValidations(validations: any) {\r\n\r\n        if (validations && validations.length > 0) {\r\n            const validList = [];\r\n            validations.forEach(validation => {\r\n                let validator;\r\n                validator = this.getValidator(validation);\r\n                validList.push(validator);\r\n            });\r\n            return Validators.compose(validList);\r\n        }\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n    static dataCompare(validation: ValidationModel): ValidatorFn {\r\n        return (group: FormGroup): { [key: string]: boolean } | null => {\r\n            if (group) {\r\n\r\n                let field1Value = group.get(validation.field1) ? group.get(validation.field1).value : null;\r\n                let field2Value = group.get(validation.field2) ? group.get(validation.field2).value : null;\r\n                \r\n                switch(validation.dataType)\r\n                {\r\n                    case \"number\":\r\n                        field1Value = +field1Value;\r\n                        field2Value = +field2Value;\r\n                        break;\r\n                }\r\n\r\n                if (field1Value && field2Value) {\r\n                    let validateResult = false;\r\n                    eval(`validateResult = field1Value.valueOf() ${validation.operator} field2Value.valueOf()`);\r\n                    if (!validateResult) {\r\n                        let errorData = {};\r\n                        let errorMessage = ValidationService.getErrorMessage(validation, null, null, group);\r\n                        errorData[validation.name] = {\r\n                            errorMessage: errorMessage\r\n                        };\r\n                        return errorData\r\n                    }\r\n                    return null;\r\n                }\r\n                return null;\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    static dateCompare(validation: ValidationModel): ValidatorFn {\r\n        return (group: FormGroup): { [key: string]: boolean } | null => {\r\n            if (group) {\r\n                const dateString1 = group.get(validation.field1) ? group.get(validation.field1).value : null;\r\n                const dateString2 = group.get(validation.field2) ? group.get(validation.field2).value : null;\r\n                if (dateString1 && dateString2) {\r\n                    const field1 = new Date(dateString1);\r\n                    const field2 = new Date(dateString2)\r\n                    let validateResult = false;\r\n                    eval(`validateResult = field1.valueOf() ${validation.operator} field2.valueOf()`);\r\n                    if (!validateResult) {\r\n                        let errorData = {};\r\n                        let errorMessage = ValidationService.getErrorMessage(validation, null, null, group);\r\n                        errorData[validation.name] = {\r\n                            errorMessage: errorMessage\r\n                        };\r\n                        return errorData\r\n                    }\r\n                    return null;\r\n                }\r\n                return null;\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    static validatorFn(validation: ValidationModel, validator: any): ValidatorFn {\r\n        return (control: AbstractControl,): { [key: string]: any } | null => {\r\n            const validationErrors: ValidationErrors = validator(control);\r\n            if (validationErrors) {\r\n                let errorMessage = ValidationService.getErrorMessage(validation, control, validationErrors);\r\n                let errorData = {};\r\n                errorData[validation.name] = {\r\n                    validationErrors,\r\n                    errorMessage: errorMessage\r\n                };\r\n                return errorData\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    static extensionNoValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n\r\n        var isValid = true;\r\n\r\n        if (control.value !== undefined && control.value != null) {\r\n\r\n            var extensionNumberList = [];\r\n            const extensionRangeList = control.value.split(\",\");\r\n            extensionRangeList.forEach(extensionItem => {\r\n                if (extensionItem.includes(\"-\")) {\r\n\r\n                    const extenionNoList = extensionItem.split(\"-\");\r\n\r\n                    // check if mulltiple '-'\r\n                    if (extenionNoList.length - 1 > 1) { return isValid = false; };\r\n\r\n                    let minVal = (extenionNoList[0]);\r\n                    let maxVal = (extenionNoList[1]);\r\n\r\n                    // check length shouild be less than 20\r\n                    if (minVal.length > 20) { return isValid = false; };\r\n                    if (maxVal.length > 20) { return isValid = false; };\r\n\r\n                    // check if range overlaps\r\n                    for (var i = minVal; i <= maxVal; i++) {\r\n                        if (extensionNumberList.includes(i)) {\r\n                            { return isValid = false; };\r\n                        } else {\r\n                            extensionNumberList.push(i);\r\n                        }\r\n                    }\r\n\r\n                    // check if all digits\r\n                    var isAllNum = /^\\d+$/\r\n                    if (!isAllNum.test(minVal)) { return isValid = false; };\r\n                    if (!isAllNum.test(maxVal)) { return isValid = false; };\r\n\r\n                    // check if starts with '0' or '9'\r\n                    var startsWith = /(^(?:0|9)$)|(^(?:0|9)\\d+$)/\r\n                    if (startsWith.test(minVal)) { return isValid = false; };\r\n                    if (startsWith.test(maxVal)) { return isValid = false; };\r\n\r\n                    // check if second value smaller than first value\r\n                    minVal = parseInt(minVal);\r\n                    maxVal = parseInt(maxVal);\r\n                    if (minVal > maxVal) { return isValid = false; };\r\n\r\n                } else {\r\n\r\n                    // check if extension no overlaps\r\n                    if (extensionNumberList.includes(extensionItem)) {\r\n                        { return isValid = false; };\r\n                    } else {\r\n                        extensionNumberList.push(extensionItem);\r\n                    }\r\n\r\n                    // check length shouild be less than 20\r\n                    if (extensionItem.length > 20) { return isValid = false; };\r\n\r\n                    // check if all digits\r\n                    var isAllNum = /^\\d+$/\r\n                    if (!isAllNum.test(extensionItem)) { return isValid = false; };\r\n\r\n                    // check if starts with '0' or '9'\r\n                    var startsWith = /(^(?:0|9)$)|(^(?:0|9)\\d+$)/\r\n                    if (startsWith.test(extensionItem)) { return isValid = false; };\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n        if (!isValid) {\r\n            return { 'extensionNoValidator': true };\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    static emailValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n\r\n    static passwordValidator(control) {\r\n        // {6,100}           - Assert password is between 6 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n\r\n    MustMatch(controlName: string, matchingControlName: string) {\r\n        return (formGroup: FormGroup) => {\r\n            const control = formGroup.controls[controlName];\r\n            const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n            if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n                // return if another validator has already found an error on the matchingControl\r\n                return;\r\n            }\r\n\r\n            // set error on matchingControl if validation fails\r\n            if (control.value !== matchingControl.value) {\r\n                matchingControl.setErrors({ mustMatch: true });\r\n            } else {\r\n                matchingControl.setErrors(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    getValidations(controlName, validationData) {\r\n        return validationData.find(v => v.controlName === controlName).validations;\r\n    }\r\n\r\n    getValidationsFromArray(formarrayName: string, controlName: string, validationData: any[]) {\r\n        return validationData.find(v => v.controlName === formarrayName).controls.find(c => c.controlName == controlName).validations;\r\n    }\r\n\r\n    static getErrorMessage(validation: ValidationModel, control: AbstractControl, validationErrors: ValidationErrors, formFroup?: FormGroup) {\r\n        let message = validation.defaultMessage;\r\n        if (validation.message) {\r\n            if (validation.message.value) {\r\n                message = validation.message.value;\r\n            }\r\n            if (!validation.message.isStatic && message && validation.message.dynamicParams) {\r\n                validation.message.dynamicParams.forEach(element => {\r\n                    const regexp = new RegExp(element.field, 'g');\r\n                    let controlValue = '';\r\n                    eval(`controlValue = ${element.value}`);\r\n                    message = message.replace(regexp, controlValue);\r\n                });\r\n            }\r\n        }\r\n        return message;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "ResolverService",
            "id": "injectable-ResolverService-0dc2c3bfe0ea9894b061ecec0d5e764e",
            "file": "src/app/services/common/resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n// import { ServerApiInterfaceServiceService } from 'src/app/server-api-interface-service.service';\r\nimport { NotificationService } from '../common/notification.service';\r\nimport { AppRepoService } from '../common/app-repo.service';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { StartUpService } from './startup.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ResolverService implements Resolve<Promise<any>> {\r\n\r\n    constructor(\r\n        private _startUpService: StartUpService\r\n    ) { }\r\n\r\n\r\n    resolve() {\r\n        console.log('resolve service')\r\n        return this._startUpService.Init();\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_startUpService",
                        "type": "StartUpService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_startUpService",
                        "type": "StartUpService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "HttpErrorInterceptorService",
            "id": "injectable-HttpErrorInterceptorService-eaab441d360d245d6c10f97857d8a3ff",
            "file": "src/app/http-error-interceptor.service.ts",
            "properties": [
                {
                    "name": "_apiErrorService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiErrorService",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "handleGenericErrors",
                    "args": [
                        {
                            "name": "code",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { ApiErrorService } from './services/common/api-error.service';\r\nimport { NotificationService } from './services/common/notification.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpErrorInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private _notificationService: NotificationService,\r\n    private _router: Router) { }\r\n  _apiErrorService: ApiErrorService;\r\n  \r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req)\r\n      .pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.log('interceptor error', error);\r\n          switch (error.status) {\r\n            case 401:\r\n              // user is not autheticated, redirect to login page\r\n\r\n              this._notificationService.error('Un-Authorised');\r\n              this._router.navigate(['/']);\r\n              break;\r\n            case 403:\r\n              this._notificationService.error('Access Denied');\r\n              this._router.navigate(['/']);\r\n              // No access to a resource, redirect to login or not authorized page\r\n              break;\r\n            case 404:\r\n              // not found, display error to user\r\n              break;\r\n            case 503:\r\n              // site under maintaince\r\n              break;\r\n            default:\r\n              // display error occured to user.\r\n              break;\r\n          }\r\n\r\n          switch (error.status) {\r\n            case 403:             \r\n            case 404:             \r\n            case 503:\r\n              console.log('throwError-->',error)\r\n              return throwError(error);\r\n              break;\r\n             \r\n          }\r\n          if (error.error) {\r\n            if (error.error.code < 5000) {\r\n              this.handleGenericErrors(error.error.code);\r\n              return;\r\n            }\r\n            console.log('throwError-->',error)\r\n            return throwError(error.error);\r\n          }\r\n\r\n\r\n        })\r\n      )\r\n  }\r\n  handleGenericErrors(code) {\r\n    switch (code) {\r\n      case 3001:\r\n        this._notificationService.error('Data Mismatch');\r\n        break;\r\n      case 3002:\r\n        this._notificationService.error('Invalid Token');\r\n        break;\r\n      case 3003:\r\n        this._notificationService.error('UnAuthorised');\r\n        break;\r\n      case 3004:\r\n        this._notificationService.error('Invalid user');\r\n        break;\r\n      case 3006:\r\n        this._notificationService.error('Duplicate Data');\r\n        break;\r\n      case 3007:\r\n        this._notificationService.error('Data not available');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this._notificationService.error('SYSTEM ERROR');\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AppRepoModel",
            "id": "class-AppRepoModel-ae3314c45e2e20c5b8c3984d6e567d51",
            "file": "src/app/models/common/app-repo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DropdownModel } from './dropdown-model';\r\nimport { MasterDataModel } from './master-data-model';\r\nimport { AppSettings } from './app-settings';\r\n\r\n\r\nexport class AppRepoModel {\r\n\r\n    appSettingsMap: Map<string, AppSettings> = new Map<string, AppSettings>();\r\n    masterDataByCategoryCode: Map<string, MasterDataModel[]> = new Map<string, MasterDataModel[]>();\r\n    masterDataByCode: Map<string, MasterDataModel> = new Map<string, MasterDataModel>();\r\n    navigationData: Map<string, any> = new Map<string, any>();\r\n\r\n    \r\n    constructor() {\r\n       \r\n    }\r\n\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "properties": [
                {
                    "name": "appSettingsMap",
                    "defaultValue": "new Map<string, AppSettings>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | AppSettings>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "masterDataByCategoryCode",
                    "defaultValue": "new Map<string, MasterDataModel[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | MasterDataModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "masterDataByCode",
                    "defaultValue": "new Map<string, MasterDataModel>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | MasterDataModel>",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "navigationData",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppSettings",
            "id": "class-AppSettings-c39859262f2359c748803095f91adbaf",
            "file": "src/app/models/common/app-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AppSettings {\r\n    Code?: string;\r\n    Displayname?: string;\r\n    Value?: string;\r\n    Id?: number;\r\n    Description?: string;\r\n    IsUiVisible?: number;\r\n    IsDeleted?: number;\r\n    UiMetadata?: string;\r\n    GroupCode?: string;\r\n    GroupDisplayName?: string;\r\n}",
            "properties": [
                {
                    "name": "Code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Displayname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "GroupCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "GroupDisplayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "IsDeleted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "IsUiVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "UiMetadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CategoryCodeConstant",
            "id": "class-CategoryCodeConstant-bcd86d7125679e73abc40303e9fbcda2",
            "file": "src/app/modules/widget-utility/widget-constants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WidgetConstants{\r\n    public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n    public static readonly ON_REQUEST = \"ON_REQUEST\"\r\n    public static readonly ON_REQUEST_COMPLETED = \"ON_REQUEST_COMPLETED\"\r\n    public static readonly ON_FILE_UPLOAD_COMPLETED = \"ON_FILE_UPLOAD_COMPLETED\"\r\n    public static readonly RESET_WIDGET_DATA = \"RESET_WIDGET_DATA\"\r\n    public static readonly UPLOAD_CLICK = \"UPLOAD_CLICK\"\r\n}\r\nexport class WidgetPermissionConst{\r\n    public static readonly READ_ONLY = \"r\";\r\n    public static readonly READ_WRITE = \"w\";\r\n    public static readonly HIDDEN = \"n\";\r\n}\r\n\r\n\r\nexport class CategoryCodeConstant{\r\n    public static readonly NATURE_OF_BUSSINESS = \"natureofbusiness\";\r\n    public static readonly ORGANIZATION_TYPE = \"organizationtype\";\r\n    public static readonly ACCOUNT_TYPE = \"accounttype\";\r\n    public static readonly STATE = \"State\"\r\n    public static readonly COUNTRY = \"Country\"\r\n    public static readonly CITY = \"City\"\r\n    public static readonly ZONE = \"Zone\"\r\n    public static readonly DOCUMENT_TYPE =\"documenttype\"\r\n    public static readonly Fuel_TYPE = \"fuel\"\r\n    public static readonly EMISSION_NORMS = \"emission\";\r\n    public static readonly VEHICLE_TYPE = \"vehicle\"\r\n    public static readonly DOCUMENT_SUBMISSION_TYPE =\"documentsubmissiontype\"\r\n\r\n\r\n    public static readonly CERTIFICATE_TYPE =\"typeofcertificate\"\r\n    public static readonly REPORT_CERTIFICATE_TYPE =\"reportcertificates\"\r\n    public static readonly OTHER_CERTIFICATE_TYPE =\"othercertificates\"\r\n\r\n    public static readonly CASE_DOCUMENTS = \"casedocument\";\r\n\r\n\r\n}\r\n\r\nexport class FormModeConstant {\r\n    public static readonly ADD = \"add\";\r\n    public static readonly EDIT = \"edit\";\r\n    public static readonly VIEW = \"view\";\r\n}",
            "properties": [
                {
                    "name": "ACCOUNT_TYPE",
                    "defaultValue": "\"accounttype\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "CASE_DOCUMENTS",
                    "defaultValue": "\"casedocument\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "CERTIFICATE_TYPE",
                    "defaultValue": "\"typeofcertificate\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "CITY",
                    "defaultValue": "\"City\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "COUNTRY",
                    "defaultValue": "\"Country\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "DOCUMENT_SUBMISSION_TYPE",
                    "defaultValue": "\"documentsubmissiontype\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "DOCUMENT_TYPE",
                    "defaultValue": "\"documenttype\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "EMISSION_NORMS",
                    "defaultValue": "\"emission\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "Fuel_TYPE",
                    "defaultValue": "\"fuel\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "NATURE_OF_BUSSINESS",
                    "defaultValue": "\"natureofbusiness\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "ORGANIZATION_TYPE",
                    "defaultValue": "\"organizationtype\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "OTHER_CERTIFICATE_TYPE",
                    "defaultValue": "\"othercertificates\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "REPORT_CERTIFICATE_TYPE",
                    "defaultValue": "\"reportcertificates\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "STATE",
                    "defaultValue": "\"State\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "VEHICLE_TYPE",
                    "defaultValue": "\"vehicle\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "ZONE",
                    "defaultValue": "\"Zone\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123,
                        142
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CompanyFormConfigModel",
            "id": "class-CompanyFormConfigModel-7d9205cc6577634596dbfbe40257a0eb",
            "file": "src/app/modules/widget-app/company/company-form/company-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from \"events\";\r\nimport { MasterDataModel } from \"src/app/models/common/master-data-model\";\r\n\r\nexport class CompanyFormConfigModel {\r\n  static getInstance<T>(): CompanyFormConfigModel {\r\n    let model = new CompanyFormConfigModel();\r\n    return model;\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\";\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class CompanyFormDataModel {\r\n  data: any;\r\n  dataKey: any;\r\n  static getInstance<T>(): CompanyFormDataModel {\r\n    let model = new CompanyFormDataModel();\r\n\r\n    model.globalParameters = new Map();\r\n    model.isSelfDataLoad = true;\r\n    model.apiDataUrl = \"\";\r\n    model.formData = new Object();\r\n    model.id;\r\n    model.initDataUrl = \"\";\r\n    model.globalParamterKeys = [];\r\n    model.isGlobalParams = false;\r\n    model.isEdit = false;\r\n    model.validators = {};\r\n    model.isSummaryPage = false;\r\n    model.tooltip = {};\r\n    model.operatorList = [];\r\n    model.submitProperties = Object();\r\n    model.permission = {};\r\n    return model;\r\n  }\r\n  isSummaryPage: boolean;\r\n  mode: string;\r\n  initDataUrl: string;\r\n  isGlobalParams: boolean;\r\n  globalParamterKeys: string[];\r\n  isSelfDataLoad: boolean;\r\n  fieldPermissions: Map<string, string>;\r\n  id: number;\r\n  widgetinstanceid: number;\r\n  globalParameters: Map<string, any>;\r\n  apiDataUrl: string;\r\n  isEdit: boolean;\r\n  apireqdata: any = {};\r\n  widgetStyle: {};\r\n  vlStyle: {};\r\n  formData: {};\r\n  validators: any;\r\n  permission: any;\r\n  tooltip: any;\r\n  operatorList: any[];\r\n  submitProperties: {};\r\n  isRequiredPermissionConfig: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "CALLER_TO_COMP_REFRESH_DATA",
                    "defaultValue": "\"REFRESH_DATA\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "CallerToComp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "CompToCaller",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "EventAction",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "CompanyFormConfigModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CompanyFormDataModel",
            "id": "class-CompanyFormDataModel-7d9205cc6577634596dbfbe40257a0eb",
            "file": "src/app/modules/widget-app/company/company-form/company-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from \"events\";\r\nimport { MasterDataModel } from \"src/app/models/common/master-data-model\";\r\n\r\nexport class CompanyFormConfigModel {\r\n  static getInstance<T>(): CompanyFormConfigModel {\r\n    let model = new CompanyFormConfigModel();\r\n    return model;\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\";\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class CompanyFormDataModel {\r\n  data: any;\r\n  dataKey: any;\r\n  static getInstance<T>(): CompanyFormDataModel {\r\n    let model = new CompanyFormDataModel();\r\n\r\n    model.globalParameters = new Map();\r\n    model.isSelfDataLoad = true;\r\n    model.apiDataUrl = \"\";\r\n    model.formData = new Object();\r\n    model.id;\r\n    model.initDataUrl = \"\";\r\n    model.globalParamterKeys = [];\r\n    model.isGlobalParams = false;\r\n    model.isEdit = false;\r\n    model.validators = {};\r\n    model.isSummaryPage = false;\r\n    model.tooltip = {};\r\n    model.operatorList = [];\r\n    model.submitProperties = Object();\r\n    model.permission = {};\r\n    return model;\r\n  }\r\n  isSummaryPage: boolean;\r\n  mode: string;\r\n  initDataUrl: string;\r\n  isGlobalParams: boolean;\r\n  globalParamterKeys: string[];\r\n  isSelfDataLoad: boolean;\r\n  fieldPermissions: Map<string, string>;\r\n  id: number;\r\n  widgetinstanceid: number;\r\n  globalParameters: Map<string, any>;\r\n  apiDataUrl: string;\r\n  isEdit: boolean;\r\n  apireqdata: any = {};\r\n  widgetStyle: {};\r\n  vlStyle: {};\r\n  formData: {};\r\n  validators: any;\r\n  permission: any;\r\n  tooltip: any;\r\n  operatorList: any[];\r\n  submitProperties: {};\r\n  isRequiredPermissionConfig: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "apiDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "apireqdata",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "fieldPermissions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "formData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "globalParamterKeys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "initDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "isEdit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "isGlobalParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "isRequiredPermissionConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "isSelfDataLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "isSummaryPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "operatorList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "permission",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "submitProperties",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "validators",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "vlStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "widgetinstanceid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "widgetStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "CompanyFormDataModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DataHelper",
            "id": "class-DataHelper-78c3b2f064de32bad1e53748e349acdd",
            "file": "src/app/Utlity/DataHelper.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DataHelper {\r\n\r\n    // static getTrimData<T>(request: T) {\r\n    //     if (request) {\r\n    //         for (let key of Object.keys(request)) {\r\n    //             let value = request[key!];\r\n    //             if (typeof value === 'object') {\r\n    //                 this.getTrimData(value)\r\n    //             }\r\n    //             else {\r\n    //                 if (typeof value === 'string')\r\n    //                     request[key] = value.trim();\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return request;\r\n\r\n    // }\r\n\r\n    static setRequired(input: any) {\r\n        const isRequired = (input.ngControl && input.ngControl.control as any)?.isRequired || false;\r\n        if (isRequired !== input.required) {\r\n            input.required = isRequired;\r\n        }\r\n    }\r\n\r\n    static getCurrentFinancialYear() {\r\n        let startYear:any;\r\n        var endYear:any;\r\n        var currentDate = new Date();\r\n        if ((currentDate.getMonth() + 1) <= 3) {\r\n          startYear = currentDate.getFullYear() - 1;\r\n          endYear = currentDate.getFullYear();\r\n        } else {\r\n          startYear = currentDate.getFullYear();\r\n          endYear = currentDate.getFullYear() + 1;\r\n        }\r\n        let startDate : Date = new Date(`${startYear}/04/01`);\r\n        let endDate:Date = new Date(`${endYear}/03/31`);\r\n\r\n        return {startDate : startDate, endDate: endDate };\r\n    }\r\n      \r\n}\r\n\r\n\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getCurrentFinancialYear",
                    "args": [],
                    "optional": false,
                    "returnType": "{ startDate: any; endDate: any; }",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setRequired",
                    "args": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DropdownModel",
            "id": "class-DropdownModel-cb580dd135528ab22b7235f1a2731019",
            "file": "src/app/models/common/dropdown-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DropdownModel {\r\n    code?: string;\r\n    displayname?: string;\r\n    value?: any;\r\n    id?: number;\r\n    categorycode?: string;\r\n}",
            "properties": [
                {
                    "name": "categorycode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "displayname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ErrorCodes",
            "id": "class-ErrorCodes-9095759c281890f5a5b5178b7b46b58e",
            "file": "src/app/models/common/error-codes.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ErrorCodes {\r\n    public static readonly ERR_INVALID_USER_NAME = 10003;\r\n    public static readonly ERR_INVALID_USER_PASSWORD = 10002;\r\n    public static readonly NO_RECORD_FOUND = 3007;\r\n    public static readonly INVALID_USER_ACCESS  = 3004;\r\n    public static readonly ERR_DATABASE  = 2001;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "ERR_DATABASE",
                    "defaultValue": "2001",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "ERR_INVALID_USER_NAME",
                    "defaultValue": "10003",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "ERR_INVALID_USER_PASSWORD",
                    "defaultValue": "10002",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "INVALID_USER_ACCESS",
                    "defaultValue": "3004",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "NO_RECORD_FOUND",
                    "defaultValue": "3007",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123,
                        142
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FormModeConstant",
            "id": "class-FormModeConstant-bcd86d7125679e73abc40303e9fbcda2",
            "file": "src/app/modules/widget-utility/widget-constants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WidgetConstants{\r\n    public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n    public static readonly ON_REQUEST = \"ON_REQUEST\"\r\n    public static readonly ON_REQUEST_COMPLETED = \"ON_REQUEST_COMPLETED\"\r\n    public static readonly ON_FILE_UPLOAD_COMPLETED = \"ON_FILE_UPLOAD_COMPLETED\"\r\n    public static readonly RESET_WIDGET_DATA = \"RESET_WIDGET_DATA\"\r\n    public static readonly UPLOAD_CLICK = \"UPLOAD_CLICK\"\r\n}\r\nexport class WidgetPermissionConst{\r\n    public static readonly READ_ONLY = \"r\";\r\n    public static readonly READ_WRITE = \"w\";\r\n    public static readonly HIDDEN = \"n\";\r\n}\r\n\r\n\r\nexport class CategoryCodeConstant{\r\n    public static readonly NATURE_OF_BUSSINESS = \"natureofbusiness\";\r\n    public static readonly ORGANIZATION_TYPE = \"organizationtype\";\r\n    public static readonly ACCOUNT_TYPE = \"accounttype\";\r\n    public static readonly STATE = \"State\"\r\n    public static readonly COUNTRY = \"Country\"\r\n    public static readonly CITY = \"City\"\r\n    public static readonly ZONE = \"Zone\"\r\n    public static readonly DOCUMENT_TYPE =\"documenttype\"\r\n    public static readonly Fuel_TYPE = \"fuel\"\r\n    public static readonly EMISSION_NORMS = \"emission\";\r\n    public static readonly VEHICLE_TYPE = \"vehicle\"\r\n    public static readonly DOCUMENT_SUBMISSION_TYPE =\"documentsubmissiontype\"\r\n\r\n\r\n    public static readonly CERTIFICATE_TYPE =\"typeofcertificate\"\r\n    public static readonly REPORT_CERTIFICATE_TYPE =\"reportcertificates\"\r\n    public static readonly OTHER_CERTIFICATE_TYPE =\"othercertificates\"\r\n\r\n    public static readonly CASE_DOCUMENTS = \"casedocument\";\r\n\r\n\r\n}\r\n\r\nexport class FormModeConstant {\r\n    public static readonly ADD = \"add\";\r\n    public static readonly EDIT = \"edit\";\r\n    public static readonly VIEW = \"view\";\r\n}",
            "properties": [
                {
                    "name": "ADD",
                    "defaultValue": "\"add\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "EDIT",
                    "defaultValue": "\"edit\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "VIEW",
                    "defaultValue": "\"view\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123,
                        142
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LoginAPIRequest",
            "id": "class-LoginAPIRequest-6a90e62172e53a27d8332dae89e5b323",
            "file": "src/app/models/dto/user-management/login-request.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class LoginAPIRequest {\r\n    username?: string;\r\n    userpassword?: string;\r\n    usertypeid?:number;\r\n    validateusername? : boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "userpassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "usertypeid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "validateusername",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LoginAPIResponse",
            "id": "class-LoginAPIResponse-c9d1d82e9d04eb9f2fe82cee281939b2",
            "file": "src/app/models/dto/user-management/login-response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class LoginAPIResponse {\r\n    useruid?: number;\r\n    username?: string;\r\n    userroleid?: number;\r\n    userrolecode?: string;\r\n    sessiontoken?: string;\r\n    clientid?: string;\r\n    usertypeid?:number;\r\n    iscustomeruser?:boolean;\r\n    iscustomeradmin?:boolean;\r\n    customerid?:number;\r\n    isorganizationaluser?:boolean;\r\n    organizationaluserid?: number;\r\n    nametitle?: string;\r\n    firstname?: string;\r\n    lastname?: string;\r\n    middlename?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "clientid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "customerid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "firstname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "iscustomeradmin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "iscustomeruser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isorganizationaluser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lastname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "middlename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "nametitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "organizationaluserid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "sessiontoken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "userrolecode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "userroleid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "usertypeid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "useruid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MasterDataModel",
            "id": "class-MasterDataModel-899880a6019934f9ae745cf0b8c4dbb6",
            "file": "src/app/models/common/master-data-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class MasterDataModel {\r\n    code?: string;\r\n    displayname?: string;\r\n    value: any;\r\n    id?: number;\r\n    categorycode?: string;\r\n}",
            "properties": [
                {
                    "name": "categorycode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "displayname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MoreInfoFormConfigModel",
            "id": "class-MoreInfoFormConfigModel-b2af85072aaff5cd8c3641b5204c2189",
            "file": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from \"events\";\r\n\r\nexport class MoreInfoFormConfigModel {\r\n  static getInstance<T>(): MoreInfoFormConfigModel {\r\n    let model = new MoreInfoFormConfigModel();\r\n    return model;\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\";\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class MoreInfoFormDataModel {\r\n  info: any;\r\n  static getInstance<T>(): MoreInfoFormDataModel {\r\n    let model = new MoreInfoFormDataModel();\r\n\r\n    model.globalParameters = new Map();\r\n    model.isSelfDataLoad = true;\r\n    model.items = [];\r\n    model.apiDataUrl = \"\";\r\n    model.formData = {};\r\n    model.mode = \"add\";\r\n    model.globalParamterKeys = [];\r\n    model.isGlobalParams = false;\r\n    model.initDataUrl;\r\n    model.validators = {};\r\n    return model;\r\n  }\r\n  validators: any;\r\n  formValues;\r\n \r\n  isGlobalParams: boolean;\r\n  globalParamterKeys: string[];\r\n\r\n  initDataUrl: string;\r\n  isSelfDataLoad: boolean;\r\n  fieldPermissions: Map<string, string>;\r\n  id: number;\r\n  widgetinstanceid: number;\r\n  globalParameters: Map<string, any>;\r\n  apiDataUrl: string;\r\n  mode: string;\r\n\r\n  permission: any;\r\n\r\n  items: any[] = [];\r\n  apireqdata: any = {};\r\n\r\n  widgetStyle: {};\r\n  vlStyle: {};\r\n  formData: {};\r\n}\r\n\r\nexport class MoreInfoFormModel {\r\n  description: any;\r\n  updatedOn: any;\r\n  updatedBy: any;\r\n  updateId: any;\r\n\r\n}\r\n\r\nexport enum CLICK_EVENT {\r\n  ON_ITEM_CLICK = \"item_click\",\r\n}\r\n",
            "properties": [
                {
                    "name": "CALLER_TO_COMP_REFRESH_DATA",
                    "defaultValue": "\"REFRESH_DATA\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "CallerToComp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "CompToCaller",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "EventAction",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "MoreInfoFormConfigModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MoreInfoFormDataModel",
            "id": "class-MoreInfoFormDataModel-b2af85072aaff5cd8c3641b5204c2189",
            "file": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from \"events\";\r\n\r\nexport class MoreInfoFormConfigModel {\r\n  static getInstance<T>(): MoreInfoFormConfigModel {\r\n    let model = new MoreInfoFormConfigModel();\r\n    return model;\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\";\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class MoreInfoFormDataModel {\r\n  info: any;\r\n  static getInstance<T>(): MoreInfoFormDataModel {\r\n    let model = new MoreInfoFormDataModel();\r\n\r\n    model.globalParameters = new Map();\r\n    model.isSelfDataLoad = true;\r\n    model.items = [];\r\n    model.apiDataUrl = \"\";\r\n    model.formData = {};\r\n    model.mode = \"add\";\r\n    model.globalParamterKeys = [];\r\n    model.isGlobalParams = false;\r\n    model.initDataUrl;\r\n    model.validators = {};\r\n    return model;\r\n  }\r\n  validators: any;\r\n  formValues;\r\n \r\n  isGlobalParams: boolean;\r\n  globalParamterKeys: string[];\r\n\r\n  initDataUrl: string;\r\n  isSelfDataLoad: boolean;\r\n  fieldPermissions: Map<string, string>;\r\n  id: number;\r\n  widgetinstanceid: number;\r\n  globalParameters: Map<string, any>;\r\n  apiDataUrl: string;\r\n  mode: string;\r\n\r\n  permission: any;\r\n\r\n  items: any[] = [];\r\n  apireqdata: any = {};\r\n\r\n  widgetStyle: {};\r\n  vlStyle: {};\r\n  formData: {};\r\n}\r\n\r\nexport class MoreInfoFormModel {\r\n  description: any;\r\n  updatedOn: any;\r\n  updatedBy: any;\r\n  updateId: any;\r\n\r\n}\r\n\r\nexport enum CLICK_EVENT {\r\n  ON_ITEM_CLICK = \"item_click\",\r\n}\r\n",
            "properties": [
                {
                    "name": "apiDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "apireqdata",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "fieldPermissions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "formData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "formValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "globalParamterKeys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "info",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "initDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isGlobalParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "isSelfDataLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "permission",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "validators",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "vlStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "widgetinstanceid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "widgetStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "MoreInfoFormDataModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MoreInfoFormModel",
            "id": "class-MoreInfoFormModel-b2af85072aaff5cd8c3641b5204c2189",
            "file": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from \"events\";\r\n\r\nexport class MoreInfoFormConfigModel {\r\n  static getInstance<T>(): MoreInfoFormConfigModel {\r\n    let model = new MoreInfoFormConfigModel();\r\n    return model;\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\";\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class MoreInfoFormDataModel {\r\n  info: any;\r\n  static getInstance<T>(): MoreInfoFormDataModel {\r\n    let model = new MoreInfoFormDataModel();\r\n\r\n    model.globalParameters = new Map();\r\n    model.isSelfDataLoad = true;\r\n    model.items = [];\r\n    model.apiDataUrl = \"\";\r\n    model.formData = {};\r\n    model.mode = \"add\";\r\n    model.globalParamterKeys = [];\r\n    model.isGlobalParams = false;\r\n    model.initDataUrl;\r\n    model.validators = {};\r\n    return model;\r\n  }\r\n  validators: any;\r\n  formValues;\r\n \r\n  isGlobalParams: boolean;\r\n  globalParamterKeys: string[];\r\n\r\n  initDataUrl: string;\r\n  isSelfDataLoad: boolean;\r\n  fieldPermissions: Map<string, string>;\r\n  id: number;\r\n  widgetinstanceid: number;\r\n  globalParameters: Map<string, any>;\r\n  apiDataUrl: string;\r\n  mode: string;\r\n\r\n  permission: any;\r\n\r\n  items: any[] = [];\r\n  apireqdata: any = {};\r\n\r\n  widgetStyle: {};\r\n  vlStyle: {};\r\n  formData: {};\r\n}\r\n\r\nexport class MoreInfoFormModel {\r\n  description: any;\r\n  updatedOn: any;\r\n  updatedBy: any;\r\n  updateId: any;\r\n\r\n}\r\n\r\nexport enum CLICK_EVENT {\r\n  ON_ITEM_CLICK = \"item_click\",\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "updatedBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "updatedOn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "updateId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PayloadError",
            "id": "class-PayloadError-d33d251f3cf1f98c2295c35e5f0e1863",
            "file": "src/app/models/common/payload-error.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class PayloadError {\r\n    code: number;\r\n    errordata: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "errordata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PerformanceCard1ConfigModel",
            "id": "class-PerformanceCard1ConfigModel-85fcac3cbcdc105b5a3f8270e755c22b",
            "file": "src/app/modules/widget-app/performace-card1/performance-card1-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from 'events';\r\n\r\nexport class PerformanceCard1ConfigModel {\r\n  static getInstance<T>(): PerformanceCard1ConfigModel {\r\n    let model = new PerformanceCard1ConfigModel();\r\n    return model\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class PerformanceCard1DataModel {\r\n    globalParameters: any;\r\n    isGlobalParams: any;\r\n    isSelfDataLoad: any;\r\n    data: any;\r\n    promoterPrefix: any;\r\n    widgetStyle: any;\r\n \r\n    static getInstance<T>(): PerformanceCard1DataModel {\r\n      let model = new PerformanceCard1DataModel();\r\n      model.isSelfDataLoad = false;\r\n      model.globalParameters = new Map<any, any>();\r\n      return model;\r\n    }\r\n  }\r\n\r\n  export interface PerformanceCard1Data {\r\n    isIconEnable: boolean,\r\n    isMatIcon: boolean,\r\n    icon: string,\r\n    iconColor: string,\r\n    isTextEnable: boolean,\r\n    text: string,\r\n    textColor: string,\r\n    isCountEnable: boolean,\r\n    count: string,\r\n    countColor: string,\r\n    backgroundColor: string,\r\n    widgetStyle : any\r\n  }",
            "properties": [
                {
                    "name": "CALLER_TO_COMP_REFRESH_DATA",
                    "defaultValue": "\"REFRESH_DATA\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "CallerToComp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "CompToCaller",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "EventAction",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "PerformanceCard1ConfigModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PerformanceCard1DataModel",
            "id": "class-PerformanceCard1DataModel-85fcac3cbcdc105b5a3f8270e755c22b",
            "file": "src/app/modules/widget-app/performace-card1/performance-card1-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from 'events';\r\n\r\nexport class PerformanceCard1ConfigModel {\r\n  static getInstance<T>(): PerformanceCard1ConfigModel {\r\n    let model = new PerformanceCard1ConfigModel();\r\n    return model\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class PerformanceCard1DataModel {\r\n    globalParameters: any;\r\n    isGlobalParams: any;\r\n    isSelfDataLoad: any;\r\n    data: any;\r\n    promoterPrefix: any;\r\n    widgetStyle: any;\r\n \r\n    static getInstance<T>(): PerformanceCard1DataModel {\r\n      let model = new PerformanceCard1DataModel();\r\n      model.isSelfDataLoad = false;\r\n      model.globalParameters = new Map<any, any>();\r\n      return model;\r\n    }\r\n  }\r\n\r\n  export interface PerformanceCard1Data {\r\n    isIconEnable: boolean,\r\n    isMatIcon: boolean,\r\n    icon: string,\r\n    iconColor: string,\r\n    isTextEnable: boolean,\r\n    text: string,\r\n    textColor: string,\r\n    isCountEnable: boolean,\r\n    count: string,\r\n    countColor: string,\r\n    backgroundColor: string,\r\n    widgetStyle : any\r\n  }",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isGlobalParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isSelfDataLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "promoterPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "widgetStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "PerformanceCard1DataModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PerformanceCard2ConfigModel",
            "id": "class-PerformanceCard2ConfigModel-a4fba5e841e01d7fb0da1deffdbec851",
            "file": "src/app/modules/widget-app/performance-card2/performance-card2-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from 'events';\r\n\r\nexport class PerformanceCard2ConfigModel {\r\n  static getInstance<T>(): PerformanceCard2ConfigModel {\r\n    let model = new PerformanceCard2ConfigModel();\r\n    return model\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class PerformanceCard2DataModel {\r\n    globalParameters: any;\r\n    isGlobalParams: any;\r\n    isSelfDataLoad: any;\r\n    data: any;\r\n    promoterPrefix: any;\r\n    widgetStyle: any;\r\n \r\n    static getInstance<T>(): PerformanceCard2DataModel {\r\n      let model = new PerformanceCard2DataModel();\r\n      model.isSelfDataLoad = false;\r\n      model.globalParameters = new Map<any, any>();\r\n      return model;\r\n    }\r\n  }\r\n\r\n  export interface PerformanceCard2Data {\r\n    isIconEnable: boolean,\r\n    isMatIcon: boolean,\r\n    icon: string,\r\n    iconColor: string,\r\n    isTextEnable: boolean,\r\n    text: string,\r\n    textColor: string,\r\n    isCountEnable: boolean,\r\n    count: string,\r\n    countColor: string,\r\n    subtext:string,\r\n    sbutext2:string,\r\n    backgroundColor: string,\r\n    widgetStyle : any\r\n  }",
            "properties": [
                {
                    "name": "CALLER_TO_COMP_REFRESH_DATA",
                    "defaultValue": "\"REFRESH_DATA\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "CallerToComp",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "CompToCaller",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "EventAction",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "PerformanceCard2ConfigModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PerformanceCard2DataModel",
            "id": "class-PerformanceCard2DataModel-a4fba5e841e01d7fb0da1deffdbec851",
            "file": "src/app/modules/widget-app/performance-card2/performance-card2-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { EventEmitter } from 'events';\r\n\r\nexport class PerformanceCard2ConfigModel {\r\n  static getInstance<T>(): PerformanceCard2ConfigModel {\r\n    let model = new PerformanceCard2ConfigModel();\r\n    return model\r\n  }\r\n\r\n  public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n\r\n  CompToCaller = new EventEmitter();\r\n  CallerToComp = new EventEmitter();\r\n  EventAction = new Map();\r\n}\r\n\r\nexport class PerformanceCard2DataModel {\r\n    globalParameters: any;\r\n    isGlobalParams: any;\r\n    isSelfDataLoad: any;\r\n    data: any;\r\n    promoterPrefix: any;\r\n    widgetStyle: any;\r\n \r\n    static getInstance<T>(): PerformanceCard2DataModel {\r\n      let model = new PerformanceCard2DataModel();\r\n      model.isSelfDataLoad = false;\r\n      model.globalParameters = new Map<any, any>();\r\n      return model;\r\n    }\r\n  }\r\n\r\n  export interface PerformanceCard2Data {\r\n    isIconEnable: boolean,\r\n    isMatIcon: boolean,\r\n    icon: string,\r\n    iconColor: string,\r\n    isTextEnable: boolean,\r\n    text: string,\r\n    textColor: string,\r\n    isCountEnable: boolean,\r\n    count: string,\r\n    countColor: string,\r\n    subtext:string,\r\n    sbutext2:string,\r\n    backgroundColor: string,\r\n    widgetStyle : any\r\n  }",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isGlobalParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isSelfDataLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "promoterPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "widgetStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "getInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "PerformanceCard2DataModel",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PopupModel",
            "id": "class-PopupModel-52ef4d0d6f94213c6fdfd0566be3b754",
            "file": "src/app/models/common/popup-model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class PopupModel {\r\n    visible: boolean;\r\n    baseZIndex: number = 500;\r\n    width: string = '800px'\r\n    minWidth: string = '50%';\r\n    textAlign: string = 'left';\r\n    fontSize: string = '15px';\r\n    maximizable: boolean = true\r\n    minY: number = 100;\r\n    header: string;\r\n    responsive: boolean = true;\r\n}",
            "properties": [
                {
                    "name": "baseZIndex",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "fontSize",
                    "defaultValue": "'15px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "maximizable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "minWidth",
                    "defaultValue": "'50%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "minY",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "responsive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "textAlign",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "width",
                    "defaultValue": "'800px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ServerAPIErrorModel",
            "id": "class-ServerAPIErrorModel-1ed95e624b0972cdb1547a7584e555c5",
            "file": "src/app/services/common/server-api-interface-service.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpEventType } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\nexport class ServerAPIErrorModel {\r\n  handled: boolean;\r\n  error: any;\r\n\r\n  constructor(handled: boolean, error: any) {\r\n    this.handled = handled;\r\n    this.error = error;\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServerApiInterfaceServiceService {\r\n  sessiontoken?: string;\r\n  clientid?: string;\r\n  userroleid?:any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get<T>(url: string, queryParams?: any): Observable<T> {\r\n\r\n    let httpOptions = {\r\n      headers: new HttpHeaders(\r\n        {\r\n          'Content-Type': 'application/json'\r\n        }),\r\n      \r\n      params: new HttpParams()\r\n    };\r\n\r\n    if (queryParams) {\r\n      httpOptions.params = new HttpParams().set('param', JSON.stringify(queryParams))\r\n    }\r\n    return this.http.get<T>(environment.baseurl + url, httpOptions);\r\n\r\n  }\r\n\r\n  post<T, R>(url: string, request: T, headers?:any): Observable<R> {\r\n    let offset:any = new Date().getTimezoneOffset();\r\n    offset = `${offset * (-1)}`;\r\n    headers =  new HttpHeaders({\r\n      ClientTZOffSet:  offset\r\n    }); \r\n    let httpOptions = {\r\n      headers: headers ? headers : new HttpHeaders(),\r\n      params: new HttpParams()\r\n    };\r\n    if(request)\r\n    {\r\n    //  request = DataHelper.getTrimData(request);\r\n    }\r\n    return this.http.post<R>(environment.baseurl + url, request, httpOptions);\r\n\r\n  }\r\n\r\n  validateToken<T, R>(url: string, request: T, headers?:any): Observable<R> {\r\n    let offset:any = new Date().getTimezoneOffset();\r\n    offset = `${offset * (-1)}`;\r\n    let token:any = sessionStorage.getItem(\"msal.idtoken\");\r\n    headers =  new HttpHeaders({\r\n      ClientTZOffSet:  offset,\r\n      Token: token\r\n    }); \r\n    let httpOptions = {\r\n      headers: headers ? headers : new HttpHeaders(),\r\n      params: new HttpParams()\r\n    };\r\n    if(request)\r\n    {\r\n    //  request = DataHelper.getTrimData(request);\r\n    }\r\n    return this.http.post<R>(environment.baseurl + url, request, httpOptions);\r\n\r\n  }\r\n\r\n  put<T, R>(url:any, data:any): Observable<R> {\r\n    const uploadURL = environment.baseurl + url;\r\n    \r\n    /*This code can be workout in next branch */\r\n    // if(data)\r\n    // {\r\n    //   for (const pair of data.entries()) {\r\n    //     data.entries[pair] = DataHelper.getTrimData(pair);\r\n    //     console.log(data.entries[pair]);\r\n    // }\r\n   //  }\r\n   let offset:any = new Date().getTimezoneOffset();\r\n   offset = `${offset * (-1)}`;\r\n    let headers =  new HttpHeaders({\r\n     ClientTZOffSet:  offset\r\n   }); \r\n\r\n    return this.http.post<any>(uploadURL, data, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      headers: headers ? headers : new HttpHeaders(),\r\n    }).pipe(map((event) => {\r\n\r\n      switch (event.type) {\r\n\r\n        case HttpEventType.UploadProgress:\r\n          const progress = Math.round(100 * event.loaded / event.total!);\r\n          return { status: 'progress', message: progress };\r\n\r\n        case HttpEventType.Response:\r\n          return event.body;\r\n        \r\n          case HttpEventType.Sent:\r\n          console.log(event);\r\n          break\r\n        break;\r\n        \r\n        default:\r\n         console.log( `Unhandled event: ${event.type}`);\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n\r\n  download(url: string, queryParams?: any) : Observable<any>{\r\n    return this.http.get(environment.baseurl + url + '?reqparams=' + JSON.stringify(queryParams), {\r\n      headers: new HttpHeaders(\r\n        {\r\n            'Content-Type': 'application/json',\r\n         \r\n        }),\r\n       responseType: 'blob'\r\n    });\r\n  }\r\n\r\n  exportFile(url: string, request?: any,headers?:any) : Observable<any>{\r\n\r\n    return this.http.post(environment.baseurl + url, request, {observe: 'body', responseType: 'blob'});\r\n  }\r\n\r\n  \r\n  downloadTextFile(url: string, queryParams?: any) : Observable<any>{\r\n    return this.http.get(environment.baseurl + url + '?reqparams=' + JSON.stringify(queryParams), {\r\n      headers: new HttpHeaders(\r\n        {\r\n            'Content-Type': 'application/json',\r\n         \r\n        }),\r\n       responseType: 'text'\r\n    });\r\n  }\r\n\r\n  downloadZipFile(url: string, queryParams?: any) {\r\n    return this.http.get(environment.baseurl + url + '?reqparams=' + JSON.stringify(queryParams), {\r\n      responseType: 'arraybuffer'\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "handled",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "error",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "handled",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "error",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "handled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserTypes",
            "id": "class-UserTypes-ed519367cf2cb0c50f7229d98730c1bd",
            "file": "src/app/models/common/user-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class UserTypes {\r\n    public static readonly COMPANY_USER = 1;\r\n    public static readonly ARAI_USER = 2;\r\n   \r\n}\r\n\r\nexport enum USER_ROLES {\r\n    \r\n    //Company Roles\r\n    COMPANY_ADMIN = 'COMPANY_ADMIN',\r\n    COMPANY_SUB_ADMIN = 'COMPANY_SUB_ADMIN',\r\n    COMPANY_USER = 'COMPANY_USER',\r\n\r\n    //ARAI\r\n    CMVR_TAS_ADMIN = 'CMVR_TAS_ADMIN',\r\n    HMR_ADMIN = 'HMR_ADMIN',\r\n    PROJECT_ADMIN = 'PROJECT_ADMIN',\r\n    CERTIFICATION_HOD = 'CERTIFICATION_HOD',\r\n    FILE_COORDINATOR ='FILE_COORDINATOR',\r\n    CERTIFICATE_HANDLER='CERTIFICATE_HANDLER',\r\n    DEPT_HOD='DEPT_HOD',\r\n    DEPT_ADMIN='DEPT_ADMIN',\r\n    TEST_ENGINEER='TEST_ENGINEER',\r\n    REPORT_HANDLER='REPORT_HANDLER'\r\n\r\n\r\n\r\n}",
            "properties": [
                {
                    "name": "ARAI_USER",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "COMPANY_USER",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123,
                        142
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ValidationMessageModel",
            "id": "class-ValidationMessageModel-6b04142e5fe1c0db0c26ff61a19c12c1",
            "file": "src/app/models/common/validators.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ValidatorsModel {\r\n    controlName: string;\r\n    controlType: string;\r\n    validations: ValidationModel[] = [] ;\r\n    controls: ValidatorsModel[] = [];\r\n}\r\n\r\nexport class ValidationModel {\r\n    name: string;\r\n    message: ValidationMessageModel;\r\n    defaultMessage: string;\r\n    field1:string;\r\n    field2:string;\r\n    operator: string;\r\n    dataType:string;\r\n}\r\n\r\nexport class ValidationMessageModel {\r\n    value: string;\r\n    isStatic: boolean;\r\n    dynamicParams: any[];\r\n}",
            "properties": [
                {
                    "name": "dynamicParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isStatic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ValidationModel",
            "id": "class-ValidationModel-6b04142e5fe1c0db0c26ff61a19c12c1",
            "file": "src/app/models/common/validators.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ValidatorsModel {\r\n    controlName: string;\r\n    controlType: string;\r\n    validations: ValidationModel[] = [] ;\r\n    controls: ValidatorsModel[] = [];\r\n}\r\n\r\nexport class ValidationModel {\r\n    name: string;\r\n    message: ValidationMessageModel;\r\n    defaultMessage: string;\r\n    field1:string;\r\n    field2:string;\r\n    operator: string;\r\n    dataType:string;\r\n}\r\n\r\nexport class ValidationMessageModel {\r\n    value: string;\r\n    isStatic: boolean;\r\n    dynamicParams: any[];\r\n}",
            "properties": [
                {
                    "name": "dataType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "defaultMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "field1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "field2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationMessageModel",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "operator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ValidatorsModel",
            "id": "class-ValidatorsModel-6b04142e5fe1c0db0c26ff61a19c12c1",
            "file": "src/app/models/common/validators.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class ValidatorsModel {\r\n    controlName: string;\r\n    controlType: string;\r\n    validations: ValidationModel[] = [] ;\r\n    controls: ValidatorsModel[] = [];\r\n}\r\n\r\nexport class ValidationModel {\r\n    name: string;\r\n    message: ValidationMessageModel;\r\n    defaultMessage: string;\r\n    field1:string;\r\n    field2:string;\r\n    operator: string;\r\n    dataType:string;\r\n}\r\n\r\nexport class ValidationMessageModel {\r\n    value: string;\r\n    isStatic: boolean;\r\n    dynamicParams: any[];\r\n}",
            "properties": [
                {
                    "name": "controlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "controls",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorsModel[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "controlType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "validations",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationModel[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WidgetConstants",
            "id": "class-WidgetConstants-bcd86d7125679e73abc40303e9fbcda2",
            "file": "src/app/modules/widget-utility/widget-constants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WidgetConstants{\r\n    public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n    public static readonly ON_REQUEST = \"ON_REQUEST\"\r\n    public static readonly ON_REQUEST_COMPLETED = \"ON_REQUEST_COMPLETED\"\r\n    public static readonly ON_FILE_UPLOAD_COMPLETED = \"ON_FILE_UPLOAD_COMPLETED\"\r\n    public static readonly RESET_WIDGET_DATA = \"RESET_WIDGET_DATA\"\r\n    public static readonly UPLOAD_CLICK = \"UPLOAD_CLICK\"\r\n}\r\nexport class WidgetPermissionConst{\r\n    public static readonly READ_ONLY = \"r\";\r\n    public static readonly READ_WRITE = \"w\";\r\n    public static readonly HIDDEN = \"n\";\r\n}\r\n\r\n\r\nexport class CategoryCodeConstant{\r\n    public static readonly NATURE_OF_BUSSINESS = \"natureofbusiness\";\r\n    public static readonly ORGANIZATION_TYPE = \"organizationtype\";\r\n    public static readonly ACCOUNT_TYPE = \"accounttype\";\r\n    public static readonly STATE = \"State\"\r\n    public static readonly COUNTRY = \"Country\"\r\n    public static readonly CITY = \"City\"\r\n    public static readonly ZONE = \"Zone\"\r\n    public static readonly DOCUMENT_TYPE =\"documenttype\"\r\n    public static readonly Fuel_TYPE = \"fuel\"\r\n    public static readonly EMISSION_NORMS = \"emission\";\r\n    public static readonly VEHICLE_TYPE = \"vehicle\"\r\n    public static readonly DOCUMENT_SUBMISSION_TYPE =\"documentsubmissiontype\"\r\n\r\n\r\n    public static readonly CERTIFICATE_TYPE =\"typeofcertificate\"\r\n    public static readonly REPORT_CERTIFICATE_TYPE =\"reportcertificates\"\r\n    public static readonly OTHER_CERTIFICATE_TYPE =\"othercertificates\"\r\n\r\n    public static readonly CASE_DOCUMENTS = \"casedocument\";\r\n\r\n\r\n}\r\n\r\nexport class FormModeConstant {\r\n    public static readonly ADD = \"add\";\r\n    public static readonly EDIT = \"edit\";\r\n    public static readonly VIEW = \"view\";\r\n}",
            "properties": [
                {
                    "name": "CALLER_TO_COMP_REFRESH_DATA",
                    "defaultValue": "\"REFRESH_DATA\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "ON_FILE_UPLOAD_COMPLETED",
                    "defaultValue": "\"ON_FILE_UPLOAD_COMPLETED\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "ON_REQUEST",
                    "defaultValue": "\"ON_REQUEST\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "ON_REQUEST_COMPLETED",
                    "defaultValue": "\"ON_REQUEST_COMPLETED\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "RESET_WIDGET_DATA",
                    "defaultValue": "\"RESET_WIDGET_DATA\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "UPLOAD_CLICK",
                    "defaultValue": "\"UPLOAD_CLICK\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        142
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WidgetHelper",
            "id": "class-WidgetHelper-527f979e052bd8c799f230d22dfb4d01",
            "file": "src/app/modules/widget-utility/widget-helper.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { WidgetPermissionConst } from './widget-constants';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nexport class WidgetHelper {\r\n\r\n  static getReadPermissions(controlName: string, permissions, mode: string, widget) {\r\n    if (permissions) {\r\n      if (permissions[mode][controlName] === WidgetPermissionConst.READ_ONLY) {\r\n        widget.get(controlName).disable();\r\n      } else if (permissions[mode][controlName] === WidgetPermissionConst.READ_WRITE) {\r\n        widget.get(controlName).enable();\r\n      }\r\n    }\r\n    else {\r\n      widget.get(controlName).enable();\r\n    }\r\n  }\r\n\r\n  static getVisiblePermissions(controlName: string, permissions, mode: string) {\r\n    if (permissions) {\r\n      if(!permissions[mode]){\r\n        return false;\r\n      }\r\n      if (permissions[mode][controlName] === WidgetPermissionConst.HIDDEN) {\r\n        return false;\r\n      } \r\n      else if (permissions[mode][controlName] === WidgetPermissionConst.READ_WRITE) {\r\n        return true;\r\n      } \r\n      else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static setGlobalParamsInFormData(dataModel, formData) {\r\n    if (dataModel.isGlobalParams) {\r\n      dataModel.globalParamterKeys.forEach(item => {\r\n        formData[item] = dataModel.globalParameters.get(item);\r\n      })\r\n    }\r\n  }\r\n\r\n  static getLabelShortHelpText(dataModel: any, name: any) {\r\n    if (dataModel.tooltip[name]) {\r\n      return dataModel.tooltip[name].hovertext\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static getIconDetailsHelpText(dataModel: any, name: string) {\r\n    if (dataModel.tooltip[name]) {\r\n      return dataModel.tooltip[name].icontext\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static hasHelpIcon(dataModel: any, name: string) {\r\n    if (dataModel.tooltip[name]) {\r\n      return dataModel.tooltip[name].isicon\r\n    }\r\n    return false;\r\n  }\r\n\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "getIconDetailsHelpText",
                    "args": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLabelShortHelpText",
                    "args": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getReadPermissions",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "permissions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "widget",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "permissions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "widget",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVisiblePermissions",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "permissions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "permissions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasHelpIcon",
                    "args": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setGlobalParamsInFormData",
                    "args": [
                        {
                            "name": "dataModel",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataModel",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WidgetPageBase",
            "id": "class-WidgetPageBase-e45d4bba734b145038080902226da664",
            "file": "src/app/modules/widget-utility/widget-page-base.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Router } from '@angular/router';\r\nimport { NavigationStart } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { EventActionService } from 'src/app/services/common/event-action.service';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\nimport { SessionStorageService } from 'src/app/services/common/session-storage.service';\r\nimport { WidgetConstants } from './widget-constants';\r\n\r\n// rename to widgetpagebase\r\nexport class WidgetPageBase {\r\n\r\n  protected pageReq = { \"page\": \"Operational Dashboard\" }\r\n\r\n  getCurrentMonth?: Date;\r\n  eventHandler?: Function;\r\n  compRefInstancesMap = new Map<string, any>();\r\n  globalParameters = new Map<string, any>();\r\n  pageDataApiUrl = '/v1/widget/getpagedata';\r\n  pageSubmitDataApiUrl = '/v1/widget/getpagesubmitdata';\r\n  dynamicMethod?: Function;\r\n  pageprop: any;\r\n  submitData: any;\r\n  requestCount: number = 0;\r\n  pageInstance: any;\r\n\r\n  constructor(private _baseServerApiBase: ServerApiInterfaceServiceService,\r\n    private _baseEventActionServiceBase: EventActionService,\r\n    private _baseSessionStorageService: SessionStorageService,\r\n    private _baseRouter: Router,\r\n    private _baseSpinner: NgxSpinnerService\r\n  ) {\r\n    this.pageInstance = this;\r\n    if (!_baseRouter)\r\n      return;\r\n\r\n    if (!_baseSessionStorageService)\r\n      return;\r\n\r\n    _baseRouter.events.forEach((event) => {\r\n      // set data to global parameters\r\n      if (event instanceof NavigationStart) {\r\n\r\n        let navigation_data_keys = this.globalParameters.get(\"navigationDataKeys\");\r\n\r\n        if (!navigation_data_keys)\r\n          return;\r\n\r\n        let navigationData = new Map<string, object>();\r\n\r\n        navigation_data_keys.forEach((element:any) => {\r\n          navigationData.set(element, this.globalParameters.get(element));\r\n        });\r\n\r\n        _baseSessionStorageService.setNavigationData(navigationData);\r\n\r\n      }\r\n    });\r\n\r\n    this.initNavigationData();\r\n\r\n  }\r\n\r\n  initBase() {\r\n    // this.getSubmitData().then(() => {\r\n    //     this.getPageData();\r\n    // });\r\n  }\r\n\r\n\r\n  initNavigationData() {\r\n\r\n    if (!this._baseSessionStorageService)\r\n      return;\r\n\r\n    let navigationData = this._baseSessionStorageService.getNavigationData();\r\n\r\n    if (!navigationData || !(navigationData instanceof Map))\r\n      return;\r\n\r\n    navigationData.forEach((value, key) => {\r\n      this.globalParameters.set(key, value);\r\n    });\r\n  }\r\n\r\n  ObjectDeepAssign(target:any, source:any) {\r\n    let output = Object.assign({}, target);\r\n    Object.keys(source).forEach(key => {\r\n      if (Object.prototype.toString.call(source[key]) == '[object Object]') {\r\n        if (target[key]) {\r\n          const obj = this.ObjectDeepAssign(target[key], source[key])\r\n          Object.assign(output, { [key]: obj });\r\n        } else {\r\n          Object.assign(output, { [key]: source[key] });\r\n        }\r\n\r\n      } else {\r\n        Object.assign(output, { [key]: source[key] });\r\n      }\r\n    })\r\n    return output;\r\n  }\r\n\r\n  componentEventHandler(wigDataContext: any, eventItem: any, eventparams: any) {\r\n    this.eventHandler = this._baseEventActionServiceBase.getEventHandler(eventItem.action)\r\n    this.eventHandler!(wigDataContext, eventItem.params, eventparams, eventItem.posteventaction) //Executing method in current context\r\n  }\r\n\r\n  pageEventHandler(eventItem: any, eventparams: any) {\r\n    switch (eventItem) {\r\n      case WidgetConstants.ON_REQUEST:\r\n\r\n        this.showSpinner()\r\n        break;\r\n      case WidgetConstants.ON_REQUEST_COMPLETED:\r\n\r\n\r\n        this.hideSpinner()\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  showSpinner() {\r\n    if (this._baseSpinner) {\r\n      this.requestCount++;\r\n      this._baseSpinner.show()\r\n    }\r\n  }\r\n\r\n  hideSpinner() {\r\n    if (this._baseSpinner) {\r\n      this.requestCount--;\r\n      if (this.requestCount == 0) {\r\n        this._baseSpinner.hide()\r\n      }\r\n    }\r\n  }\r\n\r\n  RefreshData() {\r\n    this.compRefInstancesMap.forEach(instance => {\r\n      instance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n    });\r\n\r\n  }\r\n\r\n  removeListeners() {\r\n    this.compRefInstancesMap.forEach(instance => {\r\n      instance.configModel.CompToCaller.removeAllListeners();\r\n    });\r\n  }\r\n\r\n  removeListener(configModel: any) {\r\n    configModel.CompToCaller.removeAllListeners();\r\n  }\r\n\r\n  OnPropChangedRemoveListeners() {\r\n    this.compRefInstancesMap.forEach(instance => {\r\n      instance.configModel.CompToCaller.removeAllListeners();\r\n    });\r\n  }\r\n\r\n  // add event listener\r\n  addEventListener(eventActions: any, dataModel: any, configModel: any) {\r\n    if (eventActions) {\r\n      configModel.EventAction = new Map(eventActions);\r\n      configModel.EventAction.forEach((events: any, eventName: string) => {\r\n        configModel.CompToCaller.addListener(eventName, (eventparams:any) => {\r\n          events.forEach((eventItem:any) => {\r\n            this.componentEventHandler(dataModel, eventItem, eventparams)\r\n          });\r\n        });\r\n      });\r\n    }\r\n    // add listner for spinner on Request / On Request Completed\r\n    configModel.CompToCaller.addListener(WidgetConstants.ON_REQUEST, (eventparams:any) => {\r\n      this.pageEventHandler(WidgetConstants.ON_REQUEST, eventparams)\r\n    });\r\n\r\n    configModel.CompToCaller.addListener(WidgetConstants.ON_REQUEST_COMPLETED, (eventparams:any) => {\r\n      this.pageEventHandler(WidgetConstants.ON_REQUEST_COMPLETED, eventparams)\r\n    });\r\n  }\r\n\r\n  setGlobalParams(dataModel: any) {\r\n    if (this.globalParameters) {\r\n      dataModel.globalParameters = new Map(this.globalParameters);\r\n    }\r\n  }\r\n\r\n  pageAPIMethodPut(apiDataUrl:any, requestData:any) {\r\n    this.showSpinner();\r\n    return new Promise((resolve, reject) => {\r\n      this._baseServerApiBase.put<any, any>(apiDataUrl, requestData).subscribe(\r\n        response => {\r\n          this.hideSpinner();\r\n          try {\r\n            if (response) {\r\n              resolve(response)\r\n            }\r\n          } catch (e) {\r\n          }\r\n        }, error => {\r\n          this.hideSpinner();\r\n          reject()\r\n        }\r\n      );\r\n    })\r\n  }\r\n\r\n  pageAPIMethodPost(apiDataUrl:any, requestData:any) {\r\n    this.showSpinner();\r\n    return new Promise((resolve, reject) => {\r\n      this._baseServerApiBase.post<any, any>(apiDataUrl, requestData).subscribe(\r\n        response => {\r\n          this.hideSpinner();\r\n          try {\r\n            if (response) {\r\n              resolve(response)\r\n            }\r\n          } catch (e) {\r\n          }\r\n        }, error => {\r\n          this.hideSpinner();\r\n          reject()\r\n        }\r\n      );\r\n    })\r\n  }\r\n\r\n  pageAPIMethodGet(apiDataUrl: any, requestParam?: any) {\r\n    this.showSpinner();\r\n    return new Promise((resolve, reject) => {\r\n      this._baseServerApiBase.get<any>(apiDataUrl, requestParam).subscribe(\r\n        response => {\r\n          this.hideSpinner();\r\n          try {\r\n            if (response) {\r\n              resolve(response)\r\n            }\r\n          } catch (e) {\r\n          }\r\n        }, error => {\r\n          this.hideSpinner();\r\n          reject()\r\n        }\r\n      );\r\n    })\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_baseServerApiBase",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_baseEventActionServiceBase",
                        "type": "EventActionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_baseSessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_baseRouter",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_baseSpinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "_baseServerApiBase",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_baseEventActionServiceBase",
                        "type": "EventActionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_baseSessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_baseRouter",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_baseSpinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "compRefInstancesMap",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "dynamicMethod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "eventHandler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "getCurrentMonth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "globalParameters",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pageDataApiUrl",
                    "defaultValue": "'/v1/widget/getpagedata'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "pageInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "pageprop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "pageReq",
                    "defaultValue": "{ \"page\": \"Operational Dashboard\" }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "pageSubmitDataApiUrl",
                    "defaultValue": "'/v1/widget/getpagesubmitdata'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "requestCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "submitData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "addEventListener",
                    "args": [
                        {
                            "name": "eventActions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventActions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "componentEventHandler",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideSpinner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initBase",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initNavigationData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ObjectDeepAssign",
                    "args": [
                        {
                            "name": "target",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "source",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "source",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "OnPropChangedRemoveListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pageAPIMethodGet",
                    "args": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requestParam",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requestParam",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pageAPIMethodPost",
                    "args": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pageAPIMethodPut",
                    "args": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pageEventHandler",
                    "args": [
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "RefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeListener",
                    "args": [
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setGlobalParams",
                    "args": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showSpinner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WidgetPermissionConst",
            "id": "class-WidgetPermissionConst-bcd86d7125679e73abc40303e9fbcda2",
            "file": "src/app/modules/widget-utility/widget-constants.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WidgetConstants{\r\n    public static readonly CALLER_TO_COMP_REFRESH_DATA = \"REFRESH_DATA\"\r\n    public static readonly ON_REQUEST = \"ON_REQUEST\"\r\n    public static readonly ON_REQUEST_COMPLETED = \"ON_REQUEST_COMPLETED\"\r\n    public static readonly ON_FILE_UPLOAD_COMPLETED = \"ON_FILE_UPLOAD_COMPLETED\"\r\n    public static readonly RESET_WIDGET_DATA = \"RESET_WIDGET_DATA\"\r\n    public static readonly UPLOAD_CLICK = \"UPLOAD_CLICK\"\r\n}\r\nexport class WidgetPermissionConst{\r\n    public static readonly READ_ONLY = \"r\";\r\n    public static readonly READ_WRITE = \"w\";\r\n    public static readonly HIDDEN = \"n\";\r\n}\r\n\r\n\r\nexport class CategoryCodeConstant{\r\n    public static readonly NATURE_OF_BUSSINESS = \"natureofbusiness\";\r\n    public static readonly ORGANIZATION_TYPE = \"organizationtype\";\r\n    public static readonly ACCOUNT_TYPE = \"accounttype\";\r\n    public static readonly STATE = \"State\"\r\n    public static readonly COUNTRY = \"Country\"\r\n    public static readonly CITY = \"City\"\r\n    public static readonly ZONE = \"Zone\"\r\n    public static readonly DOCUMENT_TYPE =\"documenttype\"\r\n    public static readonly Fuel_TYPE = \"fuel\"\r\n    public static readonly EMISSION_NORMS = \"emission\";\r\n    public static readonly VEHICLE_TYPE = \"vehicle\"\r\n    public static readonly DOCUMENT_SUBMISSION_TYPE =\"documentsubmissiontype\"\r\n\r\n\r\n    public static readonly CERTIFICATE_TYPE =\"typeofcertificate\"\r\n    public static readonly REPORT_CERTIFICATE_TYPE =\"reportcertificates\"\r\n    public static readonly OTHER_CERTIFICATE_TYPE =\"othercertificates\"\r\n\r\n    public static readonly CASE_DOCUMENTS = \"casedocument\";\r\n\r\n\r\n}\r\n\r\nexport class FormModeConstant {\r\n    public static readonly ADD = \"add\";\r\n    public static readonly EDIT = \"edit\";\r\n    public static readonly VIEW = \"view\";\r\n}",
            "properties": [
                {
                    "name": "HIDDEN",
                    "defaultValue": "\"n\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "READ_ONLY",
                    "defaultValue": "\"r\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        142
                    ]
                },
                {
                    "name": "READ_WRITE",
                    "defaultValue": "\"w\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        142
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "WidgetBase",
            "id": "directive-WidgetBase-7f2b47b3981537cc9a2e75f8ac04b662",
            "file": "src/app/modules/widget-utility/widget-base.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ViewChildren, QueryList, Directive } from '@angular/core';\r\nimport { ErrorCodes } from 'src/app/models/common/error-codes';\r\n// import { ServerApiInterfaceServiceService } from 'src/app/server-api-interface-service.service';\r\nimport { ComponentBuilderService } from 'src/app/services/component-builder/component-builder.service';\r\nimport { EventActionService } from 'src/app/services/common/event-action.service';\r\n// import { PlaceHolderComponent } from '../shared/place-holder/place-holder.component';\r\nimport { WidgetConstants } from './widget-constants';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { NavigationStart } from '@angular/router';\r\nimport { SessionStorageService } from 'src/app/services/common/session-storage.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\n\r\n@Directive()\r\nexport class WidgetBase {\r\n\r\n    protected pageReq = { \"page\": \"Operational Dashboard\" }\r\n\r\n    instance: any;\r\n    pageInstance: any;\r\n    getCurrentMonth: Date;\r\n    eventHandler: Function;\r\n    compRefInstancesMap = new Map<string, any>();\r\n    globalParameters = new Map<string, any>();\r\n    pageDataApiUrl = '/v1/widget/getpagedata';\r\n    pageSubmitDataApiUrl = '/v1/widget/getpagesubmitdata';\r\n    dynamicMethod: Function;\r\n    pageprop: any;\r\n    submitData: any;\r\n    requestCount: number = 0;\r\n\r\n    // @ViewChildren(PlaceHolderComponent) private placeHolders: QueryList<PlaceHolderComponent>;\r\n\r\n    constructor(private _serverApiBase: ServerApiInterfaceServiceService,\r\n        private _componentBuilderServiceBase: ComponentBuilderService,\r\n        private _eventActionServiceBase: EventActionService,\r\n        private _baseSessionStorageService: SessionStorageService,\r\n        private _baseRouter: Router,\r\n        private _baseSpinner?: NgxSpinnerService,        \r\n    ) { \r\n        if(!_baseRouter)\r\n        return;\r\n\r\n        if(!_baseSessionStorageService)\r\n        return;\r\n\r\n            _baseRouter.events.forEach((event) => {\r\n                // set data to global parameters\r\n                if(event instanceof NavigationStart) {\r\n\r\n                let navigation_data_keys =    this.globalParameters.get(\"navigationDataKeys\");\r\n\r\n                if(!navigation_data_keys)\r\n                return;\r\n\r\n                let navigationData = new Map<string,object>();\r\n\r\n                navigation_data_keys.forEach(element => {\r\n                    navigationData.set(element,this.globalParameters.get(element));                    \r\n                });\r\n                    \r\n                 _baseSessionStorageService.setNavigationData(navigationData);\r\n\r\n                }            \r\n              });\r\n\r\n              this.initNavigationData();\r\n         \r\n    }\r\n\r\n    initBase() {\r\n        this.getSubmitData().then(() => {\r\n            this.getPageData();\r\n        });\r\n    }\r\n\r\n\r\n    initNavigationData(){      \r\n        \r\n        if(!this._baseSessionStorageService)\r\n        return;\r\n        \r\n        let navigationData = this._baseSessionStorageService.getNavigationData();\r\n\r\n        if(!navigationData || !(navigationData instanceof Map))\r\n        return;\r\n       \r\n        navigationData.forEach((value,key) => {\r\n            this.globalParameters.set(key,value);\r\n        });\r\n    }\r\n\r\n\r\n    getSubmitData() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._serverApiBase.post<any, any>(this.pageSubmitDataApiUrl, this.pageReq).subscribe(response => {\r\n                if (response) {\r\n                    this.submitData = response;\r\n                }\r\n                resolve(response);\r\n            }, error => {\r\n                switch (error.code) {\r\n                    case ErrorCodes.INVALID_USER_ACCESS:\r\n                        //this._notificationService.error('Invalid User Access');\r\n                        break;\r\n                }\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n\r\n    getPageData() {\r\n        this._serverApiBase.post<any, any>(this.pageDataApiUrl, this.pageReq).subscribe(response => {\r\n\r\n            if (response) {\r\n\r\n                this.compRefInstancesMap.clear();\r\n\r\n                response.forEach((widgetItem) => {\r\n\r\n\r\n                    try {\r\n\r\n                        if (widgetItem.position == 'page') {\r\n                            let properties = JSON.parse(widgetItem.properties);\r\n                            this.pageprop = properties;\r\n                        } else {\r\n\r\n                            // let placeHoldersFiltered = this.placeHolders.filter((item) => item.viewContainerRef.element.nativeElement.id == widgetItem.position)\r\n\r\n                            // if (placeHoldersFiltered.length == 0) { return; }\r\n\r\n                            // let placeHolder = placeHoldersFiltered[0];\r\n\r\n                            // let builderResult = this._componentBuilderServiceBase.CreateComponet(widgetItem.widget, placeHolder)\r\n\r\n                            // if (!builderResult.isSuccess) { return; }\r\n                           \r\n                            // if(environment.debugWidget){\r\n                            //     builderResult.componentRef.location.nativeElement.setAttribute(\"widget_page_id\",  widgetItem.id);\r\n                            //     builderResult.componentRef.location.nativeElement.setAttribute(\"page_name\",  this.pageReq.page);\r\n                            //     builderResult.componentRef.location.nativeElement.setAttribute(\"widget_name\", widgetItem.widget)\r\n                            // }\r\n\r\n                            // this.compRefInstancesMap.set(widgetItem.position, builderResult.componentRef.instance)\r\n\r\n                            let properties = JSON.parse(widgetItem.properties);\r\n\r\n                            // builderResult.componentRef.instance.dataModel = this.ObjectDeepAssign(builderResult.componentRef.instance.dataModel, properties);\r\n                            // if(builderResult.componentRef.instance.dataModel){\r\n                                // builderResult.componentRef.instance.dataModel.PAGE_NAME = this.pageReq.page;\r\n                            // }\r\n                           \r\n                        \r\n                            const submitData = this.submitData.filter(item => item.position == widgetItem.position);\r\n                            let submitDataItem = submitData[0];\r\n\r\n\r\n                            // widget submit data properties mapping\r\n                            // if (builderResult.componentRef.instance.dataModel.submitProperties && submitDataItem) {\r\n                            //     // if (submitData.length == 0) {\r\n                            //     //     console.log(widgetItem.position)\r\n                            //     //     return;\r\n                            //     // }\r\n                            //     const submitProperties = JSON.parse(submitDataItem.properties);\r\n                            //     const dataPositions = JSON.parse(submitDataItem.datapositions);\r\n                            //     builderResult.componentRef.instance.dataModel.submitProperties = submitProperties;\r\n                            //     Object.assign(builderResult.componentRef.instance.dataModel.submitProperties, dataPositions);\r\n                            //     builderResult.componentRef.instance.dataModel.submitProperties.id = submitDataItem.id;\r\n                            //     builderResult.componentRef.instance.dataModel.submitProperties.submitcode = submitDataItem.submitcode;\r\n                            // }\r\n\r\n                            // builderResult.componentRef.instance.dataModel.widgetinstanceid = widgetItem.id\r\n\r\n                            // builderResult.componentRef.instance.dataModel.globalParameters = this.globalParameters;\r\n\r\n                            if (widgetItem.eventactions) {\r\n                                let eventActionsMap = new Map(JSON.parse(widgetItem.eventactions))\r\n                                // builderResult.componentRef.instance.configModel.EventAction = eventActionsMap;\r\n                            }\r\n\r\n                            // builderResult.componentRef.instance.configModel.EventAction.forEach((events: any, eventName: string) => {\r\n                                // builderResult.componentRef.instance.configModel.CompToCaller.addListener(eventName, (eventparams) => {\r\n                                    // events.forEach(eventItem => {\r\n                                    //     this.componentEventHandler(builderResult.componentRef.instance.dataModel,eventItem, eventparams)\r\n                                    // });\r\n                                // }\r\n                                // );\r\n                            // });\r\n                            // builderResult.componentRef.instance.configModel.CompToCaller.addListener(WidgetConstants.ON_REQUEST, (eventparams) => {\r\n                                    // this.pageEventHandler(WidgetConstants.ON_REQUEST, eventparams)\r\n                            // });\r\n\r\n                            // builderResult.componentRef.instance.configModel.CompToCaller.addListener(WidgetConstants.ON_REQUEST_COMPLETED, (eventparams) => {\r\n                                // this.pageEventHandler(WidgetConstants.ON_REQUEST_COMPLETED, eventparams)\r\n                            // });\r\n\r\n                            // if (builderResult.componentRef.instance.InitComponent) {\r\n                            //     builderResult.componentRef.instance.InitComponent();\r\n                            // }                            \r\n                        }\r\n\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        console.log(\"Error widget:\", widgetItem)\r\n                    }\r\n\r\n                });\r\n\r\n                // console.log(\"compRefInstancesMap\", this.compRefInstancesMap);\r\n            }\r\n\r\n        }, error => {\r\n            switch (error.code) {\r\n                case ErrorCodes.INVALID_USER_ACCESS:\r\n                    //this._notificationService.error('Invalid User Access');\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ObjectDeepAssign(target, source) {\r\n        let output = Object.assign({}, target);\r\n        Object.keys(source).forEach(key => {\r\n            if (Object.prototype.toString.call(source[key]) == '[object Object]') {\r\n                if (target[key]) {\r\n                    const obj = this.ObjectDeepAssign(target[key], source[key])\r\n                    Object.assign(output, { [key]: obj });\r\n                } else {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n\r\n            } else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        })\r\n        return output;\r\n    }\r\n\r\n    componentEventHandler(wigDataContext: any,eventItem: any, eventparams: any) {\r\n        this.eventHandler = this._eventActionServiceBase.getEventHandler(eventItem.action)\r\n        this.eventHandler(wigDataContext, eventItem.params, eventparams, eventItem.posteventaction) //Executing method in current context\r\n    }\r\n\r\n    pageEventHandler(eventItem: any, eventparams: any) {\r\n        switch(eventItem){\r\n            case WidgetConstants.ON_REQUEST:\r\n              \r\n                 this.showSpinner()\r\n                break;\r\n            case WidgetConstants.ON_REQUEST_COMPLETED:\r\n               \r\n              \r\n                    this.hideSpinner()\r\n                            \r\n                break;\r\n        }\r\n    }\r\n\r\n    showSpinner(){\r\n        if (this._baseSpinner) {\r\n            this.requestCount++;\r\n            this._baseSpinner.show()  \r\n        }        \r\n     }\r\n   \r\n     hideSpinner(){\r\n        if(this._baseSpinner){\r\n            this.requestCount--;\r\n            if(this.requestCount == 0){\r\n                this._baseSpinner.hide()\r\n            }\r\n        }  \r\n     }\r\n\r\n    RefreshData() {\r\n        this.compRefInstancesMap.forEach(instance => {\r\n            instance.configModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\r\n        });\r\n\r\n    }\r\n\r\n    removeListeners() {\r\n        this.compRefInstancesMap.forEach(instance => {\r\n            instance.configModel.CompToCaller.removeAllListeners();\r\n        });\r\n    }\r\n\r\n    OnPropChangedRemoveListeners() {\r\n        this.compRefInstancesMap.forEach(instance => {\r\n            instance.configModel.CompToCaller.removeAllListeners();\r\n        });\r\n    }\r\n\r\n    async onSelectedWFPropChange() {\r\n        await this.OnPropChangedRemoveListeners();\r\n        await this.clearPlaceHolderRef();\r\n        this.getPageData();\r\n    }\r\n\r\n    clearPlaceHolderRef() {\r\n        // this.placeHolders.forEach((pRef) => {\r\n        //     let viewContainerRef = pRef.viewContainerRef;\r\n        //     viewContainerRef.clear();\r\n        // })\r\n    }\r\n\r\n}\r\n",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "compRefInstancesMap",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "dynamicMethod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "eventHandler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "getCurrentMonth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "globalParameters",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "instance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "pageDataApiUrl",
                    "defaultValue": "'/v1/widget/getpagedata'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "pageInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "pageprop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "pageReq",
                    "defaultValue": "{ \"page\": \"Operational Dashboard\" }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "pageSubmitDataApiUrl",
                    "defaultValue": "'/v1/widget/getpagesubmitdata'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "requestCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "submitData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "clearPlaceHolderRef",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 303,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "componentEventHandler",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPageData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSubmitData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hideSpinner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initBase",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initNavigationData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ObjectDeepAssign",
                    "args": [
                        {
                            "name": "target",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "source",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "source",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "OnPropChangedRemoveListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectedWFPropChange",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 297,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        129
                    ]
                },
                {
                    "name": "pageEventHandler",
                    "args": [
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "RefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 285,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSpinner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 262,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_serverApiBase",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_componentBuilderServiceBase",
                        "type": "ComponentBuilderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_eventActionServiceBase",
                        "type": "EventActionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_baseSessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_baseRouter",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_baseSpinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "_serverApiBase",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_componentBuilderServiceBase",
                        "type": "ComponentBuilderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_eventActionServiceBase",
                        "type": "EventActionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_baseSessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_baseRouter",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_baseSpinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "WidgetComponentBase",
            "id": "directive-WidgetComponentBase-07df67be876c6a23b4b4b3c70fa08645",
            "file": "src/app/modules/widget-utility/widget-component-base.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { FormModeConstant, WidgetConstants } from './widget-constants';\r\nimport { FormGroup, FormBuilder, NgForm } from '@angular/forms';\r\n// import { ServerApiInterfaceServiceService } from 'src/app/server-api-interface-service.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ValidationService } from 'src/app/services/common/validation.service';\r\nimport { WidgetHelper } from './widget-helper';\r\nimport { ElementRef, ViewChild, Directive } from '@angular/core';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\ndeclare var $: any;\r\n\r\n@Directive()\r\nexport abstract class WidgetComponentBase {\r\n  wgFormGroup?: FormGroup;\r\n  dataModel: any;\r\n  configModel: any;\r\n  isSubmitted?: boolean;\r\n  wgFormData: any;\r\n\r\n  id?: string;\r\n  apiDataUrl?: string;\r\n  globalParameters?: Map<string, any>;\r\n  fieldApiCount?: number;\r\n  @ViewChild('formComponent') formComponent?: NgForm;\r\n  tempPermission:any = true;\r\n\r\n  abstract ConvertData(response: any):any;\r\n  abstract setFieldData():any;\r\n  abstract setMode(responseDataModel: any):any;\r\n  abstract SetValue(responseDataModel: any):any;\r\n\r\n\r\n  constructor(\r\n    private _formBuilderBase: FormBuilder,\r\n    private _serverApiBase: ServerApiInterfaceServiceService,\r\n    private _datepipeBase: DatePipe,\r\n    public _validationServiceBase: ValidationService) {\r\n  }\r\n\r\n  wgOnInint() {\r\n    this.configModel.CallerToComp.addListener(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA, () => {\r\n      this.wgRefreshData();\r\n    });\r\n\r\n    this.wgSetRequestData();\r\n\r\n    this.wgPrepareFieldData().then(() => {\r\n      this.wgCreateForm();\r\n      if (this.dataModel.isSelfDataLoad) {\r\n        this.wgRefreshData();\r\n      } else {      \r\n        this.wgGetPermissionData().then((response: any) => {\r\n          if(response){\r\n            this.dataModel.permission = response.permission;\r\n            this.tempPermission = response.permission;\r\n          }  \r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    this.wgSetFormData();\r\n  }\r\n\r\n  wgInitComponent() {\r\n\r\n  }\r\n\r\n  wgRefreshData() {\r\n    this.wgSetRequestData();\r\n    this.wgSetFormData();\r\n\r\n    this.wgGetControlData().then((response: any) => {\r\n        let responseDataModel = this.ConvertData(response)\r\n        this.setMode(responseDataModel);\r\n        this.wgSetModeFromGlobalParameter();\r\n        // this.wgCreateForm(responseDataModel);\r\n        if (this.dataModel.mode === FormModeConstant.EDIT || this.dataModel.mode === FormModeConstant.VIEW) {\r\n          this.SetValue(responseDataModel);\r\n        }        \r\n    }).then((previousResult: any) => {\r\n      this.wgGetPermissionData().then((response: any) => {\r\n        if(response){\r\n          this.dataModel.permission = response.permission;\r\n          this.tempPermission = response.permission;\r\n        }        \r\n      })\r\n    }).then((previousResult: any) => {\r\n\r\n    });\r\n  }\r\n\r\n  wgCreateForm(responseDataModel?: any) {\r\n    if (this._validationServiceBase) {\r\n      this.wgFormGroup = this._validationServiceBase.createFormGroup(this.dataModel.validators, this.dataModel.permission, this.dataModel.mode);\r\n    }\r\n  }\r\n\r\n  Validate(): boolean {\r\n    this.isSubmitted = true;\r\n    if (this.formComponent) {\r\n      this.formComponent.onSubmit(null!);\r\n    }\r\n    return this.wgFormGroup!.valid;\r\n  }\r\n\r\n  onSubmit($event: Event): boolean {\r\n    return true;\r\n  }\r\n\r\n  wgSetModeFromGlobalParameter() {\r\n    if(this.dataModel.globalParameters.get(\"mode\")){\r\n      this.dataModel.mode = this.dataModel.globalParameters.get(\"mode\");\r\n    }\r\n  }\r\n\r\n  wgSetRequestData() {\r\n    if (this.dataModel.isGlobalParams) {\r\n      this.dataModel.globalParamterKeys.forEach((item:any) => {\r\n        this.dataModel.apireqdata[item] = this.dataModel.globalParameters.get(item) ? this.dataModel.globalParameters.get(item) : null;\r\n      })\r\n    }\r\n  }\r\n\r\n  wgSetFormData() {\r\n\r\n    if (this.dataModel.isGlobalParams && this.wgFormData) {\r\n      this.dataModel.globalParamterKeys.forEach((item:any) => {\r\n        this.wgFormData[item] = this.dataModel.globalParameters.get(item);\r\n      })\r\n    }\r\n  }\r\n  \r\n  wgGetControlData() {\r\n    this.wgOnRequest();\r\n    return new Promise((resolve, reject) => {\r\n      const apiUrlConst = this.dataModel.apiDataUrl;\r\n      const reqData = Object();\r\n      reqData.data = Object();\r\n      reqData.data = this.dataModel.apireqdata;\r\n      reqData.data.id = this.dataModel.widgetinstanceid;\r\n\r\n      this._serverApiBase.post<any, any>(apiUrlConst, reqData.data).subscribe(\r\n        response => {\r\n          this.wgOnRequestCompleted();\r\n          try {\r\n            if (response) {\r\n              resolve(response)\r\n            }\r\n          } catch (e) {\r\n          }\r\n        }, error => {\r\n          this.wgOnRequestCompleted();\r\n          reject()\r\n        }\r\n      );\r\n    })\r\n  }\r\n\r\n  wgGetPermissionData() {\r\n    if (!this.dataModel.isRequiredPermissionConfig) {\r\n      return new Promise((resolve, reject) => {\r\n        resolve(null);\r\n      });\r\n    }\r\n    this.wgOnRequest();\r\n    return new Promise((resolve, reject) => {\r\n      const apiUrlConst = this.dataModel.apiPermissionConfigUrl;\r\n      const reqData = Object();\r\n      reqData.data = Object();\r\n      reqData.data = this.dataModel.apireqdata;\r\n      reqData.data.id = this.dataModel.widgetinstanceid;\r\n\r\n      this._serverApiBase.post<any, any>(apiUrlConst, reqData.data).subscribe(\r\n        response => {\r\n          this.wgOnRequestCompleted();\r\n          try {\r\n            if (response) {\r\n              resolve(response)\r\n            }\r\n          } catch (e) {\r\n          }\r\n        }, error => {\r\n          this.wgOnRequestCompleted();\r\n          reject()\r\n        }\r\n      );\r\n    })\r\n  }\r\n\r\n  wgPrepareFieldData() {\r\n    let isResolved = this.setFieldData();\r\n    return Promise.all([isResolved])\r\n  }\r\n\r\n  wgGetReadPermission(controlName: string) {\r\n    let mode = this.dataModel.globalParameters.get(\"mode\") ?  this.dataModel.globalParameters.get(\"mode\") : FormModeConstant.VIEW;\r\n\r\n    return WidgetHelper.getReadPermissions(controlName, this.dataModel.permission, mode, this.wgFormGroup);\r\n  }\r\n\r\n  wgGetVisiblePermission(controlName: string) {\r\n    //$('[data-toggle=\"popover\"]').popover({ placement: \"right\" })\r\n    let mode = this.dataModel.globalParameters.get(\"mode\") ?  this.dataModel.globalParameters.get(\"mode\") : FormModeConstant.VIEW;\r\n    return WidgetHelper.getVisiblePermissions(controlName, this.dataModel.permission, mode);\r\n  }\r\n\r\n  wgGetLabelShortHelpText(name: string) {\r\n    return WidgetHelper.getLabelShortHelpText(this.dataModel, name);\r\n  }\r\n\r\n  wgGetIconDetailsHelpText(name: string) {\r\n    return WidgetHelper.getIconDetailsHelpText(this.dataModel, name);\r\n  }\r\n\r\n  wgHasHelpIcon(name: string) {\r\n    return WidgetHelper.hasHelpIcon(this.dataModel, name);\r\n  }\r\n\r\n  get wgFC() { return this.wgFormGroup!.controls; }\r\n\r\n  get fg() { return this.wgFormGroup; }\r\n\r\n  wgOnRequest() {\r\n    this.configModel.CompToCaller.emit(WidgetConstants.ON_REQUEST, null);\r\n  }\r\n\r\n  wgOnRequestCompleted() {\r\n    this.configModel.CompToCaller.emit(WidgetConstants.ON_REQUEST_COMPLETED, null);\r\n  }\r\n\r\n  wgDisableControl() {\r\n    Object.keys(this.wgFC).forEach(key => {\r\n      this.wgFC[key].disable();\r\n    });\r\n  }\r\n\r\n  wgEnabledControl() {\r\n    Object.keys(this.wgFC).forEach(key => {\r\n      this.wgFC[key].enable();\r\n    });\r\n  }\r\n  \r\n  wgReset(){\r\n    if (this.formComponent) {\r\n      this.formComponent.resetForm();\r\n    }\r\n    this.isSubmitted = false;\r\n    this.wgFormGroup!.reset();\r\n  }\r\n\r\n}",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_validationServiceBase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "apiDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "fieldApiCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'formComponent'"
                        }
                    ]
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "tempPermission",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "wgFormData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "wgFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ConvertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setMode",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SetValue",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "Validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgCreateForm",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wgDisableControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgEnabledControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgGetControlData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgGetIconDetailsHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wgGetLabelShortHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wgGetPermissionData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgGetReadPermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wgGetVisiblePermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wgHasHelpIcon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wgInitComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgOnInint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgOnRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgOnRequestCompleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgPrepareFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgRefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgSetFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgSetModeFromGlobalParameter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wgSetRequestData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilderBase",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_serverApiBase",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_datepipeBase",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_validationServiceBase",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "_formBuilderBase",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_serverApiBase",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_datepipeBase",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_validationServiceBase",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "wgFC": {
                    "name": "wgFC",
                    "getSignature": {
                        "name": "wgFC",
                        "type": "",
                        "returnType": "",
                        "line": 219
                    }
                },
                "fg": {
                    "name": "fg",
                    "getSignature": {
                        "name": "fg",
                        "type": "",
                        "returnType": "",
                        "line": 221
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-66e4348b7208fa854b0dbbd0d2ccb7f5",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'performance-benefit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'performance-benefit';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<app-dashboard></app-dashboard>\r\n\r\n<router-outlet>\r\n</router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-44f2f1e1b3a1e0ebc1e0edafd90d05c0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CompanyFormComponent",
            "id": "component-CompanyFormComponent-0927723c8003b55ca6568be7d067d53c",
            "file": "src/app/modules/widget-app/company/company-form/company-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-company-form",
            "styleUrls": [
                "./company-form.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./company-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "CompanyFormConfigModel"
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "CompanyFormDataModel"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_validationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "formData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "_validationServiceBase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "apiDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "fieldApiCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'formComponent'"
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "tempPermission",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ConvertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "GetValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddClick",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBackClick",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEditClick",
                    "args": [
                        {
                            "name": "actionName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionName",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "Reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetForm",
                    "args": [
                        {
                            "name": "mode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "setMode",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "SetValue",
                    "args": [
                        {
                            "name": "response",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "Validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgCreateForm",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgDisableControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgEnabledControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetControlData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetIconDetailsHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetLabelShortHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetPermissionData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetReadPermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetVisiblePermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgHasHelpIcon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgInitComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnInint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequestCompleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgPrepareFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgRefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetModeFromGlobalParameter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetRequestData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { PopupModel } from 'src/app/models/common/popup-model';\r\nimport { IWidget, IWidgetSubmit } from 'src/app/modules/widget-utility/iwidget';\r\nimport { WidgetComponentBase } from 'src/app/modules/widget-utility/widget-component-base';\r\nimport { FormModeConstant } from 'src/app/modules/widget-utility/widget-constants';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\nimport { NotificationService } from 'src/app/services/common/notification.service';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\nimport { SessionStorageService } from 'src/app/services/common/session-storage.service';\r\nimport { ValidationService } from 'src/app/services/common/validation.service';\r\nimport {\r\n  CompanyFormDataModel,\r\n  CompanyFormConfigModel,\r\n} from './company-form.model';\r\n\r\n@Component({\r\n  selector: 'app-company-form',\r\n  templateUrl: './company-form.component.html',\r\n  styleUrls: ['./company-form.component.css'],\r\n})\r\nexport class CompanyFormComponent\r\n  extends WidgetComponentBase\r\n  implements OnInit, IWidget, IWidgetSubmit {\r\n  @Input() dataModel: CompanyFormDataModel;\r\n  @Input() configModel: CompanyFormConfigModel;\r\n  formData: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private _serverApi: ServerApiInterfaceServiceService,\r\n    private datepipe: DatePipe,\r\n    private _sessionStorageService: SessionStorageService,\r\n\r\n    public _validationService: ValidationService,\r\n    private _appRepoHelperService: AppRepoHelperService,\r\n    private _notificationService: NotificationService\r\n  ) {\r\n    super(\r\n      formBuilder,\r\n      _serverApi,\r\n      datepipe,\r\n      _validationService,\r\n      // _appRepoHelperService\r\n    );\r\n\r\n    this.formData = new Object();\r\n    this.dataModel = this.dataModel;\r\n    this.configModel = this.configModel;\r\n    this.wgFormData = this.formData;\r\n  }\r\n\r\n  Reset() {}\r\n\r\n  ngOnInit(): void {\r\n    this.wgOnInint();\r\n  }\r\n\r\n  GetValue() {\r\n    const companyName = this.wgFC.companyName.value;\r\n    const pan = this.wgFC.pan.value;\r\n    const partyCode = this.wgFC.partyCode.value;\r\n\r\n    this.formData.companyName = companyName ? companyName : null;\r\n    this.formData.pan = pan ? pan : null;\r\n    this.formData.partyCode = partyCode ? partyCode : null;\r\n\r\n    return this.formData;\r\n  }\r\n\r\n  SetValue(response) {\r\n    if (response) {\r\n      this.wgFormGroup.patchValue({\r\n        companyName: response.companyName,\r\n        pan: response.pan,\r\n        partyCode: response.partyCode,\r\n      });\r\n    }\r\n  }\r\n\r\n  resetForm(mode) {\r\n    this.wgReset();\r\n  }\r\n\r\n  setMode(responseDataModel: any) {\r\n    this.dataModel.mode = FormModeConstant.EDIT;\r\n  }\r\n\r\n  // wgGetControlData() {\r\n  //   this.wgOnRequest();\r\n  //   return new Promise((resolve, reject) => {\r\n  //     let data = this._baseAppRepoHelperService.getGlobalData(\r\n  //       this.dataModel.dataKey\r\n  //     );\r\n  //     this.wgOnRequestCompleted();\r\n  //     resolve(data);\r\n  //   });\r\n  // }\r\n\r\n  ConvertData(response: any) {\r\n    this.dataModel.data = response;\r\n    return this.dataModel.data;\r\n  }\r\n\r\n  setFieldData() {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if (this.dataModel.initDataUrl) {\r\n        resolve();\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddClick(actionName) {\r\n    let eventDataObj = Object();\r\n    eventDataObj = this.dataModel.submitProperties;\r\n    eventDataObj.queryAction = 'insert';\r\n    let action = actionName;\r\n\r\n    if (this.configModel.EventAction.has(action)) {\r\n      this.configModel.CompToCaller.emit(action, eventDataObj);\r\n    }\r\n  }\r\n\r\n  onEditClick(actionName) {\r\n    let eventDataObj = Object();\r\n    eventDataObj = this.dataModel.submitProperties;\r\n    eventDataObj.queryAction = 'update';\r\n    let action = actionName;\r\n\r\n    if (this.configModel.EventAction.has(action)) {\r\n      this.configModel.CompToCaller.emit(action, eventDataObj);\r\n    }\r\n  }\r\n\r\n  onBackClick(actionName) {\r\n    let eventDataObj = Object();\r\n    if (this.configModel.EventAction.has(actionName)) {\r\n      this.configModel.CompToCaller.emit(actionName, eventDataObj);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./company-form.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "WidgetComponentBase",
            "implements": [
                "OnInit",
                "IWidget",
                "IWidgetSubmit"
            ],
            "templateData": "<form *ngIf=\"wgFormGroup\" [formGroup]=\"wgFormGroup\" >\r\n  <div class=\"form-row\">\r\n    <!-- Company Name -->\r\n    <div class=\"form-group col-md-4\">\r\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n        <mat-label>Company Name </mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Company Name\"\r\n          formControlName=\"companyName\"\r\n          [attr.disabled]=\"wgGetReadPermission('companyName')\"\r\n        />\r\n\r\n        <mat-error *ngIf=\"isSubmitted && wgFC.companyName.errors\">\r\n          <ng-container *ngFor=\"let item of wgFC.companyName.errors | keyvalue\">\r\n            <span\r\n              class=\"error-msgs\"\r\n              *ngIf=\"wgFC.companyName.errors[item.key].errorMessage\"\r\n            >\r\n              {{ wgFC.companyName.errors[item.key].errorMessage }}\r\n            </span>\r\n          </ng-container>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <!-- PAN -->\r\n    <div class=\"form-group col-md-4\">\r\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n        <mat-label>PAN </mat-label>\r\n        <input matInput placeholder=\"PAN\" formControlName=\"pan\" \r\n        [attr.disabled]=\"wgGetReadPermission('pan')\"/>\r\n\r\n        <mat-error *ngIf=\"isSubmitted && wgFC.pan.errors\">\r\n          <ng-container *ngFor=\"let item of wgFC.pan.errors | keyvalue\">\r\n            <span\r\n              class=\"error-msgs\"\r\n              *ngIf=\"wgFC.pan.errors[item.key].errorMessage\"\r\n            >\r\n              {{ wgFC.pan.errors[item.key].errorMessage }}\r\n            </span>\r\n          </ng-container>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <!-- Party Code -->\r\n    <div class=\"form-group col-md-4\">\r\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n        <mat-label>Party Code </mat-label>\r\n        <input matInput placeholder=\"Party Code\" formControlName=\"partyCode\" \r\n        [attr.disabled]=\"wgGetReadPermission('partyCode')\"/>\r\n        <mat-error *ngIf=\"isSubmitted && wgFC.partyCode.errors\">\r\n          <ng-container *ngFor=\"let item of wgFC.partyCode.errors | keyvalue\">\r\n            <span\r\n              class=\"error-msgs\"\r\n              *ngIf=\"wgFC.partyCode.errors[item.key].errorMessage\"\r\n            >\r\n              {{ wgFC.partyCode.errors[item.key].errorMessage }}\r\n            </span>\r\n          </ng-container>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\"\r\n  fxLayoutGap=\"5px\" class=\"mt-5\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-primary\"\r\n      (click)=\"onBackClick('backBtn_click')\"\r\n    >\r\n      Back\r\n    </button>\r\n    <button\r\n      *ngIf=\"wgGetVisiblePermission('add')\"\r\n      type=\"button\"\r\n      class=\"btn btn-primary\"\r\n      (click)=\"onAddClick('on_add')\"\r\n    >\r\n      Add\r\n    </button>\r\n    <button\r\n      *ngIf=\"wgGetVisiblePermission('edit')\"\r\n      type=\"button\"\r\n      class=\"btn btn-primary\"\r\n      (click)=\"onEditClick('on_edit')\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-22e67b4d847ff2130f759b8487c8a20e",
            "file": "src/app/modules/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "performanceCard1ConfigModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "performanceCard1ConfigModel2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "performanceCard1ConfigModel3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "performanceCard1ConfigModel4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "performanceCard1DataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1DataModel",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "performanceCard1DataModel2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1DataModel",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "performanceCard1DataModel3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1DataModel",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "performanceCard1DataModel4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard1DataModel",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "performanceCard2ConfigModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "performanceCard2ConfigModel2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "performanceCard2ConfigModel3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "performanceCard2ConfigModel4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2ConfigModel",
                    "optional": true,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "performanceCard2DataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2DataModel",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "performanceCard2DataModel2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2DataModel",
                    "optional": true,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "performanceCard2DataModel3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2DataModel",
                    "optional": true,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "performanceCard2DataModel4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceCard2DataModel",
                    "optional": true,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "compRefInstancesMap",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "dynamicMethod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "eventHandler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "getCurrentMonth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "globalParameters",
                    "defaultValue": "new Map<string, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageDataApiUrl",
                    "defaultValue": "'/v1/widget/getpagedata'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageprop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageReq",
                    "defaultValue": "{ \"page\": \"Operational Dashboard\" }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageSubmitDataApiUrl",
                    "defaultValue": "'/v1/widget/getpagesubmitdata'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "requestCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "submitData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "bindPerformanceCard1DataModel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindPerformanceCard1DataModel2",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindPerformanceCard1DataModel3",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindPerformanceCard1DataModel4",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindperformanceCard2DataModel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindperformanceCard2DataModel2",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindperformanceCard2DataModel3",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindperformanceCard2DataModel4",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 189,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addEventListener",
                    "args": [
                        {
                            "name": "eventActions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventActions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "componentEventHandler",
                    "args": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "wigDataContext",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "hideSpinner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "initBase",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "initNavigationData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "ObjectDeepAssign",
                    "args": [
                        {
                            "name": "target",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "source",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "source",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "OnPropChangedRemoveListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageAPIMethodGet",
                    "args": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requestParam",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requestParam",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageAPIMethodPost",
                    "args": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageAPIMethodPut",
                    "args": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiDataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requestData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "pageEventHandler",
                    "args": [
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventItem",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventparams",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "RefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "removeListener",
                    "args": [
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "removeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "setGlobalParams",
                    "args": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                },
                {
                    "name": "showSpinner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetPageBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PerformanceCard1ConfigModel, PerformanceCard1DataModel } from '../widget-app/performace-card1/performance-card1-model';\r\nimport { WidgetPageBase } from '../widget-utility/widget-page-base';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n// import { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\nimport { EventActionService } from 'src/app/services/common/event-action.service';\r\nimport { NotificationService } from 'src/app/services/common/notification.service';\r\n// import { SaveFileService } from 'src/app/services/common/save-file.service';\r\nimport { SessionStorageService } from 'src/app/services/common/session-storage.service';\r\n// import { GLOBAL_PERSISTANT_DATA } from 'src/app/constants/app-repo.constants';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { PerformanceCard2ConfigModel, PerformanceCard2DataModel } from '../widget-app/performance-card2/performance-card2-model';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends WidgetPageBase\r\nimplements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  performanceCard1DataModel?: PerformanceCard1DataModel;\r\n  performanceCard1ConfigModel?:PerformanceCard1ConfigModel;\r\n\r\n  performanceCard1DataModel2?: PerformanceCard1DataModel;\r\n  performanceCard1ConfigModel2?:PerformanceCard1ConfigModel;\r\n\r\n  performanceCard1DataModel3?: PerformanceCard1DataModel;\r\n  performanceCard1ConfigModel3?:PerformanceCard1ConfigModel;\r\n\r\n  performanceCard1DataModel4?: PerformanceCard1DataModel;\r\n  performanceCard1ConfigModel4?:PerformanceCard1ConfigModel;\r\n\r\n  performanceCard2DataModel?: PerformanceCard2DataModel;\r\n  performanceCard2ConfigModel?: PerformanceCard2ConfigModel;\r\n\r\n  performanceCard2DataModel2?: PerformanceCard2DataModel;\r\n  performanceCard2ConfigModel2?: PerformanceCard2ConfigModel;\r\n\r\n  performanceCard2DataModel3?: PerformanceCard2DataModel;\r\n  performanceCard2ConfigModel3?: PerformanceCard2ConfigModel;\r\n\r\n  performanceCard2DataModel4?: PerformanceCard2DataModel;\r\n  performanceCard2ConfigModel4?: PerformanceCard2ConfigModel;\r\n\r\n  constructor(\r\n    private _serverApi: ServerApiInterfaceServiceService,\r\n    private _sessionStorageService: SessionStorageService,\r\n    private _eventActionService: EventActionService,\r\n    private _router: Router,\r\n    private route: ActivatedRoute,\r\n    private _spinner: NgxSpinnerService,\r\n    // private _saveFileService: SaveFileService,\r\n    private _notificationService: NotificationService,\r\n    private _appRepoHelperService: AppRepoHelperService\r\n  ) {\r\n    super(\r\n      _serverApi,\r\n      _eventActionService,\r\n      _sessionStorageService,\r\n      _router,\r\n      _spinner\r\n    );\r\n\r\n    this.pageReq = { page: 'dashboard' };\r\n    this.pageprop = Object();\r\n    this.pageInstance = this;\r\n\r\n    this.performanceCard1DataModel = PerformanceCard1DataModel.getInstance();\r\n    this.performanceCard1ConfigModel = PerformanceCard1ConfigModel.getInstance();\r\n\r\n    this.performanceCard1DataModel2 = PerformanceCard1DataModel.getInstance();\r\n    this.performanceCard1ConfigModel2 = PerformanceCard1ConfigModel.getInstance();\r\n\r\n    this.performanceCard1DataModel3 = PerformanceCard1DataModel.getInstance();\r\n    this.performanceCard1ConfigModel3 = PerformanceCard1ConfigModel.getInstance();\r\n\r\n    this.performanceCard1DataModel4 = PerformanceCard1DataModel.getInstance();\r\n    this.performanceCard1ConfigModel4 = PerformanceCard1ConfigModel.getInstance();\r\n\r\n    this.performanceCard2DataModel= PerformanceCard2DataModel.getInstance();\r\n    this.performanceCard1ConfigModel= PerformanceCard1ConfigModel.getInstance();\r\n\r\n    this.performanceCard2DataModel2= PerformanceCard2DataModel.getInstance();\r\n    this.performanceCard1ConfigModel2= PerformanceCard1ConfigModel.getInstance();\r\n\r\n    this.performanceCard2DataModel3= PerformanceCard2DataModel.getInstance();\r\n    this.performanceCard1ConfigModel3= PerformanceCard1ConfigModel.getInstance();\r\n  \r\n    this.performanceCard2DataModel4= PerformanceCard2DataModel.getInstance();\r\n    this.performanceCard1ConfigModel4= PerformanceCard1ConfigModel.getInstance();\r\n  }\r\n\r\n   ngOnInit(): void {\r\n    this.bindPerformanceCard1DataModel();\r\n    this.bindPerformanceCard1DataModel2();\r\n    this.bindPerformanceCard1DataModel3();\r\n    this.bindPerformanceCard1DataModel4();\r\n\r\n    this.bindperformanceCard2DataModel();\r\n    this.bindperformanceCard2DataModel2();\r\n    this.bindperformanceCard2DataModel3();\r\n    this.bindperformanceCard2DataModel4();\r\n    // this.bindPerformanceCard1ConfigModel();\r\n  }\r\n\r\n\r\n  bindPerformanceCard1DataModel(){\r\n    // this.performanceCard1DataModel.count=\"34\";\r\n    // this.performanceCard1DataModel.icon=\"home\";\r\n    // this.performanceCard1DataModel.text=\"sfasfafa\"\r\n\r\n\r\n\r\n\r\n    \r\n\r\n        this.performanceCard1DataModel.data={\r\n          count:\"430,000\",\r\n          icon:\"volunteer_activism\",\r\n      countColor:\"#70AD47\",\r\n\r\n          text:\"Total cost of Street Works\"\r\n          }\r\n      \r\n  }\r\n\r\n  bindPerformanceCard1DataModel2(){\r\n    this.performanceCard1DataModel2.data={\r\n      count:\"380,000\",\r\n      icon:\"checklist\",\r\n      countColor:\"#70AD47\",\r\n\r\n      text:\"Cost of Permits\"\r\n      }\r\n  }\r\n  bindPerformanceCard1DataModel3(){\r\n    this.performanceCard1DataModel3.data={\r\n      count:\"40,000\",\r\n      icon:\"edit_note\",\r\n      countColor:\"#E62E2D\",\r\n\r\n      text:\"Fine & Penalties\"\r\n      }\r\n  }\r\n\r\n  bindPerformanceCard1DataModel4(){\r\n    this.performanceCard1DataModel4.data={\r\n      count:\"10,000\",\r\n      icon:\"thumb_down\",\r\n      countColor:\"#E62E2D\",\r\n      text:\"Cost of Poor Planning\"\r\n      }\r\n  }\r\n\r\n\r\n  bindperformanceCard2DataModel(){\r\n    this.performanceCard2DataModel.data={\r\n      subtext:\"Potential\",\r\n      icon:\"sentiment_satisfied_alt\",\r\n      subtext2:\"CMeX / CSAT Impact\",\r\n      text:\"High\",\r\n      backgroundColor:\"#8EC7EA\"\r\n      }\r\n  }\r\n\r\n  bindperformanceCard2DataModel2(){\r\n    this.performanceCard2DataModel2.data={\r\n      subtext:\"Potential\",\r\n      icon:\"badge\",\r\n      subtext2:\"CMeX / CSAT Impact\",\r\n      text:\"20\",\r\n      backgroundColor:\"#8ACC42\"\r\n      }\r\n  }\r\n\r\n  bindperformanceCard2DataModel3(){\r\n    this.performanceCard2DataModel3.data={\r\n      subtext:\"Potential\",\r\n      icon:\"groups\",\r\n      subtext2:\"CMeX / CSAT Impact\",\r\n      text:\"80%\",\r\n      backgroundColor:\"#E96455\"\r\n      }\r\n  }\r\n\r\n  bindperformanceCard2DataModel4(){\r\n    this.performanceCard2DataModel4.data={\r\n      subtext:\"Potential\",\r\n      icon:\"real_estate_agent\",\r\n      subtext2:\"CMeX / CSAT Impact\",\r\n      text:\"70%\",\r\n      backgroundColor:\"#F2BF11\"\r\n      }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    super.initBase();\r\n  }\r\n  \r\n  ngOnDestroy(): void {\r\n    super.removeListeners();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".headingtitle {\r\n    font-size: 24px;\r\n    padding-bottom: 20px;\r\n    color: #ACACAC;\r\n}",
                    "styleUrl": "./dashboard.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_eventActionService",
                        "type": "EventActionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_spinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_eventActionService",
                        "type": "EventActionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_spinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "WidgetPageBase",
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container-fluid\">\r\n    <div class=\"row my-2 mx-0\">\r\n        <div class=\"col-6\">\r\n            <mat-card>\r\n                <div class=\"row\">\r\n                    <div class=\"text-center headingtitle\">\r\n                        Cost of Street Works\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <app-performace-card1 [dataModel]=\"performanceCard1DataModel\" [configModel]=\"performanceCard1ConfigModel\">\r\n                        </app-performace-card1>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <app-performace-card1 [dataModel]=\"performanceCard1DataModel2\" [configModel]=\"performanceCard1ConfigModel2\">\r\n                        </app-performace-card1>\r\n                    </div>\r\n                    <div class=\"col-6 mt-md-3\">\r\n                        <app-performace-card1 [dataModel]=\"performanceCard1DataModel3\" [configModel]=\"performanceCard1ConfigModel3\">\r\n                        </app-performace-card1>\r\n                    </div>\r\n\r\n                    <div class=\"col-6 mt-md-3\">\r\n                        <app-performace-card1 [dataModel]=\"performanceCard1DataModel4\" [configModel]=\"performanceCard1ConfigModel4\">\r\n                        </app-performace-card1>\r\n                    </div>\r\n                </div>\r\n\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"col-6\">\r\n            <mat-card>\r\n                <div class=\"row\">\r\n                    <div class=\"text-center headingtitle\">\r\n                        Customer, Compliance & Quality\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <app-performance-card2 [dataModel]=\"performanceCard2DataModel\" [configModel]=\"performanceCard2ConfigModel\">\r\n                        </app-performance-card2>\r\n\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <!-- <app-performance-card2 [dataModel]=\"performanceCard2DataModel\" [configModel]=\"performanceCard2ConfigModel\">\r\n                        </app-performance-card2> -->\r\n                        <app-performance-card2 [dataModel]=\"performanceCard2DataModel2\" [configModel]=\"performanceCard2ConfigModel2\">\r\n                        </app-performance-card2>\r\n                    </div>\r\n                    <div class=\"col-6 mt-md-3\">\r\n                        <app-performance-card2 [dataModel]=\"performanceCard2DataModel3\" [configModel]=\"performanceCard2ConfigModel3\">\r\n                        </app-performance-card2>\r\n                    </div>\r\n\r\n                    <div class=\"col-6 mt-md-3\">\r\n                        <app-performance-card2 [dataModel]=\"performanceCard2DataModel4\" [configModel]=\"performanceCard2ConfigModel4\">\r\n                        </app-performance-card2>\r\n                    </div>\r\n                </div>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-c349aa42f2121da4b5737d60a50fa413",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "MoreInfoLinkDataComponent",
            "id": "component-MoreInfoLinkDataComponent-5d4b22dbb4d1020120915d25575dfb10",
            "file": "src/app/modules/widget-app/more-info-link-data/more-info-link-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-more-info-link-data",
            "styleUrls": [
                "./more-info-link-data.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./more-info-link-data.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "MoreInfoFormConfigModel"
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "MoreInfoFormDataModel"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_validationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "formData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "_validationServiceBase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "apiDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "fieldApiCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'formComponent'"
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "tempPermission",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ConvertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "GetValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "Reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "setMode",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "SetValue",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "Validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgCreateForm",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgDisableControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgEnabledControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetControlData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetIconDetailsHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetLabelShortHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetPermissionData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetReadPermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetVisiblePermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgHasHelpIcon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgInitComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnInint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequestCompleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgPrepareFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgRefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetModeFromGlobalParameter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetRequestData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\nimport { AppRepoService } from 'src/app/services/common/app-repo.service';\r\nimport { NotificationService } from 'src/app/services/common/notification.service';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\nimport { SessionStorageService } from 'src/app/services/common/session-storage.service';\r\nimport { ValidationService } from 'src/app/services/common/validation.service';\r\nimport { IWidget } from '../../widget-utility/iwidget';\r\nimport { WidgetComponentBase } from '../../widget-utility/widget-component-base';\r\nimport { FormModeConstant } from '../../widget-utility/widget-constants';\r\nimport {  MoreInfoFormConfigModel, MoreInfoFormDataModel, MoreInfoFormModel } from './more-info-link-data-model';\r\n\r\n@Component({\r\n  selector: 'app-more-info-link-data',\r\n  templateUrl: './more-info-link-data.component.html',\r\n  styleUrls: ['./more-info-link-data.component.css']\r\n})\r\nexport class MoreInfoLinkDataComponent extends WidgetComponentBase\r\n  implements OnInit, IWidget {\r\n  @Input() dataModel: MoreInfoFormDataModel;\r\n  @Input() configModel: MoreInfoFormConfigModel;\r\n  formData: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private _serverApi: ServerApiInterfaceServiceService,\r\n    private datepipe: DatePipe,\r\n    private _sessionStorageService: SessionStorageService,\r\n\r\n    public _validationService: ValidationService,\r\n    private _appRepoHelperService: AppRepoHelperService,\r\n    private _notificationService: NotificationService\r\n  ) {\r\n    super(formBuilder, _serverApi, datepipe, _validationService);\r\n    this.formData = new Object();\r\n    this.dataModel = this.dataModel;\r\n    this.configModel = this.configModel;\r\n    this.wgFormData = this.formData;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.wgOnInint();\r\n  }\r\n\r\n  ConvertData(response: any) {\r\n    this.dataModel.info = response.data[0];\r\n  }\r\n\r\n  setFieldData() {     \r\n  }\r\n\r\n  setMode(responseDataModel: any) {\r\n  }\r\n\r\n  SetValue(responseDataModel: any) {\r\n  }\r\n\r\n  GetValue() {\r\n    return this.formData;\r\n  }\r\n  Reset() {\r\n   \r\n  }\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".hmr-only-case{\r\n    color : #30e630;\r\n    font-weight: var(--font-bold);\r\n}",
                    "styleUrl": "./more-info-link-data.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_sessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_sessionStorageService",
                        "type": "SessionStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_appRepoHelperService",
                        "type": "AppRepoHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "WidgetComponentBase",
            "implements": [
                "OnInit",
                "IWidget"
            ],
            "templateData": "<form>\r\n  <div class=\"form-row mb-3\"></div>\r\n  <div class=\"form-row mb-3\">\r\n    <div class=\"form-group col-md-4\">\r\n      <label class=\"label\">Company Name</label>\r\n      <div>\r\n        <mat-label class=\"highlight-label-value\">{{ dataModel?.info?.companyname }}</mat-label>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col-md-4\">\r\n      <label class=\"label\">PAN </label>\r\n      <div>\r\n        <mat-label class=\"label-value\">{{\r\n          dataModel?.info?.panno\r\n        }}</mat-label>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col-md-4\">\r\n      <label class=\"label\">Party code </label>\r\n      <div>\r\n        <mat-label class=\"label-value\">{{ dataModel?.info?.partycode }}</mat-label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-divider flex></mat-divider>\r\n  <div class=\"form-row mt-3 mb-3\">\r\n    <div class=\"form-group col-md-4\">\r\n      <label class=\"label\">TAN</label>\r\n      <div>\r\n        <mat-label class=\"label-value\">{{ dataModel?.info?.tan }}</mat-label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <mat-divider flex></mat-divider>\r\n</form>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-458a0bd074cddd3932cfcb5b086aeb0d",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"onLogout.emit($event)\"\r\n      (onLogin)=\"onLogin.emit($event)\"\r\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nh2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\np {\r\n  margin: 1em 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PerformaceCard1Component",
            "id": "component-PerformaceCard1Component-c515a83e9a5e0d249004088762fab359",
            "file": "src/app/modules/widget-app/performace-card1/performace-card1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-performace-card1",
            "styleUrls": [
                "./performace-card1.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./performace-card1.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "PerformanceCard1ConfigModel"
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "PerformanceCard1DataModel"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_validationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "_validationServiceBase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "apiDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "fieldApiCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'formComponent'"
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "tempPermission",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "convertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ConvertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "setMode",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SetValue",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetControlData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "Validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgCreateForm",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgDisableControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgEnabledControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetIconDetailsHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetLabelShortHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetPermissionData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetReadPermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetVisiblePermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgHasHelpIcon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgInitComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnInint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequestCompleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgPrepareFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgRefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetModeFromGlobalParameter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetRequestData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\nimport { ValidationService } from 'src/app/services/common/validation.service';\r\nimport { WidgetComponentBase } from '../../widget-utility/widget-component-base';\r\n// import { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\r\nimport { PerformanceCard1ConfigModel, PerformanceCard1DataModel } from './performance-card1-model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-performace-card1',\r\n  templateUrl: './performace-card1.component.html',\r\n  styleUrls: ['./performace-card1.component.css']\r\n})\r\nexport class PerformaceCard1Component extends WidgetComponentBase implements OnInit {\r\n  ConvertData(response: any) {\r\n    // throw new Error('Method not implemented.');\r\n  }\r\n  SetValue(responseDataModel: any) {\r\n    // throw new Error('Method not implemented.');\r\n  }\r\n\r\n  @Input()  dataModel!: PerformanceCard1DataModel;\r\n  @Input() configModel!: PerformanceCard1ConfigModel;\r\n  \r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _serverApi: ServerApiInterfaceServiceService,\r\n    private _datepipe: DatePipe,\r\n    public _validationService: ValidationService\r\n  ) { \r\n    super(_formBuilder,_serverApi,_datepipe,_validationService)\r\n  //  super(_formBuilderbase, _serverApiBase, _datepipe,_validationServiceBase)\r\n    // super(_formBuilderbase,_serverBaseApi,_datepipe,_validationServiceBase) \r\n    // super(_formBuilder,_serverBaseApi,_datepipe,_validationServiceBase, _baseAppRepoHelperService)\r\n    // super(_serverApiBase, _validationService,);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.wgOnInint();\r\n  }\r\n\r\n  setFieldData() {\r\n  }\r\n\r\n  wgGetControlData() {\r\n    this.wgOnRequest();\r\n    return new Promise((resolve, reject) => {\r\n      // let data = this._baseAppRepoHelperService.getGlobalData(this.dataModel.dataKey);\r\n      let data = {};\r\n      this.wgOnRequestCompleted();\r\n      resolve(data);\r\n    });\r\n  }\r\n\r\n\r\n  \r\n\r\n  convertData(response: any) {\r\n  }\r\n\r\n  setMode(responseDataModel: any) {\r\n  }\r\n\r\n  setValue(responseDataModel: any) {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".performance-card {\r\n    border-radius: 4px;\r\n}\r\n\r\n.count-icon {\r\n    font-size: 50px !important;\r\n    color: #ACACAC;\r\n}\r\n\r\n.card-count {\r\n    font-weight: bold;\r\n    font-size: 30px;\r\n    /* line-height: 10px; */\r\n    margin-top: 5px;\r\n    color: #ACACAC;\r\n}\r\n\r\n.performance-card-lable {\r\n    font-size: 17px;\r\n    margin-top: -38px;\r\n    color: #ACACAC;\r\n}",
                    "styleUrl": "./performace-card1.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "WidgetComponentBase",
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"performance-card text-center\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"17px\" fxFlex=\"100%\">\r\n\r\n    <div [ngStyle]=\"{'width':'100%'}\" class=\"mb-3\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div fxFlex=\"50\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <mat-icon [inline]=\"true\" class=\"count-icon\">\r\n                {{dataModel.data.icon}}\r\n                <!-- dfasfdsdaf -->\r\n            </mat-icon>\r\n            <!-- <ng-template #showImg>\r\n                <img [src]=\"dataModel.data.icon\" alt=\"_ic_count\" width=\"60px\" height=\"60px\">\r\n            </ng-template> -->\r\n        </div>\r\n        <div fxFlex=\"50\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <span class=\"card-count\" [ngStyle]=\"{color:dataModel.data.countColor}\">\r\n                &#163; {{dataModel.data.count}} \r\n              </span>\r\n        </div>\r\n    </div>\r\n    <span class=\"performance-card-lable\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        {{dataModel.data.text}}\r\n        <!-- dfasdfas -->\r\n    </span>\r\n</mat-card>"
        },
        {
            "name": "PerformanceCard2Component",
            "id": "component-PerformanceCard2Component-36dd341c8b7733ffd9023d9cfe325aaa",
            "file": "src/app/modules/widget-app/performance-card2/performance-card2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-performance-card2",
            "styleUrls": [
                "./performance-card2.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./performance-card2.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "PerformanceCard2ConfigModel"
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "PerformanceCard2DataModel"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_validationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "_validationServiceBase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "apiDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "configModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "dataModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "fieldApiCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "formComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": true,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'formComponent'"
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "globalParameters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | any>",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "isSubmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "tempPermission",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "convertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ConvertData",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "setMode",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "SetValue",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetControlData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "Validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgCreateForm",
                    "args": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "responseDataModel",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgDisableControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgEnabledControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetIconDetailsHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetLabelShortHelpText",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetPermissionData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetReadPermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgGetVisiblePermission",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgHasHelpIcon",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgInitComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnInint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgOnRequestCompleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgPrepareFieldData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgRefreshData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetModeFromGlobalParameter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                },
                {
                    "name": "wgSetRequestData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "WidgetComponentBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { AppRepoHelperService } from 'src/app/services/common/app-repo-helper.service';\r\nimport { ServerApiInterfaceServiceService } from 'src/app/services/common/server-api-interface-service.service';\r\nimport { ValidationService } from 'src/app/services/common/validation.service';\r\nimport { WidgetComponentBase } from '../../widget-utility/widget-component-base';\r\nimport { PerformanceCard2ConfigModel, PerformanceCard2DataModel } from './performance-card2-model';\r\n// import { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-performance-card2',\r\n  templateUrl: './performance-card2.component.html',\r\n  styleUrls: ['./performance-card2.component.css']\r\n})\r\nexport class PerformanceCard2Component extends WidgetComponentBase implements OnInit {\r\n  ConvertData(response: any) {\r\n    // throw new Error('Method not implemented.');\r\n  }\r\n  SetValue(responseDataModel: any) {\r\n    // throw new Error('Method not implemented.');\r\n  }\r\n\r\n  @Input()  dataModel!: PerformanceCard2DataModel;\r\n  @Input() configModel!: PerformanceCard2ConfigModel;\r\n  \r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _serverApi: ServerApiInterfaceServiceService,\r\n    private _datepipe: DatePipe,\r\n    public _validationService: ValidationService\r\n  ) { \r\n    super(_formBuilder,_serverApi,_datepipe,_validationService)\r\n  //  super(_formBuilderbase, _serverApiBase, _datepipe,_validationServiceBase)\r\n    // super(_formBuilderbase,_serverBaseApi,_datepipe,_validationServiceBase) \r\n    // super(_formBuilder,_serverBaseApi,_datepipe,_validationServiceBase, _baseAppRepoHelperService)\r\n    // super(_serverApiBase, _validationService,);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.wgOnInint();\r\n  }\r\n\r\n  setFieldData() {\r\n  }\r\n\r\n  wgGetControlData() {\r\n    this.wgOnRequest();\r\n    return new Promise((resolve, reject) => {\r\n      // let data = this._baseAppRepoHelperService.getGlobalData(this.dataModel.dataKey);\r\n      let data = {};\r\n      this.wgOnRequestCompleted();\r\n      resolve(data);\r\n    });\r\n  }\r\n\r\n\r\n  \r\n\r\n  convertData(response: any) {\r\n  }\r\n\r\n  setMode(responseDataModel: any) {\r\n  }\r\n\r\n  setValue(responseDataModel: any) {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".performance-card {\r\n    border-radius: 4px;\r\n    padding: 5px;\r\n}\r\n\r\n.count-icon {\r\n    font-size: 40px !important;\r\n    color: #fff;\r\n}\r\n\r\n.card-count {\r\n    font-weight: bold;\r\n    font-size: 30px;\r\n    /* line-height: 10px; */\r\n    margin-top: 5px;\r\n    color: #fff;\r\n}\r\n\r\n.performance-card-lable {\r\n    font-size: 17px;\r\n    margin-top: -38px;\r\n    color: #fff;\r\n}",
                    "styleUrl": "./performance-card2.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_serverApi",
                        "type": "ServerApiInterfaceServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_datepipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_validationService",
                        "type": "ValidationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "WidgetComponentBase",
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"performance-card\" [ngStyle]=\"{background:dataModel.data.backgroundColor}\">\r\n\r\n    <div class=\"row m-0\">\r\n        <div class=\"col-3\">\r\n            <div class=\"d-flex h-100\">\r\n                <div class=\"row justify-content-center align-self-center\">\r\n                    <mat-icon [inline]=\"true\" class=\"count-icon\">\r\n                        {{dataModel.data.icon}}\r\n                    </mat-icon>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-9 border-white border-start\">\r\n            <div class=\"card-count\" [ngStyle]=\"{color:dataModel.data.countColor}\">\r\n                {{dataModel.data.text}}\r\n            </div>\r\n            <span class=\"performance-card-lable\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                {{dataModel.data.subtext}}\r\n              <div> {{dataModel.data.subtext2}}</div> \r\n                <!-- dfasdfas -->\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</mat-card>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-c253ffbf71ac877c9074a69323d516d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './materials/material.module';\r\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\r\nimport { WidgetAppModule } from './modules/widget-app/widgets-app.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ServerApiInterfaceServiceService } from './services/common/server-api-interface-service.service';\r\nimport { NotificationService } from './services/common/notification.service';\r\nimport { HttpErrorInterceptorService } from './http-error-interceptor.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    WidgetAppModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n    }), // ToastrModule added\r\n\r\n  ],\r\n  providers: [\r\n    ServerApiInterfaceServiceService,\r\n    NotificationService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpErrorInterceptorService,\r\n      multi: true\r\n    },\r\n    // {\r\n    //   provide: HTTP_INTERCEPTORS,\r\n    //   useClass: AppHttpInterceptorService,\r\n    //   multi: true\r\n    // },\r\n    DatePipe,\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "HttpErrorInterceptorService"
                        },
                        {
                            "name": "NotificationService"
                        },
                        {
                            "name": "ServerApiInterfaceServiceService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "WidgetAppModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-e4d613fffefb7dc13c466971e8e2e52d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CompanyModule",
            "id": "module-CompanyModule-f9e0854d406f25f30ce00e36183e9461",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/company/company-module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n// import { CompanyListContainerComponent } from \"./company-list-container/company-list-container.component\";\r\nimport { CompanyRoutingModule } from \"./company-routing.module\";\r\nimport { MaterialModule } from \"../material/material.module\";\r\n// import { DialogModule } from \"primeng/dialog\";\r\nimport { WidgetAppModule } from \"../widget-app/widgets-app.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // CompanyListContainerComponent, \r\n    ],\r\n  imports: [\r\n    CompanyRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    // DialogModule,\r\n    // WidgetsModule,\r\n    WidgetAppModule\r\n  ],\r\n})\r\nexport class CompanyModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CompanyRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "WidgetAppModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CompanyRoutingModule",
            "id": "module-CompanyRoutingModule-73db1d1410dc3b07d966188c32f007c6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/company/company-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n// import { CompanyListContainerComponent } from './company-list-container/company-list-container.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n  {\r\n    // path: 'list',\r\n    // component: CompanyListContainerComponent,\r\n    // children: [\r\n      \r\n    // ]\r\n  },\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-19ecdfb1764c9f343974d93035014261",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/materials/material.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [],
                    "optional": false,
                    "returnType": "{ ngModule: typeof MaterialModule; }",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    FlexLayoutModule,\r\n    MatSidenavModule,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatGridListModule\r\n  ],\r\n  exports: [\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatSidenavModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    FlexLayoutModule,\r\n    MatButtonToggleModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatGridListModule,\r\n    MatProgressBarModule\r\n  ],\r\n\r\n\r\n})\r\n\r\nexport class MaterialModule {\r\n  static forRoot() {\r\n    return {\r\n      ngModule: MaterialModule,\r\n    };\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-145b3ac3d4d6e806f91fa83e27b64d3e-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/material/material.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [],
                    "optional": false,
                    "returnType": "{ ngModule: typeof MaterialModule; }",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar'\r\n\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    // MatDatePicker,\r\n  \r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatProgressBarModule,\r\n    // MatDatepickerModule,\r\n    // MatNativeDateModule,\r\n    // MatTreeModule,\r\n    // MatToolbarModule,\r\n    // MatGridListModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n    MatChipsModule\r\n\r\n  ],\r\n  exports: [\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    // MatDatepickerModule,\r\n  \r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    MatCardModule,\r\n    MatExpansionModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatProgressBarModule,\r\n    // MatDatepickerModule,\r\n    // MatNativeDateModule,\r\n    // MatTreeModule,\r\n    // MatToolbarModule,\r\n    // MatGridListModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n    MatChipsModule\r\n  ],\r\n\r\n\r\n})\r\n\r\nexport class MaterialModule {\r\n  static forRoot() {\r\n    return {\r\n      ngModule: MaterialModule,\r\n    };\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WidgetAppModule",
            "id": "module-WidgetAppModule-7617c6bce06cc478cc7281e8cd047eda",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/widget-app/widgets-app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { MoreInfoLinkDataComponent } from './more-info-link-data/more-info-link-data.component';\r\nimport { CompanyFormComponent } from './company/company-form/company-form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerformaceCard1Component } from './performace-card1/performace-card1.component';\r\nimport { PerformanceCard2Component } from './performance-card2/performance-card2.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MoreInfoLinkDataComponent,\r\n    CompanyFormComponent,\r\n    PerformaceCard1Component,\r\n    PerformanceCard2Component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule \r\n  ],\r\n  exports:[\r\n    MoreInfoLinkDataComponent,\r\n    CompanyFormComponent,\r\n    PerformaceCard1Component,\r\n    PerformanceCard2Component\r\n  ]\r\n})\r\nexport class WidgetAppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CompanyFormComponent"
                        },
                        {
                            "name": "MoreInfoLinkDataComponent"
                        },
                        {
                            "name": "PerformaceCard1Component"
                        },
                        {
                            "name": "PerformanceCard2Component"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CompanyFormComponent"
                        },
                        {
                            "name": "MoreInfoLinkDataComponent"
                        },
                        {
                            "name": "PerformaceCard1Component"
                        },
                        {
                            "name": "PerformanceCard2Component"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-utility/widget-component-base.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    onGetValues: action('getValues'),\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    onGetValues: action('getValues'),\r\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DebugMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DebugMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  baseurl:'http://jsonplaceholder.typicode.com/'\r\n\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "REMEMBER_ME_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"pwb-rm-data\""
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelfDataLoad",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelfDataLoad",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessBehavior",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PerformaceCard1Component>",
                "defaultValue": "args => ({\r\n    props: {\r\n      ...args,\r\n      //  onGetValues: actionsData.onGetValues,\r\n    //   onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n\r\n    },\r\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PerformanceCard2Component>",
                "defaultValue": "args => ({\r\n    props: {\r\n      ...args,\r\n      //  onGetValues: actionsData.onGetValues,\r\n    //   onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n\r\n    },\r\n  })"
            }
        ],
        "functions": [
            {
                "name": "customRequiredValidator",
                "file": "src/app/services/common/validation.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "APP_DATA_CODE",
                "childs": [
                    {
                        "name": "CASE_STATUS_DRAFT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DRAFT_CS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "APP_SETTING",
                "childs": [
                    {
                        "name": "DATE_FORMAT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "DATE_TIME_FORMAT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "USE_GLOBAL_DATE_TIME_FORMAT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "RESEND_OTP_TIME_SEC",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "USE_SAML",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MAX_USER_ADD_COUNT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ARAI_PAYMENT_URL",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "APP_SETTING",
                "childs": [
                    {
                        "name": "DATE_FORMAT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DATE_FORMAT"
                    },
                    {
                        "name": "DATE_TIME_FORMAT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DATE_TIME_FORMAT"
                    },
                    {
                        "name": "USE_GLOBAL_DATE_TIME_FORMAT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "useglobaldatetimeformat"
                    },
                    {
                        "name": "RESEND_OTP_TIME_SEC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "RESEND_OTP_TIME_SEC"
                    },
                    {
                        "name": "USE_SAML",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "USE_SAML"
                    },
                    {
                        "name": "MAX_USER_ADD_COUNT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MAX_USER_ADD_COUNT"
                    },
                    {
                        "name": "ARAI_PAYMENT_URL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ARAI_PAYMENT_URL"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "CASE_IMPACT_TYPE_ID",
                "childs": [
                    {
                        "name": "NO_IMPACT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST_DELAY",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TEST_ON_HOLD",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CLEARANCE_ON_HOLD",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "CASE_IMPACT_TYPE_ID",
                "childs": [
                    {
                        "name": "NO_IMPACT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "11457"
                    },
                    {
                        "name": "TEST_DELAY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "11458"
                    },
                    {
                        "name": "TEST_ON_HOLD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "11459"
                    },
                    {
                        "name": "CLEARANCE_ON_HOLD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "11460"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "CASE_STATUS",
                "childs": [
                    {
                        "name": "DRAFT_CS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "IN_PROGRSS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "REJECTED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_APPROVED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SUBMITTED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "REVIEW",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ASSIGNED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CERTIFIED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "COMPLETED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ALLOCATED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ALLOTED_TO_ENGINEER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "FORWARDED_FOR_CERTIFICATE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CUSTOMER_CANCEL",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "UNDER_SHORT_CLOSE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SHORT_CLOSED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "PARTIAL_CLOSE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SHOR_CLOSE_VERIFICATION",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ON_GOING",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "FINAL_SCRUTINY",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "UNDER_CERTIFICATION",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "CASE_STATUS",
                "childs": [
                    {
                        "name": "DRAFT_CS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DRAFT_CS"
                    },
                    {
                        "name": "UNDER_SHORT_CLOSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "UNDER_SHORT_CLOSE"
                    },
                    {
                        "name": "IN_PROGRSS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "IN_PROGRSS"
                    },
                    {
                        "name": "REJECTED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REJECTED"
                    },
                    {
                        "name": "CASE_APPROVED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_APPROVED"
                    },
                    {
                        "name": "SUBMITTED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SUBMITTED"
                    },
                    {
                        "name": "REVIEW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REVIEW"
                    },
                    {
                        "name": "ASSIGNED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ASSIGNED"
                    },
                    {
                        "name": "CERTIFIED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CERTIFIED"
                    },
                    {
                        "name": "COMPLETED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COMPLETED"
                    },
                    {
                        "name": "ALLOCATED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ALLOCATED"
                    },
                    {
                        "name": "ALLOTED_TO_ENGINEER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ALLOTED_TO_ENGINEER"
                    },
                    {
                        "name": "FORWARDED_FOR_CERTIFICATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FORWARDED_FOR_CERTIFICATE"
                    },
                    {
                        "name": "CUSTOMER_CANCEL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CUSTOMER_CANCEL"
                    },
                    {
                        "name": "PARTIAL_CLOSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PARTIAL_CLOSE"
                    },
                    {
                        "name": "SHORT_CLOSED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHORT_CLOSED"
                    },
                    {
                        "name": "SHOR_CLOSE_VERIFICATION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHOR_CLOSE_VERIFICATION"
                    },
                    {
                        "name": "ON_GOING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ON_GOING"
                    },
                    {
                        "name": "FINAL_SCRUTINY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FINAL_SCRUTINY"
                    },
                    {
                        "name": "UNDER_CERTIFICATION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "UNDER_CERTIFICATION"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "CLICK_EVENT",
                "childs": [
                    {
                        "name": "ON_ITEM_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "item_click"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts"
            },
            {
                "name": "CONTROL_TYPE",
                "childs": [
                    {
                        "name": "TEXTBOX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "textbox"
                    },
                    {
                        "name": "OPERATOR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "operator"
                    },
                    {
                        "name": "DATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "date"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "ENGINEER_WORKING_STATUS",
                "childs": [
                    {
                        "name": "SCR_START",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SCR_STOP",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SCR_COMPLETED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "ENGINEER_WORKING_STATUS",
                "childs": [
                    {
                        "name": "SCR_START",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SCR_START"
                    },
                    {
                        "name": "SCR_STOP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SCR_STOP"
                    },
                    {
                        "name": "SCR_COMPLETED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SCR_COMPLETED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "EVENT_NAME",
                "childs": [
                    {
                        "name": "ON_ITEM_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "item_click"
                    },
                    {
                        "name": "ON_SUBMIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_submit"
                    },
                    {
                        "name": "ON_ADD_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "add_click"
                    },
                    {
                        "name": "ON_UPLOAD_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "upload"
                    },
                    {
                        "name": "ON_DOWNLOAD_ALL_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "download_all_click"
                    },
                    {
                        "name": "ON_EXPORT_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "export_click"
                    },
                    {
                        "name": "ON_SYNC_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "sync_click"
                    },
                    {
                        "name": "ON_EMAIL_CLICK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "email_click"
                    },
                    {
                        "name": "ON_CANCEL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_cancel"
                    },
                    {
                        "name": "ON_SHORT_CLOSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_short_close"
                    },
                    {
                        "name": "ON_UNDER_SHORT_CLOSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_under_short_close"
                    },
                    {
                        "name": "ON_PARTIAL_CLOSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_partial_close"
                    },
                    {
                        "name": "ON_REJECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_reject"
                    },
                    {
                        "name": "ON_CLEARANCE_FORWARD_TO_FC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_forwardToFc"
                    },
                    {
                        "name": "ON_CLEARANCE_RETURN_TO_ENG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_returnToEngineer"
                    },
                    {
                        "name": "ON_CLEARANCE_APPROVE_BY_FC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_approveClearanceByFc"
                    },
                    {
                        "name": "ON_CLEARANCE_RETURN_TO_DEPT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_returnToDept"
                    },
                    {
                        "name": "ON_CLEARANCE_FORWARD_TO_HMR_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_forwardToHmrAdmin"
                    },
                    {
                        "name": "ON_START",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_start"
                    },
                    {
                        "name": "ON_STOP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_stop"
                    },
                    {
                        "name": "ON_ADD_TAG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_add_tag"
                    },
                    {
                        "name": "ON_ADD_QUERY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_add_query"
                    },
                    {
                        "name": "ON_FILTER_APPLY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_filter_apply"
                    },
                    {
                        "name": "ON_FILTER_RESET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "on_filter_reset"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "FILTER_TYPE",
                "childs": [
                    {
                        "name": "ADVANCE_FILTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "0"
                    },
                    {
                        "name": "QUICK_FILTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1"
                    },
                    {
                        "name": "DYNAMIC_FILTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "2"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "GLOBAL_PARAM_KEY",
                "childs": [
                    {
                        "name": "PERMIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Permit"
                    },
                    {
                        "name": "ELGIN_MAP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ELGIN_MAP"
                    },
                    {
                        "name": "CONDITIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CONDITIONS"
                    },
                    {
                        "name": "PERMIT_FORM",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PERMIT_FORM"
                    },
                    {
                        "name": "PERMIT_CONFIRMATION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PERMIT_CONFIRMATION"
                    },
                    {
                        "name": "REINSTATEMENT_ELGIN_MAP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REINSTATEMENT_ELGIN_MAP"
                    },
                    {
                        "name": "REINSTATEMENT_FORM",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REINSTATEMENT_FORM"
                    },
                    {
                        "name": "REINSTATEMENT__CONFIRMATION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REINSTATEMENT_CONFIRMATION"
                    },
                    {
                        "name": "VIEW_ELGIN_MAP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "VIEW_ELGIN_MAP"
                    },
                    {
                        "name": "VIEW_CONDITIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "VIEW_CONDITIONS"
                    },
                    {
                        "name": "VIEW_PERMIT_FORM",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "VIEW_PERMIT_FORM"
                    },
                    {
                        "name": "NEW_PERMIT_CONDITIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NEW_PERMIT_CONDITIONS"
                    },
                    {
                        "name": "NEW_PERMIT_PERMIT_FORM",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NEW_PERMIT_PERMIT_FORM"
                    },
                    {
                        "name": "APP_FILTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "App_Filters"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "GLOBAL_PARAM_MODE",
                "childs": [
                    {
                        "name": "PERMIT_VIEW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PERMIT_VIEW"
                    },
                    {
                        "name": "NEW_PERMIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NEW_PERMIT"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "JOURNEY_TYPE",
                "childs": [
                    {
                        "name": "NONE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "none"
                    },
                    {
                        "name": "SSM_START",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ssm_start"
                    },
                    {
                        "name": "SSM_STOP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ssm_stop"
                    },
                    {
                        "name": "SSM_REGISTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ssm_register"
                    },
                    {
                        "name": "IDM_2_4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "idm_2_4"
                    },
                    {
                        "name": "IDM_VISUAL_CORING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "idm_visual_coring"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "LOCAL_MASTER_DATA",
                "childs": [
                    {
                        "name": "FILTER_OPERATORS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FILTER_OPERATORS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "LOCAL_STORAGE_DATA_KEY",
                "childs": [
                    {
                        "name": "USERINFO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "userinfo"
                    },
                    {
                        "name": "SESSION_TOKEN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "sessionToken"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "MASTER_DATA",
                "childs": [
                    {
                        "name": "FUEL_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "VEHICLE_CATEGORY",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "EMISSION_NORMS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "NATURE_OF_BUSINESS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ORGANIZATION_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "STATE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ACCOUNT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "DOCUMENT_SUBMISSION_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "REPORT_CERTIFICATES",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "OTHER_CERTIFICATES",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CMVR_CERTIFICATES",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TYPE_OF_CERTIFICATE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_DOCUMENT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "USER_ROLES",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "COMPANY_USER_ROLES",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "COMPONENT_TYPES",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_STATUS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CUSTOMER_STATUS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "DOCUMENT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_DEPARTMENT_STATUS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_PRIORITY",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_REM_ACCESS_SPECIFIER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_REMARK_ACTIONS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ARAI_DEPARTMENTS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "PARTY_STATUS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_DOCUMENT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "TAGGING_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CLEARANCE_NOTE_STATUS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CLEARANCE_MODE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CL_NOTE_TEST_RPT_UPLOADED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CL_NOTE_FINACE_CLEARED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "DISPATCH_TRANSPORT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_IMPACT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CASE_QUERY_TYPE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "MASTER_DATA",
                "childs": [
                    {
                        "name": "FUEL_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FUEL_TYPE"
                    },
                    {
                        "name": "VEHICLE_ENGINE_CATEGORY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "VEHICLE_ENGINE_CATEGORY"
                    },
                    {
                        "name": "EMISSION_NORMS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EMISSION_NORMS"
                    },
                    {
                        "name": "NATURE_OF_BUSINESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NATURE_OF_BUSINESS"
                    },
                    {
                        "name": "ORGANIZATION_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ORGANIZATION_TYPE"
                    },
                    {
                        "name": "LOCATION_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LOCATION_TYPE"
                    },
                    {
                        "name": "STATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "STATE"
                    },
                    {
                        "name": "ACCOUNT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ACCOUNT_TYPE"
                    },
                    {
                        "name": "DOCUMENT_SUBMISSION_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DOCUMENT_SUBMISSION_TYPE"
                    },
                    {
                        "name": "REPORT_CERTIFICATES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REPORT_CERTIFICATES"
                    },
                    {
                        "name": "OTHER_CERTIFICATES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "OTHER_CERTIFICATES"
                    },
                    {
                        "name": "CMVR_CERTIFICATES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CMVR_CERTIFICATES"
                    },
                    {
                        "name": "TYPE_OF_CERTIFICATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "TYPE_OF_CERTIFICATE"
                    },
                    {
                        "name": "CASE_DOCUMENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_DOCUMENT"
                    },
                    {
                        "name": "USER_ROLES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "USER_ROLES"
                    },
                    {
                        "name": "COMPANY_USER_ROLES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COMPANY_USER_ROLES"
                    },
                    {
                        "name": "COMPONENT_TYPES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COMPONENT_TYPES"
                    },
                    {
                        "name": "CASE_STATUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_STATUS"
                    },
                    {
                        "name": "CUSTOMER_STATUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CUSTOMER_STATUS"
                    },
                    {
                        "name": "DOCUMENT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DOCUMENT_TYPE"
                    },
                    {
                        "name": "CASE_DEPARTMENT_STATUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_DEPARTMENT_STATUS"
                    },
                    {
                        "name": "CASE_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_TYPE"
                    },
                    {
                        "name": "CASE_PRIORITY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_PRIORITY"
                    },
                    {
                        "name": "CASE_REM_ACCESS_SPECIFIER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_REM_ACCESS_SPECIFIER"
                    },
                    {
                        "name": "CASE_REMARK_ACTIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_REMARK_ACTIONS"
                    },
                    {
                        "name": "ARAI_DEPARTMENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ARAI_DEPARTMENTS"
                    },
                    {
                        "name": "PARTY_STATUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PARTY_STATUS"
                    },
                    {
                        "name": "CASE_DOCUMENT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_DOCUMENT_TYPE"
                    },
                    {
                        "name": "CASE_QUERY_TAGS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_QUERY_TAGS"
                    },
                    {
                        "name": "CLEARANCE_NOTE_STATUS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CLEARANCE_NOTE_STATUS"
                    },
                    {
                        "name": "CLEARANCE_MODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CLEARANCE_MODE"
                    },
                    {
                        "name": "CL_NOTE_TEST_RPT_UPLOADED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CL_NOTE_TEST_RPT_UPLOADED"
                    },
                    {
                        "name": "CL_NOTE_FINACE_CLEARED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CL_NOTE_FINACE_CLEARED"
                    },
                    {
                        "name": "SHORT_CLOSE_REASON",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHORT_CLOSE_REASON"
                    },
                    {
                        "name": "DISPATCH_TRANSPORT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DISPATCH_TRANSPORT_TYPE"
                    },
                    {
                        "name": "CASE_IMPACT_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_IMPACT_TYPE"
                    },
                    {
                        "name": "CASE_QUERY_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CASE_QUERY_TYPE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "NAVIGATION_DATA",
                "childs": [
                    {
                        "name": "SESSION_TOKEN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "elginSessionToken"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "NAVIGATION_DATA",
                "childs": [
                    {
                        "name": "CREATE_PERMIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "createPermit"
                    },
                    {
                        "name": "EDIT_PERMIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "editPermit"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "OPERATORS",
                "childs": [
                    {
                        "name": "GRATER_THAN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": ">"
                    },
                    {
                        "name": "LESS_THAN_EQUAL_TO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "<="
                    },
                    {
                        "name": "GREATER_THAN_EQUAL_TO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": ">="
                    },
                    {
                        "name": "EQUAL_TO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "="
                    },
                    {
                        "name": "NOT_EQUAL_TO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "!="
                    },
                    {
                        "name": "BETWEEN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "between"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "QUERY_TYPES_ID",
                "childs": [
                    {
                        "name": "CQT_GENERIC",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CQT_DOCUMENTS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "QUERY_TYPES_ID",
                "childs": [
                    {
                        "name": "CQT_GENERIC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "11461"
                    },
                    {
                        "name": "CQT_DOCUMENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "11462"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "SESSION_STORAGE_DATA_KEY",
                "childs": [
                    {
                        "name": "USERINFO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "userinfo"
                    },
                    {
                        "name": "SESSION_TOKEN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "sessionToken"
                    },
                    {
                        "name": "NAVIGATION_DATA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PAGE_NAVIGATION_DATA"
                    },
                    {
                        "name": "USER_NAME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "username"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/app-constants.ts"
            },
            {
                "name": "TAGS_TYPES_CODE",
                "childs": [
                    {
                        "name": "OTHER_TAG",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "TAGS_TYPES_CODE",
                "childs": [
                    {
                        "name": "OTHER_TAG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "OTHER_TAG"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "TAGS_TYPES_ID",
                "childs": [
                    {
                        "name": "OTHER_TAG",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/app-repo.constants.ts"
            },
            {
                "name": "TAGS_TYPES_ID",
                "childs": [
                    {
                        "name": "OTHER_TAG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "10960"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "USER_ROLE_TYPE",
                "childs": [
                    {
                        "name": "HMR_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "10923"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/constants/db.constants.ts"
            },
            {
                "name": "USER_ROLES",
                "childs": [
                    {
                        "name": "COMPANY_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COMPANY_ADMIN"
                    },
                    {
                        "name": "COMPANY_SUB_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COMPANY_SUB_ADMIN"
                    },
                    {
                        "name": "COMPANY_USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COMPANY_USER"
                    },
                    {
                        "name": "CMVR_TAS_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CMVR_TAS_ADMIN"
                    },
                    {
                        "name": "HMR_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "HMR_ADMIN"
                    },
                    {
                        "name": "PROJECT_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PROJECT_ADMIN"
                    },
                    {
                        "name": "CERTIFICATION_HOD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CERTIFICATION_HOD"
                    },
                    {
                        "name": "FILE_COORDINATOR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FILE_COORDINATOR"
                    },
                    {
                        "name": "CERTIFICATE_HANDLER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CERTIFICATE_HANDLER"
                    },
                    {
                        "name": "DEPT_HOD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DEPT_HOD"
                    },
                    {
                        "name": "DEPT_ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DEPT_ADMIN"
                    },
                    {
                        "name": "TEST_ENGINEER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "TEST_ENGINEER"
                    },
                    {
                        "name": "REPORT_HANDLER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REPORT_HANDLER"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/models/common/user-types.ts"
            }
        ],
        "groupedVariables": {
            "src/app/modules/widget-utility/widget-component-base.ts": [
                {
                    "name": "$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-utility/widget-component-base.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    onGetValues: action('getValues'),\r\n}"
                },
                {
                    "name": "DebugMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SelfDataLoad",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessBehavior",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PerformaceCard1Component>",
                    "defaultValue": "args => ({\r\n    props: {\r\n      ...args,\r\n      //  onGetValues: actionsData.onGetValues,\r\n    //   onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n\r\n    },\r\n  })"
                }
            ],
            "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    onGetValues: action('getValues'),\r\n}"
                },
                {
                    "name": "DebugMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SelfDataLoad",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PerformanceCard2Component>",
                    "defaultValue": "args => ({\r\n    props: {\r\n      ...args,\r\n      //  onGetValues: actionsData.onGetValues,\r\n    //   onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n\r\n    },\r\n  })"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  baseurl:'http://jsonplaceholder.typicode.com/'\r\n\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/app-constants.ts": [
                {
                    "name": "REMEMBER_ME_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"pwb-rm-data\""
                }
            ]
        },
        "groupedFunctions": {
            "src/app/services/common/validation.service.ts": [
                {
                    "name": "customRequiredValidator",
                    "file": "src/app/services/common/validation.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/constants/db.constants.ts": [
                {
                    "name": "APP_DATA_CODE",
                    "childs": [
                        {
                            "name": "CASE_STATUS_DRAFT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DRAFT_CS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "APP_SETTING",
                    "childs": [
                        {
                            "name": "DATE_FORMAT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DATE_FORMAT"
                        },
                        {
                            "name": "DATE_TIME_FORMAT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DATE_TIME_FORMAT"
                        },
                        {
                            "name": "USE_GLOBAL_DATE_TIME_FORMAT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "useglobaldatetimeformat"
                        },
                        {
                            "name": "RESEND_OTP_TIME_SEC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "RESEND_OTP_TIME_SEC"
                        },
                        {
                            "name": "USE_SAML",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "USE_SAML"
                        },
                        {
                            "name": "MAX_USER_ADD_COUNT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MAX_USER_ADD_COUNT"
                        },
                        {
                            "name": "ARAI_PAYMENT_URL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ARAI_PAYMENT_URL"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "CASE_IMPACT_TYPE_ID",
                    "childs": [
                        {
                            "name": "NO_IMPACT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "11457"
                        },
                        {
                            "name": "TEST_DELAY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "11458"
                        },
                        {
                            "name": "TEST_ON_HOLD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "11459"
                        },
                        {
                            "name": "CLEARANCE_ON_HOLD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "11460"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "CASE_STATUS",
                    "childs": [
                        {
                            "name": "DRAFT_CS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DRAFT_CS"
                        },
                        {
                            "name": "UNDER_SHORT_CLOSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "UNDER_SHORT_CLOSE"
                        },
                        {
                            "name": "IN_PROGRSS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "IN_PROGRSS"
                        },
                        {
                            "name": "REJECTED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REJECTED"
                        },
                        {
                            "name": "CASE_APPROVED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_APPROVED"
                        },
                        {
                            "name": "SUBMITTED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SUBMITTED"
                        },
                        {
                            "name": "REVIEW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REVIEW"
                        },
                        {
                            "name": "ASSIGNED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ASSIGNED"
                        },
                        {
                            "name": "CERTIFIED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CERTIFIED"
                        },
                        {
                            "name": "COMPLETED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COMPLETED"
                        },
                        {
                            "name": "ALLOCATED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ALLOCATED"
                        },
                        {
                            "name": "ALLOTED_TO_ENGINEER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ALLOTED_TO_ENGINEER"
                        },
                        {
                            "name": "FORWARDED_FOR_CERTIFICATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FORWARDED_FOR_CERTIFICATE"
                        },
                        {
                            "name": "CUSTOMER_CANCEL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CUSTOMER_CANCEL"
                        },
                        {
                            "name": "PARTIAL_CLOSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PARTIAL_CLOSE"
                        },
                        {
                            "name": "SHORT_CLOSED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHORT_CLOSED"
                        },
                        {
                            "name": "SHOR_CLOSE_VERIFICATION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHOR_CLOSE_VERIFICATION"
                        },
                        {
                            "name": "ON_GOING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ON_GOING"
                        },
                        {
                            "name": "FINAL_SCRUTINY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FINAL_SCRUTINY"
                        },
                        {
                            "name": "UNDER_CERTIFICATION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "UNDER_CERTIFICATION"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "ENGINEER_WORKING_STATUS",
                    "childs": [
                        {
                            "name": "SCR_START",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SCR_START"
                        },
                        {
                            "name": "SCR_STOP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SCR_STOP"
                        },
                        {
                            "name": "SCR_COMPLETED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SCR_COMPLETED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "EVENT_NAME",
                    "childs": [
                        {
                            "name": "ON_ITEM_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "item_click"
                        },
                        {
                            "name": "ON_SUBMIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_submit"
                        },
                        {
                            "name": "ON_ADD_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "add_click"
                        },
                        {
                            "name": "ON_UPLOAD_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "upload"
                        },
                        {
                            "name": "ON_DOWNLOAD_ALL_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "download_all_click"
                        },
                        {
                            "name": "ON_EXPORT_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "export_click"
                        },
                        {
                            "name": "ON_SYNC_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "sync_click"
                        },
                        {
                            "name": "ON_EMAIL_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "email_click"
                        },
                        {
                            "name": "ON_CANCEL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_cancel"
                        },
                        {
                            "name": "ON_SHORT_CLOSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_short_close"
                        },
                        {
                            "name": "ON_UNDER_SHORT_CLOSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_under_short_close"
                        },
                        {
                            "name": "ON_PARTIAL_CLOSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_partial_close"
                        },
                        {
                            "name": "ON_REJECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_reject"
                        },
                        {
                            "name": "ON_CLEARANCE_FORWARD_TO_FC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_forwardToFc"
                        },
                        {
                            "name": "ON_CLEARANCE_RETURN_TO_ENG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_returnToEngineer"
                        },
                        {
                            "name": "ON_CLEARANCE_APPROVE_BY_FC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_approveClearanceByFc"
                        },
                        {
                            "name": "ON_CLEARANCE_RETURN_TO_DEPT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_returnToDept"
                        },
                        {
                            "name": "ON_CLEARANCE_FORWARD_TO_HMR_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_forwardToHmrAdmin"
                        },
                        {
                            "name": "ON_START",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_start"
                        },
                        {
                            "name": "ON_STOP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_stop"
                        },
                        {
                            "name": "ON_ADD_TAG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_add_tag"
                        },
                        {
                            "name": "ON_ADD_QUERY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_add_query"
                        },
                        {
                            "name": "ON_FILTER_APPLY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_filter_apply"
                        },
                        {
                            "name": "ON_FILTER_RESET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "on_filter_reset"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "MASTER_DATA",
                    "childs": [
                        {
                            "name": "FUEL_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FUEL_TYPE"
                        },
                        {
                            "name": "VEHICLE_ENGINE_CATEGORY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "VEHICLE_ENGINE_CATEGORY"
                        },
                        {
                            "name": "EMISSION_NORMS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EMISSION_NORMS"
                        },
                        {
                            "name": "NATURE_OF_BUSINESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NATURE_OF_BUSINESS"
                        },
                        {
                            "name": "ORGANIZATION_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ORGANIZATION_TYPE"
                        },
                        {
                            "name": "LOCATION_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LOCATION_TYPE"
                        },
                        {
                            "name": "STATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "STATE"
                        },
                        {
                            "name": "ACCOUNT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ACCOUNT_TYPE"
                        },
                        {
                            "name": "DOCUMENT_SUBMISSION_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DOCUMENT_SUBMISSION_TYPE"
                        },
                        {
                            "name": "REPORT_CERTIFICATES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REPORT_CERTIFICATES"
                        },
                        {
                            "name": "OTHER_CERTIFICATES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "OTHER_CERTIFICATES"
                        },
                        {
                            "name": "CMVR_CERTIFICATES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CMVR_CERTIFICATES"
                        },
                        {
                            "name": "TYPE_OF_CERTIFICATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "TYPE_OF_CERTIFICATE"
                        },
                        {
                            "name": "CASE_DOCUMENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_DOCUMENT"
                        },
                        {
                            "name": "USER_ROLES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "USER_ROLES"
                        },
                        {
                            "name": "COMPANY_USER_ROLES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COMPANY_USER_ROLES"
                        },
                        {
                            "name": "COMPONENT_TYPES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COMPONENT_TYPES"
                        },
                        {
                            "name": "CASE_STATUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_STATUS"
                        },
                        {
                            "name": "CUSTOMER_STATUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CUSTOMER_STATUS"
                        },
                        {
                            "name": "DOCUMENT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DOCUMENT_TYPE"
                        },
                        {
                            "name": "CASE_DEPARTMENT_STATUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_DEPARTMENT_STATUS"
                        },
                        {
                            "name": "CASE_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_TYPE"
                        },
                        {
                            "name": "CASE_PRIORITY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_PRIORITY"
                        },
                        {
                            "name": "CASE_REM_ACCESS_SPECIFIER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_REM_ACCESS_SPECIFIER"
                        },
                        {
                            "name": "CASE_REMARK_ACTIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_REMARK_ACTIONS"
                        },
                        {
                            "name": "ARAI_DEPARTMENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ARAI_DEPARTMENTS"
                        },
                        {
                            "name": "PARTY_STATUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PARTY_STATUS"
                        },
                        {
                            "name": "CASE_DOCUMENT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_DOCUMENT_TYPE"
                        },
                        {
                            "name": "CASE_QUERY_TAGS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_QUERY_TAGS"
                        },
                        {
                            "name": "CLEARANCE_NOTE_STATUS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CLEARANCE_NOTE_STATUS"
                        },
                        {
                            "name": "CLEARANCE_MODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CLEARANCE_MODE"
                        },
                        {
                            "name": "CL_NOTE_TEST_RPT_UPLOADED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CL_NOTE_TEST_RPT_UPLOADED"
                        },
                        {
                            "name": "CL_NOTE_FINACE_CLEARED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CL_NOTE_FINACE_CLEARED"
                        },
                        {
                            "name": "SHORT_CLOSE_REASON",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHORT_CLOSE_REASON"
                        },
                        {
                            "name": "DISPATCH_TRANSPORT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DISPATCH_TRANSPORT_TYPE"
                        },
                        {
                            "name": "CASE_IMPACT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_IMPACT_TYPE"
                        },
                        {
                            "name": "CASE_QUERY_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CASE_QUERY_TYPE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "QUERY_TYPES_ID",
                    "childs": [
                        {
                            "name": "CQT_GENERIC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "11461"
                        },
                        {
                            "name": "CQT_DOCUMENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "11462"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "TAGS_TYPES_CODE",
                    "childs": [
                        {
                            "name": "OTHER_TAG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "OTHER_TAG"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "TAGS_TYPES_ID",
                    "childs": [
                        {
                            "name": "OTHER_TAG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "10960"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                },
                {
                    "name": "USER_ROLE_TYPE",
                    "childs": [
                        {
                            "name": "HMR_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "10923"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/db.constants.ts"
                }
            ],
            "src/app/constants/app-repo.constants.ts": [
                {
                    "name": "APP_SETTING",
                    "childs": [
                        {
                            "name": "DATE_FORMAT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "DATE_TIME_FORMAT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "USE_GLOBAL_DATE_TIME_FORMAT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "RESEND_OTP_TIME_SEC",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "USE_SAML",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MAX_USER_ADD_COUNT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ARAI_PAYMENT_URL",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "CASE_IMPACT_TYPE_ID",
                    "childs": [
                        {
                            "name": "NO_IMPACT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST_DELAY",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TEST_ON_HOLD",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CLEARANCE_ON_HOLD",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "CASE_STATUS",
                    "childs": [
                        {
                            "name": "DRAFT_CS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "IN_PROGRSS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "REJECTED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_APPROVED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SUBMITTED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "REVIEW",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ASSIGNED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CERTIFIED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "COMPLETED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ALLOCATED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ALLOTED_TO_ENGINEER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "FORWARDED_FOR_CERTIFICATE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CUSTOMER_CANCEL",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "UNDER_SHORT_CLOSE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SHORT_CLOSED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "PARTIAL_CLOSE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SHOR_CLOSE_VERIFICATION",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ON_GOING",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "FINAL_SCRUTINY",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "UNDER_CERTIFICATION",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "CONTROL_TYPE",
                    "childs": [
                        {
                            "name": "TEXTBOX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "textbox"
                        },
                        {
                            "name": "OPERATOR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "operator"
                        },
                        {
                            "name": "DATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "date"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "ENGINEER_WORKING_STATUS",
                    "childs": [
                        {
                            "name": "SCR_START",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SCR_STOP",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SCR_COMPLETED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "LOCAL_MASTER_DATA",
                    "childs": [
                        {
                            "name": "FILTER_OPERATORS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FILTER_OPERATORS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "MASTER_DATA",
                    "childs": [
                        {
                            "name": "FUEL_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "VEHICLE_CATEGORY",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "EMISSION_NORMS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "NATURE_OF_BUSINESS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ORGANIZATION_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "STATE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ACCOUNT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "DOCUMENT_SUBMISSION_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "REPORT_CERTIFICATES",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "OTHER_CERTIFICATES",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CMVR_CERTIFICATES",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TYPE_OF_CERTIFICATE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_DOCUMENT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "USER_ROLES",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "COMPANY_USER_ROLES",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "COMPONENT_TYPES",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_STATUS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CUSTOMER_STATUS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "DOCUMENT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_DEPARTMENT_STATUS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_PRIORITY",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_REM_ACCESS_SPECIFIER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_REMARK_ACTIONS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ARAI_DEPARTMENTS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "PARTY_STATUS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_DOCUMENT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "TAGGING_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CLEARANCE_NOTE_STATUS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CLEARANCE_MODE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CL_NOTE_TEST_RPT_UPLOADED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CL_NOTE_FINACE_CLEARED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "DISPATCH_TRANSPORT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_IMPACT_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CASE_QUERY_TYPE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "OPERATORS",
                    "childs": [
                        {
                            "name": "GRATER_THAN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": ">"
                        },
                        {
                            "name": "LESS_THAN_EQUAL_TO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "<="
                        },
                        {
                            "name": "GREATER_THAN_EQUAL_TO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": ">="
                        },
                        {
                            "name": "EQUAL_TO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "="
                        },
                        {
                            "name": "NOT_EQUAL_TO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "!="
                        },
                        {
                            "name": "BETWEEN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "between"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "QUERY_TYPES_ID",
                    "childs": [
                        {
                            "name": "CQT_GENERIC",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CQT_DOCUMENTS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "TAGS_TYPES_CODE",
                    "childs": [
                        {
                            "name": "OTHER_TAG",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                },
                {
                    "name": "TAGS_TYPES_ID",
                    "childs": [
                        {
                            "name": "OTHER_TAG",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/constants/app-repo.constants.ts"
                }
            ],
            "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts": [
                {
                    "name": "CLICK_EVENT",
                    "childs": [
                        {
                            "name": "ON_ITEM_CLICK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "item_click"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts"
                }
            ],
            "src/app/app-constants.ts": [
                {
                    "name": "FILTER_TYPE",
                    "childs": [
                        {
                            "name": "ADVANCE_FILTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "0"
                        },
                        {
                            "name": "QUICK_FILTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1"
                        },
                        {
                            "name": "DYNAMIC_FILTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "2"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                },
                {
                    "name": "GLOBAL_PARAM_KEY",
                    "childs": [
                        {
                            "name": "PERMIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Permit"
                        },
                        {
                            "name": "ELGIN_MAP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ELGIN_MAP"
                        },
                        {
                            "name": "CONDITIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CONDITIONS"
                        },
                        {
                            "name": "PERMIT_FORM",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PERMIT_FORM"
                        },
                        {
                            "name": "PERMIT_CONFIRMATION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PERMIT_CONFIRMATION"
                        },
                        {
                            "name": "REINSTATEMENT_ELGIN_MAP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REINSTATEMENT_ELGIN_MAP"
                        },
                        {
                            "name": "REINSTATEMENT_FORM",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REINSTATEMENT_FORM"
                        },
                        {
                            "name": "REINSTATEMENT__CONFIRMATION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REINSTATEMENT_CONFIRMATION"
                        },
                        {
                            "name": "VIEW_ELGIN_MAP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "VIEW_ELGIN_MAP"
                        },
                        {
                            "name": "VIEW_CONDITIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "VIEW_CONDITIONS"
                        },
                        {
                            "name": "VIEW_PERMIT_FORM",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "VIEW_PERMIT_FORM"
                        },
                        {
                            "name": "NEW_PERMIT_CONDITIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NEW_PERMIT_CONDITIONS"
                        },
                        {
                            "name": "NEW_PERMIT_PERMIT_FORM",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NEW_PERMIT_PERMIT_FORM"
                        },
                        {
                            "name": "APP_FILTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "App_Filters"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                },
                {
                    "name": "GLOBAL_PARAM_MODE",
                    "childs": [
                        {
                            "name": "PERMIT_VIEW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PERMIT_VIEW"
                        },
                        {
                            "name": "NEW_PERMIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NEW_PERMIT"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                },
                {
                    "name": "JOURNEY_TYPE",
                    "childs": [
                        {
                            "name": "NONE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "none"
                        },
                        {
                            "name": "SSM_START",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ssm_start"
                        },
                        {
                            "name": "SSM_STOP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ssm_stop"
                        },
                        {
                            "name": "SSM_REGISTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ssm_register"
                        },
                        {
                            "name": "IDM_2_4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "idm_2_4"
                        },
                        {
                            "name": "IDM_VISUAL_CORING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "idm_visual_coring"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                },
                {
                    "name": "LOCAL_STORAGE_DATA_KEY",
                    "childs": [
                        {
                            "name": "USERINFO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "userinfo"
                        },
                        {
                            "name": "SESSION_TOKEN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "sessionToken"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                },
                {
                    "name": "NAVIGATION_DATA",
                    "childs": [
                        {
                            "name": "SESSION_TOKEN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "elginSessionToken"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                },
                {
                    "name": "NAVIGATION_DATA",
                    "childs": [
                        {
                            "name": "CREATE_PERMIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "createPermit"
                        },
                        {
                            "name": "EDIT_PERMIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "editPermit"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                },
                {
                    "name": "SESSION_STORAGE_DATA_KEY",
                    "childs": [
                        {
                            "name": "USERINFO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "userinfo"
                        },
                        {
                            "name": "SESSION_TOKEN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "sessionToken"
                        },
                        {
                            "name": "NAVIGATION_DATA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PAGE_NAVIGATION_DATA"
                        },
                        {
                            "name": "USER_NAME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "username"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/app-constants.ts"
                }
            ],
            "src/app/models/common/user-types.ts": [
                {
                    "name": "USER_ROLES",
                    "childs": [
                        {
                            "name": "COMPANY_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COMPANY_ADMIN"
                        },
                        {
                            "name": "COMPANY_SUB_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COMPANY_SUB_ADMIN"
                        },
                        {
                            "name": "COMPANY_USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COMPANY_USER"
                        },
                        {
                            "name": "CMVR_TAS_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CMVR_TAS_ADMIN"
                        },
                        {
                            "name": "HMR_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "HMR_ADMIN"
                        },
                        {
                            "name": "PROJECT_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PROJECT_ADMIN"
                        },
                        {
                            "name": "CERTIFICATION_HOD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CERTIFICATION_HOD"
                        },
                        {
                            "name": "FILE_COORDINATOR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FILE_COORDINATOR"
                        },
                        {
                            "name": "CERTIFICATE_HANDLER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CERTIFICATE_HANDLER"
                        },
                        {
                            "name": "DEPT_HOD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DEPT_HOD"
                        },
                        {
                            "name": "DEPT_ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DEPT_ADMIN"
                        },
                        {
                            "name": "TEST_ENGINEER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "TEST_ENGINEER"
                        },
                        {
                            "name": "REPORT_HANDLER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REPORT_HANDLER"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/models/common/user-types.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/Utlity/DataHelper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DataHelper",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "REMEMBER_ME_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/http-error-interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpErrorInterceptorService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/app-repo.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppRepoModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/app-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppSettings",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/dropdown-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DropdownModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/error-codes.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ErrorCodes",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/master-data-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MasterDataModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/payload-error.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PayloadError",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/popup-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PopupModel",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/user-types.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserTypes",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/validators.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ValidationMessageModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/validators.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ValidationModel",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/models/common/validators.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ValidatorsModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/dto/user-management/login-request.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoginAPIRequest",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/dto/user-management/login-response.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LoginAPIResponse",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/models/task.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/57",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/company/company-form/company-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/51",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/company/company-form/company-form.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CompanyFormConfigModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/company/company-form/company-form.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CompanyFormDataModel",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MoreInfoFormConfigModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MoreInfoFormDataModel",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/more-info-link-data/more-info-link-data-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MoreInfoFormModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/more-info-link-data/more-info-link-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MoreInfoLinkDataComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performace-card1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PerformaceCard1Component",
                "coveragePercent": 0,
                "coverageCount": "0/46",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PerformanceCard1ConfigModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PerformanceCard1DataModel",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1-model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PerformanceCard1Data",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DebugMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelfDataLoad",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessBehavior",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performace-card1/performance-card1.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PerformanceCard2ConfigModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2-model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PerformanceCard2DataModel",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2-model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PerformanceCard2Data",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PerformanceCard2Component",
                "coveragePercent": 0,
                "coverageCount": "0/46",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DebugMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelfDataLoad",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-app/performance-card2/performance-card2.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/iwidget.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IHelpTextData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/iwidget.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWidget",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/iwidget.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWidgetConfig",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/iwidget.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWidgetGlobalDataAccess",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/iwidget.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWidgetSubmit",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/iwidgetpermission.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWidgetPermission",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-base.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "WidgetBase",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-component-base.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "WidgetComponentBase",
                "coveragePercent": 0,
                "coverageCount": "0/40",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-component-base.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-constants.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CategoryCodeConstant",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-constants.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FormModeConstant",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-constants.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WidgetConstants",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-constants.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WidgetPermissionConst",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WidgetHelper",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/widget-utility/widget-page-base.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WidgetPageBase",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/pipe/shortNumber/short-number.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ShortNumberPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipe/transform-date-time/transform-date-time.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "TransformDateTimePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipe/transform-date/transform-date.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "TransformDatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/api-error.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiErrorService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/app-repo-helper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppRepoHelperService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/app-repo.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppRepoService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/event-action.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EventActionService",
                "coveragePercent": 0,
                "coverageCount": "0/42",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/local-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/notification.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NotificationService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/server-api-interface-service.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ServerAPIErrorModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/server-api-interface-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ServerApiInterfaceServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/session-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SessionStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/startup.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StartUpService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/validation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ValidationService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common/validation.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "customRequiredValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/component-builder/component-builder.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ComponentBuilderService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}
